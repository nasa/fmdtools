<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="3" failures="6" skipped="3" tests="369" time="3121.914" timestamp="2025-06-05T17:21:17.671562-07:00" hostname="bamboo-r7.ndc.nasa.gov"><testcase classname="" name="examples.rover.optimization.search_rover" time="0.000"><error message="collection failure">fmdtools/analyze/history.py:254: in log
    hist[t_ind] = val
    ^^^^^^^^^^^
E   IndexError: index 101 is out of bounds for axis 0 with size 101

The above exception was the direct cause of the following exception:
examples/rover/optimization/search_rover.py:749: in &lt;module&gt;
    res_nom, mdlhists_nom = prop.nominal(mdl)
                            ^^^^^^^^^^^^^^^^^
fmdtools/sim/propagate.py:237: in nominal
    result, mdlhist, _, mdl, t_end = nom_helper(mdl, None, cut_hist=True, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fmdtools/sim/propagate.py:571: in nom_helper
    result, nommdlhist, mdls, t_end_nom = prop_one_scen(mdl,
fmdtools/sim/propagate.py:1106: in prop_one_scen
    mdl.log_hist(t_ind, t, shift)
fmdtools/define/block/base.py:231: in log_hist
    self.h.log(self, t_ind_rec, time=t)
fmdtools/analyze/history.py:258: in log
    raise Exception(obj_str + "Time beyond range of model" +
E   Exception: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)</error></testcase><testcase classname="" name="examples.rover.test_rover" time="0.000"><error message="collection failure">fmdtools/analyze/history.py:254: in log
    hist[t_ind] = val
    ^^^^^^^^^^^
E   IndexError: index 101 is out of bounds for axis 0 with size 101

The above exception was the direct cause of the following exception:
examples/rover/test_rover.py:18: in &lt;module&gt;
    from examples.rover.optimization.search_rover import line_dist, line_dist_faster
examples/rover/optimization/search_rover.py:749: in &lt;module&gt;
    res_nom, mdlhists_nom = prop.nominal(mdl)
                            ^^^^^^^^^^^^^^^^^
fmdtools/sim/propagate.py:237: in nominal
    result, mdlhist, _, mdl, t_end = nom_helper(mdl, None, cut_hist=True, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fmdtools/sim/propagate.py:571: in nom_helper
    result, nommdlhist, mdls, t_end_nom = prop_one_scen(mdl,
fmdtools/sim/propagate.py:1106: in prop_one_scen
    mdl.log_hist(t_ind, t, shift)
fmdtools/define/block/base.py:231: in log_hist
    self.h.log(self, t_ind_rec, time=t)
fmdtools/analyze/history.py:258: in log
    raise Exception(obj_str + "Time beyond range of model" +
E   Exception: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)</error><error message="collection failure">fmdtools/analyze/history.py:254: in log
    hist[t_ind] = val
    ^^^^^^^^^^^
E   IndexError: index 101 is out of bounds for axis 0 with size 101

The above exception was the direct cause of the following exception:
examples/rover/test_rover.py:18: in &lt;module&gt;
    from examples.rover.optimization.search_rover import line_dist, line_dist_faster
examples/rover/optimization/search_rover.py:749: in &lt;module&gt;
    res_nom, mdlhists_nom = prop.nominal(mdl)
                            ^^^^^^^^^^^^^^^^^
fmdtools/sim/propagate.py:237: in nominal
    result, mdlhist, _, mdl, t_end = nom_helper(mdl, None, cut_hist=True, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fmdtools/sim/propagate.py:571: in nom_helper
    result, nommdlhist, mdls, t_end_nom = prop_one_scen(mdl,
fmdtools/sim/propagate.py:1106: in prop_one_scen
    mdl.log_hist(t_ind, t, shift)
fmdtools/define/block/base.py:231: in log_hist
    self.h.log(self, t_ind_rec, time=t)
fmdtools/analyze/history.py:258: in log
    raise Exception(obj_str + "Time beyond range of model" +
E   Exception: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)</error></testcase><testcase classname="examples.asg_demo.Action_Sequence_Graph.ipynb" name="Action_Sequence_Graph.ipynb" time="19.635" /><testcase classname="examples.eps.EPS_Example_Notebook.ipynb" name="EPS_Example_Notebook.ipynb" time="12.603" /><testcase classname="examples.eps.test_eps.epsTests" name="test_all_faults" time="1.864" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_1" time="0.121" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_2" time="0.122" /><testcase classname="examples.eps.test_eps.epsTests" name="test_fault_app" time="285.547" /><testcase classname="examples.eps.test_eps.epsTests" name="test_multfault_saving" time="0.334" /><testcase classname="examples.eps.test_eps.epsTests" name="test_nominal_saving" time="0.257" /><testcase classname="examples.eps.test_eps.epsTests" name="test_pickleability" time="0.037" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_onefault" time="0.273" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_singlefaults" time="4.240" /><testcase classname="examples.multiflow_demo.Multiflow_and_Commsflow_Demonstration.ipynb" name="Multiflow_and_Commsflow_Demonstration.ipynb" time="7.548" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_combination" time="0.603" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_passing" time="0.507" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_mutliflow_copying" time="0.502" /><testcase classname="examples.multirotor.Demonstration.ipynb" name="Demonstration.ipynb" time="66.035" /><testcase classname="examples.multirotor.Multirotor_Optimization.ipynb" name="Multirotor_Optimization.ipynb" time="106.610" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.AffectDOF.inc_pos" time="0.009" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.assign_vectdist_to_goal" time="0.007" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.calc_dist_to_goal" time="0.007" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.SightGrid" time="0.496" /><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.AffectDOF.calc_pwr" time="0.013" /><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.LineArchParam" time="0.003" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.AffectDOF.static_behavior" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.CtlDOF.static_behavior" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.dist2d" time="0.003" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.unit_vect2d" time="0.003" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DistEE.static_behavior" time="0.008" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.HoldPayload.static_behavior" time="0.005" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.PlanPath.static_behavior" time="0.006" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_objectives" time="1.497" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_param_domain_1" time="0.004" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_param_domain_2" time="0.004" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_set_constraints_1" time="0.003" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_set_constraints_2" time="0.003" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_sim_mdl" time="0.935" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest" name="test_scenprob_results" time="1.899" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest2" name="test_scenprob_results" time="1.482" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest3" name="test_scenprob_results" time="1.533" /><testcase classname="examples.multirotor.test_multirotor.DroneDisturbanceTest" name="test_disturbance_set" time="0.595" /><testcase classname="examples.pump.Optimization.ipynb" name="Optimization.ipynb" time="144.227" /><testcase classname="examples.pump.Parallelism_Tutorial.ipynb" name="Parallelism_Tutorial.ipynb" time="137.303" /><testcase classname="examples.pump.Pump_Example_Notebook.ipynb" name="Pump_Example_Notebook.ipynb" time="46.003" /><testcase classname="examples.pump.Tutorial_complete.ipynb" name="Tutorial_complete.ipynb" time="18.254" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.accumulate" time="0.003" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.reseting_accumulate" time="0.002" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_app_prop_values" time="1.629" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_cost_calc" time="113.619" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_parallelism" time="51.637" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values" time="1.319" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values_2" time="1.768" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_isave" time="14.461" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_save" time="13.974" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fmea_options" time="2.445" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_hist_tracking_setup" time="0.150" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_different" time="6.828" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_same" time="11.677" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/pump/test_pump.py:137: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_isave" time="147.571" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_save" time="147.217" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nominal_save" time="0.595" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_csv" time="0.393" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_json" time="0.388" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_pickle" time="0.395" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_onefault_save" time="1.203" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample" time="0.046" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_isave" time="5.391" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_save" time="5.737" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_pickleability" time="0.048" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_multfault" time="1.065" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_isave" time="4.930" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_save" time="4.773" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting" time="0.040" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting_dict" time="0.040" /><testcase classname="examples.pump.test_pump.IndivPumpTests" name="test_mutable_setup" time="0.073" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_inf_v" time="0.004" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_no_v" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_hi" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_initialization" time="0.003" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_condfaults_dynamic" time="0.005" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_initialization" time="0.004" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_nom" time="0.005" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_results" time="0.490" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_static" time="0.045" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_nominal_results" time="0.240" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_mdl_pickle" time="0.657" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_different" time="9.020" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_same" time="10.680" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_reset" time="0.001"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/pump/test_pump_stochastic.py:117: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_set_vars" time="0.038" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_isave" time="271.299" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_save" time="277.684" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_isave" time="4.423" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_save" time="4.719" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nested_hists" time="34.989" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals" time="3.969" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals_xd" time="174.991" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_rand_paramsample_plot" time="8.674" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_approach" time="301.581" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_safety" time="17.190" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_set_seeds" time="0.109" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_stochastic_pdf" time="0.078" /><testcase classname="examples.rover.FaultSample_Use-Cases.ipynb" name="FaultSample_Use-Cases.ipynb" time="9.232"><failure message="#x1B[31mException#x1B[39m: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)">---------------------------------------------------------------------------
res, hist = prop.nominal(Rover())
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mIndexError#x1B[39m                                Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:254#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    253#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m254#x1B[39m     #x1B[43mhist#x1B[49m#x1B[43m[#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m]#x1B[49m = val
#x1B[32m    255#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:

#x1B[31mIndexError#x1B[39m: index 101 is out of bounds for axis 0 with size 101

The above exception was the direct cause of the following exception:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[12]#x1B[39m#x1B[32m, line 1#x1B[39m
#x1B[32m----&gt; #x1B[39m#x1B[32m1#x1B[39m res, hist = #x1B[43mprop#x1B[49m#x1B[43m.#x1B[49m#x1B[43mnominal#x1B[49m#x1B[43m(#x1B[49m#x1B[43mRover#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:237#x1B[39m, in #x1B[36mnominal#x1B[39m#x1B[34m(mdl, **kwargs)#x1B[39m
#x1B[32m    208#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34mnominal#x1B[39m(mdl, **kwargs):
#x1B[32m    209#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    210#x1B[39m #x1B[33;03m    Run the model over time in the nominal scenario.#x1B[39;00m
#x1B[32m    211#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    235#x1B[39m #x1B[33;03m        A History dict with a history of modelstates#x1B[39;00m
#x1B[32m    236#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m237#x1B[39m     result, mdlhist, _, mdl, t_end = #x1B[43mnom_helper#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mNone#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mcut_hist#x1B[49m#x1B[43m=#x1B[49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    238#x1B[39m     save_helper(kwargs.get(#x1B[33m'#x1B[39m#x1B[33msave_args#x1B[39m#x1B[33m'#x1B[39m, {}), result, mdlhist)
#x1B[32m    239#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m result, mdlhist

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:571#x1B[39m, in #x1B[36mnom_helper#x1B[39m#x1B[34m(mdl, ctimes, protect, save_args, mdl_kwargs, scen, warn_faults, **kwargs)#x1B[39m
#x1B[32m    568#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m    569#x1B[39m     ctimes = []
#x1B[32m--&gt; #x1B[39m#x1B[32m571#x1B[39m result, nommdlhist, mdls, t_end_nom = #x1B[43mprop_one_scen#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    572#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mnomscen#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    573#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m=#x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    574#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    576#x1B[39m endfaultprops = mdl.return_faultmodes()
#x1B[32m    577#x1B[39m endfaults = [*endfaultprops]

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:1106#x1B[39m, in #x1B[36mprop_one_scen#x1B[39m#x1B[34m(mdl, scen, ctimes, nomhist, nomresult, **kwargs)#x1B[39m
#x1B[32m   1103#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[32m   1104#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mError in scenario #x1B[39m#x1B[33m"#x1B[39m + #x1B[38;5;28mstr#x1B[39m(scen)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m-&gt; #x1B[39m#x1B[32m1106#x1B[39m #x1B[43mmdl#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog_hist#x1B[49m#x1B[43m(#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mshift#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m   1108#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mtype#x1B[39m(desired_result) #x1B[38;5;129;01mis#x1B[39;00m #x1B[38;5;28mdict#x1B[39m:
#x1B[32m   1109#x1B[39m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[33m"#x1B[39m#x1B[33mall#x1B[39m#x1B[33m"#x1B[39m #x1B[38;5;129;01min#x1B[39;00m desired_result:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/base.py:231#x1B[39m, in #x1B[36mSimulable.log_hist#x1B[39m#x1B[34m(self, t_ind, t, shift)#x1B[39m
#x1B[32m    229#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mself#x1B[39m.sp.track_times:
#x1B[32m    230#x1B[39m     t_ind_rec = #x1B[38;5;28mself#x1B[39m.sp.get_hist_ind(t_ind, t, shift)
#x1B[32m--&gt; #x1B[39m#x1B[32m231#x1B[39m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mh#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt_ind_rec#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtime#x1B[49m#x1B[43m=#x1B[49m#x1B[43mt#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:258#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    256#x1B[39m obj_str = #x1B[33m"#x1B[39m#x1B[33mError logging obj #x1B[39m#x1B[33m"#x1B[39m+obj.#x1B[34m__class__#x1B[39m.#x1B[34m__name__#x1B[39m+#x1B[33m"#x1B[39m#x1B[33m: #x1B[39m#x1B[33m"#x1B[39m
#x1B[32m    257#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m t_ind &gt;= #x1B[38;5;28mlen#x1B[39m(hist):
#x1B[32m--&gt; #x1B[39m#x1B[32m258#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[33m"#x1B[39m#x1B[33mTime beyond range of model#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    259#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mhistory--check staged execution #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    260#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mand simulation time settings#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    261#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33m (end condition, mdl.sp.end_time)#x1B[39m#x1B[33m"#x1B[39m) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m    262#x1B[39m #x1B[38;5;28;01melif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m np.can_cast(#x1B[38;5;28mtype#x1B[39m(val), #x1B[38;5;28mtype#x1B[39m(hist[t_ind])):
#x1B[32m    263#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[38;5;28mstr#x1B[39m(att)+#x1B[33m"#x1B[39m#x1B[33m changed type: #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    264#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(hist[t_ind])) + #x1B[33m"#x1B[39m#x1B[33m to #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    265#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(val)) + #x1B[33m"#x1B[39m#x1B[33m at t_ind=#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    266#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(t_ind)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m

#x1B[31mException#x1B[39m: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)</failure></testcase><testcase classname="examples.rover.HFAC_Analyses.IDETC_Human_Paper_Analysis.ipynb" name="IDETC_Human_Paper_Analysis.ipynb" time="14.382"><failure message="#x1B[31mException#x1B[39m: Error logging obj RoverHuman: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)">---------------------------------------------------------------------------
mdl = RoverHuman(p={'ground': 'turn'})
endresults, mdlhist = prop.nominal(mdl)
plot_map(mdl, mdlhist)
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mIndexError#x1B[39m                                Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:254#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    253#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m254#x1B[39m     #x1B[43mhist#x1B[49m#x1B[43m[#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m]#x1B[49m = val
#x1B[32m    255#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:

#x1B[31mIndexError#x1B[39m: index 101 is out of bounds for axis 0 with size 101

The above exception was the direct cause of the following exception:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[10]#x1B[39m#x1B[32m, line 2#x1B[39m
#x1B[32m      1#x1B[39m mdl = RoverHuman(p={#x1B[33m'#x1B[39m#x1B[33mground#x1B[39m#x1B[33m'#x1B[39m: #x1B[33m'#x1B[39m#x1B[33mturn#x1B[39m#x1B[33m'#x1B[39m})
#x1B[32m----&gt; #x1B[39m#x1B[32m2#x1B[39m endresults, mdlhist = #x1B[43mprop#x1B[49m#x1B[43m.#x1B[49m#x1B[43mnominal#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m      3#x1B[39m plot_map(mdl, mdlhist)

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:237#x1B[39m, in #x1B[36mnominal#x1B[39m#x1B[34m(mdl, **kwargs)#x1B[39m
#x1B[32m    208#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34mnominal#x1B[39m(mdl, **kwargs):
#x1B[32m    209#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    210#x1B[39m #x1B[33;03m    Run the model over time in the nominal scenario.#x1B[39;00m
#x1B[32m    211#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    235#x1B[39m #x1B[33;03m        A History dict with a history of modelstates#x1B[39;00m
#x1B[32m    236#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m237#x1B[39m     result, mdlhist, _, mdl, t_end = #x1B[43mnom_helper#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mNone#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mcut_hist#x1B[49m#x1B[43m=#x1B[49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    238#x1B[39m     save_helper(kwargs.get(#x1B[33m'#x1B[39m#x1B[33msave_args#x1B[39m#x1B[33m'#x1B[39m, {}), result, mdlhist)
#x1B[32m    239#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m result, mdlhist

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:571#x1B[39m, in #x1B[36mnom_helper#x1B[39m#x1B[34m(mdl, ctimes, protect, save_args, mdl_kwargs, scen, warn_faults, **kwargs)#x1B[39m
#x1B[32m    568#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m    569#x1B[39m     ctimes = []
#x1B[32m--&gt; #x1B[39m#x1B[32m571#x1B[39m result, nommdlhist, mdls, t_end_nom = #x1B[43mprop_one_scen#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    572#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mnomscen#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    573#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m=#x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    574#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    576#x1B[39m endfaultprops = mdl.return_faultmodes()
#x1B[32m    577#x1B[39m endfaults = [*endfaultprops]

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:1106#x1B[39m, in #x1B[36mprop_one_scen#x1B[39m#x1B[34m(mdl, scen, ctimes, nomhist, nomresult, **kwargs)#x1B[39m
#x1B[32m   1103#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[32m   1104#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mError in scenario #x1B[39m#x1B[33m"#x1B[39m + #x1B[38;5;28mstr#x1B[39m(scen)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m-&gt; #x1B[39m#x1B[32m1106#x1B[39m #x1B[43mmdl#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog_hist#x1B[49m#x1B[43m(#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mshift#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m   1108#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mtype#x1B[39m(desired_result) #x1B[38;5;129;01mis#x1B[39;00m #x1B[38;5;28mdict#x1B[39m:
#x1B[32m   1109#x1B[39m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[33m"#x1B[39m#x1B[33mall#x1B[39m#x1B[33m"#x1B[39m #x1B[38;5;129;01min#x1B[39;00m desired_result:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/base.py:231#x1B[39m, in #x1B[36mSimulable.log_hist#x1B[39m#x1B[34m(self, t_ind, t, shift)#x1B[39m
#x1B[32m    229#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mself#x1B[39m.sp.track_times:
#x1B[32m    230#x1B[39m     t_ind_rec = #x1B[38;5;28mself#x1B[39m.sp.get_hist_ind(t_ind, t, shift)
#x1B[32m--&gt; #x1B[39m#x1B[32m231#x1B[39m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mh#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt_ind_rec#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtime#x1B[49m#x1B[43m=#x1B[49m#x1B[43mt#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:258#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    256#x1B[39m obj_str = #x1B[33m"#x1B[39m#x1B[33mError logging obj #x1B[39m#x1B[33m"#x1B[39m+obj.#x1B[34m__class__#x1B[39m.#x1B[34m__name__#x1B[39m+#x1B[33m"#x1B[39m#x1B[33m: #x1B[39m#x1B[33m"#x1B[39m
#x1B[32m    257#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m t_ind &gt;= #x1B[38;5;28mlen#x1B[39m(hist):
#x1B[32m--&gt; #x1B[39m#x1B[32m258#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[33m"#x1B[39m#x1B[33mTime beyond range of model#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    259#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mhistory--check staged execution #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    260#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mand simulation time settings#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    261#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33m (end condition, mdl.sp.end_time)#x1B[39m#x1B[33m"#x1B[39m) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m    262#x1B[39m #x1B[38;5;28;01melif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m np.can_cast(#x1B[38;5;28mtype#x1B[39m(val), #x1B[38;5;28mtype#x1B[39m(hist[t_ind])):
#x1B[32m    263#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[38;5;28mstr#x1B[39m(att)+#x1B[33m"#x1B[39m#x1B[33m changed type: #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    264#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(hist[t_ind])) + #x1B[33m"#x1B[39m#x1B[33m to #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    265#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(val)) + #x1B[33m"#x1B[39m#x1B[33m at t_ind=#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    266#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(t_ind)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m

#x1B[31mException#x1B[39m: Error logging obj RoverHuman: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)</failure></testcase><testcase classname="examples.rover.Model_Structure_Visualization_Tutorial.ipynb" name="Model_Structure_Visualization_Tutorial.ipynb" time="70.012" /><testcase classname="examples.rover.ParameterSample_Use-Cases.ipynb" name="ParameterSample_Use-Cases.ipynb" time="10.082"><failure message="#x1B[31mException#x1B[39m: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)">---------------------------------------------------------------------------
p = RoverParam(ground=dict(linetype="turn"))
mdl = Rover(p=p)
results, mdlhist = prop.nominal(mdl)
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mIndexError#x1B[39m                                Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:254#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    253#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m254#x1B[39m     #x1B[43mhist#x1B[49m#x1B[43m[#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m]#x1B[49m = val
#x1B[32m    255#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:

#x1B[31mIndexError#x1B[39m: index 101 is out of bounds for axis 0 with size 101

The above exception was the direct cause of the following exception:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[5]#x1B[39m#x1B[32m, line 3#x1B[39m
#x1B[32m      1#x1B[39m p = RoverParam(ground=#x1B[38;5;28mdict#x1B[39m(linetype=#x1B[33m"#x1B[39m#x1B[33mturn#x1B[39m#x1B[33m"#x1B[39m))
#x1B[32m      2#x1B[39m mdl = Rover(p=p)
#x1B[32m----&gt; #x1B[39m#x1B[32m3#x1B[39m results, mdlhist = #x1B[43mprop#x1B[49m#x1B[43m.#x1B[49m#x1B[43mnominal#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:237#x1B[39m, in #x1B[36mnominal#x1B[39m#x1B[34m(mdl, **kwargs)#x1B[39m
#x1B[32m    208#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34mnominal#x1B[39m(mdl, **kwargs):
#x1B[32m    209#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    210#x1B[39m #x1B[33;03m    Run the model over time in the nominal scenario.#x1B[39;00m
#x1B[32m    211#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    235#x1B[39m #x1B[33;03m        A History dict with a history of modelstates#x1B[39;00m
#x1B[32m    236#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m237#x1B[39m     result, mdlhist, _, mdl, t_end = #x1B[43mnom_helper#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mNone#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mcut_hist#x1B[49m#x1B[43m=#x1B[49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    238#x1B[39m     save_helper(kwargs.get(#x1B[33m'#x1B[39m#x1B[33msave_args#x1B[39m#x1B[33m'#x1B[39m, {}), result, mdlhist)
#x1B[32m    239#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m result, mdlhist

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:571#x1B[39m, in #x1B[36mnom_helper#x1B[39m#x1B[34m(mdl, ctimes, protect, save_args, mdl_kwargs, scen, warn_faults, **kwargs)#x1B[39m
#x1B[32m    568#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m    569#x1B[39m     ctimes = []
#x1B[32m--&gt; #x1B[39m#x1B[32m571#x1B[39m result, nommdlhist, mdls, t_end_nom = #x1B[43mprop_one_scen#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    572#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mnomscen#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    573#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m=#x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    574#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    576#x1B[39m endfaultprops = mdl.return_faultmodes()
#x1B[32m    577#x1B[39m endfaults = [*endfaultprops]

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:1106#x1B[39m, in #x1B[36mprop_one_scen#x1B[39m#x1B[34m(mdl, scen, ctimes, nomhist, nomresult, **kwargs)#x1B[39m
#x1B[32m   1103#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[32m   1104#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mError in scenario #x1B[39m#x1B[33m"#x1B[39m + #x1B[38;5;28mstr#x1B[39m(scen)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m-&gt; #x1B[39m#x1B[32m1106#x1B[39m #x1B[43mmdl#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog_hist#x1B[49m#x1B[43m(#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mshift#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m   1108#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mtype#x1B[39m(desired_result) #x1B[38;5;129;01mis#x1B[39;00m #x1B[38;5;28mdict#x1B[39m:
#x1B[32m   1109#x1B[39m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[33m"#x1B[39m#x1B[33mall#x1B[39m#x1B[33m"#x1B[39m #x1B[38;5;129;01min#x1B[39;00m desired_result:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/base.py:231#x1B[39m, in #x1B[36mSimulable.log_hist#x1B[39m#x1B[34m(self, t_ind, t, shift)#x1B[39m
#x1B[32m    229#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mself#x1B[39m.sp.track_times:
#x1B[32m    230#x1B[39m     t_ind_rec = #x1B[38;5;28mself#x1B[39m.sp.get_hist_ind(t_ind, t, shift)
#x1B[32m--&gt; #x1B[39m#x1B[32m231#x1B[39m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mh#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt_ind_rec#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtime#x1B[49m#x1B[43m=#x1B[49m#x1B[43mt#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:258#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    256#x1B[39m obj_str = #x1B[33m"#x1B[39m#x1B[33mError logging obj #x1B[39m#x1B[33m"#x1B[39m+obj.#x1B[34m__class__#x1B[39m.#x1B[34m__name__#x1B[39m+#x1B[33m"#x1B[39m#x1B[33m: #x1B[39m#x1B[33m"#x1B[39m
#x1B[32m    257#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m t_ind &gt;= #x1B[38;5;28mlen#x1B[39m(hist):
#x1B[32m--&gt; #x1B[39m#x1B[32m258#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[33m"#x1B[39m#x1B[33mTime beyond range of model#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    259#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mhistory--check staged execution #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    260#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mand simulation time settings#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    261#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33m (end condition, mdl.sp.end_time)#x1B[39m#x1B[33m"#x1B[39m) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m    262#x1B[39m #x1B[38;5;28;01melif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m np.can_cast(#x1B[38;5;28mtype#x1B[39m(val), #x1B[38;5;28mtype#x1B[39m(hist[t_ind])):
#x1B[32m    263#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[38;5;28mstr#x1B[39m(att)+#x1B[33m"#x1B[39m#x1B[33m changed type: #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    264#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(hist[t_ind])) + #x1B[33m"#x1B[39m#x1B[33m to #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    265#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(val)) + #x1B[33m"#x1B[39m#x1B[33m at t_ind=#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    266#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(t_ind)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m

#x1B[31mException#x1B[39m: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)</failure></testcase><testcase classname="examples.rover.Rover_Setup_Notebook.ipynb" name="Rover_Setup_Notebook.ipynb" time="11.464"><failure message="#x1B[31mException#x1B[39m: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)">---------------------------------------------------------------------------
mdl = Rover(p=RoverParam(ground = GroundParam(linetype='turn')))
endresults, mdlhist = prop.nominal(mdl)
mdlhist.plot_trajectories('pos.s.x', 'pos.s.y')
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mIndexError#x1B[39m                                Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:254#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    253#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m254#x1B[39m     #x1B[43mhist#x1B[49m#x1B[43m[#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m]#x1B[49m = val
#x1B[32m    255#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:

#x1B[31mIndexError#x1B[39m: index 101 is out of bounds for axis 0 with size 101

The above exception was the direct cause of the following exception:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[7]#x1B[39m#x1B[32m, line 2#x1B[39m
#x1B[32m      1#x1B[39m mdl = Rover(p=RoverParam(ground = GroundParam(linetype=#x1B[33m'#x1B[39m#x1B[33mturn#x1B[39m#x1B[33m'#x1B[39m)))
#x1B[32m----&gt; #x1B[39m#x1B[32m2#x1B[39m endresults, mdlhist = #x1B[43mprop#x1B[49m#x1B[43m.#x1B[49m#x1B[43mnominal#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m      3#x1B[39m mdlhist.plot_trajectories(#x1B[33m'#x1B[39m#x1B[33mpos.s.x#x1B[39m#x1B[33m'#x1B[39m, #x1B[33m'#x1B[39m#x1B[33mpos.s.y#x1B[39m#x1B[33m'#x1B[39m)

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:237#x1B[39m, in #x1B[36mnominal#x1B[39m#x1B[34m(mdl, **kwargs)#x1B[39m
#x1B[32m    208#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34mnominal#x1B[39m(mdl, **kwargs):
#x1B[32m    209#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    210#x1B[39m #x1B[33;03m    Run the model over time in the nominal scenario.#x1B[39;00m
#x1B[32m    211#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    235#x1B[39m #x1B[33;03m        A History dict with a history of modelstates#x1B[39;00m
#x1B[32m    236#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m237#x1B[39m     result, mdlhist, _, mdl, t_end = #x1B[43mnom_helper#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mNone#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mcut_hist#x1B[49m#x1B[43m=#x1B[49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    238#x1B[39m     save_helper(kwargs.get(#x1B[33m'#x1B[39m#x1B[33msave_args#x1B[39m#x1B[33m'#x1B[39m, {}), result, mdlhist)
#x1B[32m    239#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m result, mdlhist

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:571#x1B[39m, in #x1B[36mnom_helper#x1B[39m#x1B[34m(mdl, ctimes, protect, save_args, mdl_kwargs, scen, warn_faults, **kwargs)#x1B[39m
#x1B[32m    568#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m    569#x1B[39m     ctimes = []
#x1B[32m--&gt; #x1B[39m#x1B[32m571#x1B[39m result, nommdlhist, mdls, t_end_nom = #x1B[43mprop_one_scen#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    572#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mnomscen#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    573#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m=#x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    574#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    576#x1B[39m endfaultprops = mdl.return_faultmodes()
#x1B[32m    577#x1B[39m endfaults = [*endfaultprops]

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:1106#x1B[39m, in #x1B[36mprop_one_scen#x1B[39m#x1B[34m(mdl, scen, ctimes, nomhist, nomresult, **kwargs)#x1B[39m
#x1B[32m   1103#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[32m   1104#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mError in scenario #x1B[39m#x1B[33m"#x1B[39m + #x1B[38;5;28mstr#x1B[39m(scen)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m-&gt; #x1B[39m#x1B[32m1106#x1B[39m #x1B[43mmdl#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog_hist#x1B[49m#x1B[43m(#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mshift#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m   1108#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mtype#x1B[39m(desired_result) #x1B[38;5;129;01mis#x1B[39;00m #x1B[38;5;28mdict#x1B[39m:
#x1B[32m   1109#x1B[39m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[33m"#x1B[39m#x1B[33mall#x1B[39m#x1B[33m"#x1B[39m #x1B[38;5;129;01min#x1B[39;00m desired_result:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/base.py:231#x1B[39m, in #x1B[36mSimulable.log_hist#x1B[39m#x1B[34m(self, t_ind, t, shift)#x1B[39m
#x1B[32m    229#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mself#x1B[39m.sp.track_times:
#x1B[32m    230#x1B[39m     t_ind_rec = #x1B[38;5;28mself#x1B[39m.sp.get_hist_ind(t_ind, t, shift)
#x1B[32m--&gt; #x1B[39m#x1B[32m231#x1B[39m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mh#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt_ind_rec#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtime#x1B[49m#x1B[43m=#x1B[49m#x1B[43mt#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:258#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    256#x1B[39m obj_str = #x1B[33m"#x1B[39m#x1B[33mError logging obj #x1B[39m#x1B[33m"#x1B[39m+obj.#x1B[34m__class__#x1B[39m.#x1B[34m__name__#x1B[39m+#x1B[33m"#x1B[39m#x1B[33m: #x1B[39m#x1B[33m"#x1B[39m
#x1B[32m    257#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m t_ind &gt;= #x1B[38;5;28mlen#x1B[39m(hist):
#x1B[32m--&gt; #x1B[39m#x1B[32m258#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[33m"#x1B[39m#x1B[33mTime beyond range of model#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    259#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mhistory--check staged execution #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    260#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mand simulation time settings#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    261#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33m (end condition, mdl.sp.end_time)#x1B[39m#x1B[33m"#x1B[39m) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m    262#x1B[39m #x1B[38;5;28;01melif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m np.can_cast(#x1B[38;5;28mtype#x1B[39m(val), #x1B[38;5;28mtype#x1B[39m(hist[t_ind])):
#x1B[32m    263#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[38;5;28mstr#x1B[39m(att)+#x1B[33m"#x1B[39m#x1B[33m changed type: #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    264#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(hist[t_ind])) + #x1B[33m"#x1B[39m#x1B[33m to #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    265#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(val)) + #x1B[33m"#x1B[39m#x1B[33m at t_ind=#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    266#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(t_ind)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m

#x1B[31mException#x1B[39m: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)</failure></testcase><testcase classname="examples.rover.degradation_modelling.Degradation_Modelling_Notebook.ipynb" name="Degradation_Modelling_Notebook.ipynb" time="10.808"><failure message="#x1B[31mException#x1B[39m: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)">---------------------------------------------------------------------------
endresults, mdlhist = prop.nominal(fault_mdl)
fig, ax = plot_map(fault_mdl, mdlhist)
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mIndexError#x1B[39m                                Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:254#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    253#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m254#x1B[39m     #x1B[43mhist#x1B[49m#x1B[43m[#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m]#x1B[49m = val
#x1B[32m    255#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:

#x1B[31mIndexError#x1B[39m: index 101 is out of bounds for axis 0 with size 101

The above exception was the direct cause of the following exception:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[8]#x1B[39m#x1B[32m, line 1#x1B[39m
#x1B[32m----&gt; #x1B[39m#x1B[32m1#x1B[39m endresults, mdlhist = #x1B[43mprop#x1B[49m#x1B[43m.#x1B[49m#x1B[43mnominal#x1B[49m#x1B[43m(#x1B[49m#x1B[43mfault_mdl#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m      2#x1B[39m fig, ax = plot_map(fault_mdl, mdlhist)

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:237#x1B[39m, in #x1B[36mnominal#x1B[39m#x1B[34m(mdl, **kwargs)#x1B[39m
#x1B[32m    208#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34mnominal#x1B[39m(mdl, **kwargs):
#x1B[32m    209#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    210#x1B[39m #x1B[33;03m    Run the model over time in the nominal scenario.#x1B[39;00m
#x1B[32m    211#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    235#x1B[39m #x1B[33;03m        A History dict with a history of modelstates#x1B[39;00m
#x1B[32m    236#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m237#x1B[39m     result, mdlhist, _, mdl, t_end = #x1B[43mnom_helper#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mNone#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mcut_hist#x1B[49m#x1B[43m=#x1B[49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    238#x1B[39m     save_helper(kwargs.get(#x1B[33m'#x1B[39m#x1B[33msave_args#x1B[39m#x1B[33m'#x1B[39m, {}), result, mdlhist)
#x1B[32m    239#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m result, mdlhist

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:571#x1B[39m, in #x1B[36mnom_helper#x1B[39m#x1B[34m(mdl, ctimes, protect, save_args, mdl_kwargs, scen, warn_faults, **kwargs)#x1B[39m
#x1B[32m    568#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m    569#x1B[39m     ctimes = []
#x1B[32m--&gt; #x1B[39m#x1B[32m571#x1B[39m result, nommdlhist, mdls, t_end_nom = #x1B[43mprop_one_scen#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    572#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mnomscen#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    573#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m=#x1B[49m#x1B[43mctimes#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    574#x1B[39m #x1B[43m                                                    #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    576#x1B[39m endfaultprops = mdl.return_faultmodes()
#x1B[32m    577#x1B[39m endfaults = [*endfaultprops]

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:1106#x1B[39m, in #x1B[36mprop_one_scen#x1B[39m#x1B[34m(mdl, scen, ctimes, nomhist, nomresult, **kwargs)#x1B[39m
#x1B[32m   1103#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[32m   1104#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mError in scenario #x1B[39m#x1B[33m"#x1B[39m + #x1B[38;5;28mstr#x1B[39m(scen)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m-&gt; #x1B[39m#x1B[32m1106#x1B[39m #x1B[43mmdl#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog_hist#x1B[49m#x1B[43m(#x1B[49m#x1B[43mt_ind#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mshift#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m   1108#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mtype#x1B[39m(desired_result) #x1B[38;5;129;01mis#x1B[39;00m #x1B[38;5;28mdict#x1B[39m:
#x1B[32m   1109#x1B[39m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[33m"#x1B[39m#x1B[33mall#x1B[39m#x1B[33m"#x1B[39m #x1B[38;5;129;01min#x1B[39;00m desired_result:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/base.py:231#x1B[39m, in #x1B[36mSimulable.log_hist#x1B[39m#x1B[34m(self, t_ind, t, shift)#x1B[39m
#x1B[32m    229#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mself#x1B[39m.sp.track_times:
#x1B[32m    230#x1B[39m     t_ind_rec = #x1B[38;5;28mself#x1B[39m.sp.get_hist_ind(t_ind, t, shift)
#x1B[32m--&gt; #x1B[39m#x1B[32m231#x1B[39m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mh#x1B[49m#x1B[43m.#x1B[49m#x1B[43mlog#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mt_ind_rec#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtime#x1B[49m#x1B[43m=#x1B[49m#x1B[43mt#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/history.py:258#x1B[39m, in #x1B[36mHistory.log#x1B[39m#x1B[34m(self, obj, t_ind, time)#x1B[39m
#x1B[32m    256#x1B[39m obj_str = #x1B[33m"#x1B[39m#x1B[33mError logging obj #x1B[39m#x1B[33m"#x1B[39m+obj.#x1B[34m__class__#x1B[39m.#x1B[34m__name__#x1B[39m+#x1B[33m"#x1B[39m#x1B[33m: #x1B[39m#x1B[33m"#x1B[39m
#x1B[32m    257#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m t_ind &gt;= #x1B[38;5;28mlen#x1B[39m(hist):
#x1B[32m--&gt; #x1B[39m#x1B[32m258#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[33m"#x1B[39m#x1B[33mTime beyond range of model#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    259#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mhistory--check staged execution #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    260#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33mand simulation time settings#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    261#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33m (end condition, mdl.sp.end_time)#x1B[39m#x1B[33m"#x1B[39m) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m    262#x1B[39m #x1B[38;5;28;01melif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m np.can_cast(#x1B[38;5;28mtype#x1B[39m(val), #x1B[38;5;28mtype#x1B[39m(hist[t_ind])):
#x1B[32m    263#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(obj_str + #x1B[38;5;28mstr#x1B[39m(att)+#x1B[33m"#x1B[39m#x1B[33m changed type: #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    264#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(hist[t_ind])) + #x1B[33m"#x1B[39m#x1B[33m to #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    265#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mtype#x1B[39m(val)) + #x1B[33m"#x1B[39m#x1B[33m at t_ind=#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    266#x1B[39m                     #x1B[38;5;28mstr#x1B[39m(t_ind)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m

#x1B[31mException#x1B[39m: Error logging obj Rover: Time beyond range of modelhistory--check staged execution and simulation time settings (end condition, mdl.sp.end_time)</failure></testcase><testcase classname="examples.rover.rover_model" name="examples.rover.rover_model.Drive.drive_nominal" time="0.083" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Comprehend" time="0.007" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Decide" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.HumanActions" time="0.026" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Look" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Percieve" time="0.006" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Press" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Project" time="0.006" /><testcase classname="examples.tank.Tank_Analysis.ipynb" name="Tank_Analysis.ipynb" time="46.977" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach" time="10.522" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_0" time="9.447" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_1" time="25.047" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_notrack" time="10.593" /><testcase classname="examples.tank.test_tank.TankTests" name="test_comp_mode_inj" time="0.255" /><testcase classname="examples.tank.test_tank.TankTests" name="test_different_components" time="0.131" /><testcase classname="examples.tank.test_tank.TankTests" name="test_epc_math" time="0.088" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_isave" time="12.070" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_save" time="10.227" /><testcase classname="examples.tank.test_tank.TankTests" name="test_local_tstep" time="0.781" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_different" time="2.499" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_same" time="5.968" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/tank/test_tank.py:69: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_isave" time="105.394" /><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_save" time="103.684" /><testcase classname="examples.tank.test_tank.TankTests" name="test_param_sample_save" time="3.046" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_multfault" time="0.653" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nominal" time="0.422" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_onefault" time="0.661" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_singlefaults" time="2.713" /><testcase classname="examples.tank.test_tank.TankTests" name="test_singlefaults_isave" time="2.817" /><testcase classname="examples.tank.test_tank.TankTests" name="test_tank_copy_args" time="0.123" /><testcase classname="examples.taxiway.Paper_Notebook.ipynb" name="Paper_Notebook.ipynb" time="34.234" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid" time="0.267" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid_plot" time="1.015" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle" time="0.112" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle_plot" time="0.602" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight" time="1.464" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight_plot" time="1.638" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle" time="0.184" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle_plot" time="0.556" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception" time="4.971" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception_plot" time="5.609" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command" time="5.955" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_lost_sight" time="6.449" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_sight_plot" time="10.209" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_default_plots" time="6.753" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_scen" time="1.945" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.auto_filetype" time="0.009" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_average" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_expected" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_metric" time="0.004" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_metric_ci" time="0.024" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_percent" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_rate" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_sum" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_total" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.create_indiv_filename" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.diff" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.join_key" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.to_include_keys" time="0.003" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph" time="0.638" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.add_node_groups" time="0.132" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.set_heatmap" time="0.650" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.ModelGraph" time="0.011" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.create_inheritance_subgraph" time="0.006" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.FlowEdgeStyle" time="0.003" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.edge_style_factory" time="0.602" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.node_style_factory" time="1.262" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.to_legend_label" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History" time="0.005" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.cut" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_degraded_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_fault_time" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_faulty_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_bound_errhist" time="0.005" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_ci_errhist" time="0.013" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_std_errhist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_percentile_errhist" time="0.008" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_slice" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_modephase_time" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_phase_time" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_samples_in_phases" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.find_modephase" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_phase_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_sample_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.find_interval_overlap" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.from_hist" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.join_phasemaps" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__eq__" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__sub__" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.align_external_dict" time="0.002" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.fromdict" time="0.002" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_metric" time="0.005" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_metric_ci" time="0.009" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_vals" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.is_flat" time="0.002" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.Comparison" time="1.650" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.FMEA" time="0.057" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.result_summary" time="0.150" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.result_summary_fmea" time="0.582" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureActGraph" time="0.008" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureFlowGraph" time="0.006" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureGraph" time="0.009" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitecture" time="0.009" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFlowGraph" time="0.010" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFxnGraph" time="0.011" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureGraph" time="0.013" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureTypeGraph" time="0.008" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture" time="0.006" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture.all_at" time="0.011" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.is_bool" time="0.002" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.is_numeric" time="0.002" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.nan_to_x" time="0.002" /><testcase classname="fmdtools.define.block.action" name="fmdtools.define.block.action.Action" time="0.004" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_hist_ind" time="0.003" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_shift" time="0.003" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_timerange" time="0.003" /><testcase classname="fmdtools.define.block.function" name="fmdtools.define.block.function.Function" time="0.005" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.assign" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.copy" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.create_hist" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.get_field_dict" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.set_field" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.to_default" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.check_container_pick" time="0.002" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Fault.calc_rate" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.HumanErrorMode" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode.add_fault" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode.get_fault" time="0.002" /><testcase classname="fmdtools.define.container.parameter" name="fmdtools.define.container.parameter.Parameter" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand" time="0.005" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand.get_rand_states" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_density_for_random" time="0.002" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_choice" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_integers" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_permuted" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_shuffle_permutation" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_exp_ray_pdf" time="0.004" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_hypergeometric_pmf" time="0.005" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_lognormal_pdf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_prob_for_rand" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_standard_t_pdf" time="0.005" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_triangular_pdf" time="0.005" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.add" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.div" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.get" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.gett" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.inc" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.limit" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.mul" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.put" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.roundto" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.same" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.set_atts" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.sub" time="0.002" /><testcase classname="fmdtools.define.container.time" name="fmdtools.define.container.time.Time" time="0.004" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment" time="0.021"><failure message="042     ga: GeomArch&#10;043         Representaion of shapes/forms&#10;044 &#10;045     Examples&#10;046     --------&#10;047     &gt;&gt;&gt; class ExampleEnvironment(Environment):&#10;048     ...    coords_c = ExampleCoords&#10;049     ...    arch_ga = ExGeomArch&#10;050     &gt;&gt;&gt; env = ExampleEnvironment('env')&#10;051     &gt;&gt;&gt; env.create_hist([1.0])&#10;Differences (unified diff with -expected +actual):&#10;    @@ -1,5 +1,8 @@&#10;     c.r.probdens:                   array(1)&#10;     c.st:                           array(1)&#10;    -ga.points.ex_point:             array(1)&#10;    -ga.lines.ex_line:               array(1)&#10;    -ga.polys.ex_poly:               array(1)&#10;    +ga.points.ex_point.s.occupied: array(101)&#10;    +ga.points.ex_point.s.buffer_around: array(101)&#10;    +ga.lines.ex_line.s.occupied:  array(101)&#10;    +ga.lines.ex_line.s.buffer_around: array(101)&#10;    +ga.polys.ex_poly.s.occupied:  array(101)&#10;    +ga.polys.ex_poly.s.buffer_around: array(101)&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/environment.py:51: DocTestFailure">042     ga: GeomArch
043         Representaion of shapes/forms
044 
045     Examples
046     --------
047     &gt;&gt;&gt; class ExampleEnvironment(Environment):
048     ...    coords_c = ExampleCoords
049     ...    arch_ga = ExGeomArch
050     &gt;&gt;&gt; env = ExampleEnvironment('env')
051     &gt;&gt;&gt; env.create_hist([1.0])
Differences (unified diff with -expected +actual):
    @@ -1,5 +1,8 @@
     c.r.probdens:                   array(1)
     c.st:                           array(1)
    -ga.points.ex_point:             array(1)
    -ga.lines.ex_line:               array(1)
    -ga.polys.ex_poly:               array(1)
    +ga.points.ex_point.s.occupied: array(101)
    +ga.points.ex_point.s.buffer_around: array(101)
    +ga.lines.ex_line.s.occupied:  array(101)
    +ga.lines.ex_line.s.buffer_around: array(101)
    +ga.polys.ex_poly.s.occupied:  array(101)
    +ga.polys.ex_poly.s.buffer_around: array(101)

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/environment.py:51: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment.copy" time="0.044" /><testcase classname="fmdtools.define.flow.base" name="fmdtools.define.flow.base.Flow" time="0.004" /><testcase classname="fmdtools.define.flow.commsflow" name="fmdtools.define.flow.commsflow.CommsFlow" time="0.005" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow" time="0.004" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.create_hist" time="0.005" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.get_view" time="0.004" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject" time="0.005" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.assign_roles" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_att_roletype" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_node_attrs" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_prop" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_props" time="0.006" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_neighbors" time="0.008" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_properties" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_pts" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_range" time="0.008" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_gridpoint" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_index" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords" time="0.007" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.copy" time="0.006" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_all" time="0.006" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_closest" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.in_area" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.set_rand_pts" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.CoordsParam" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.MetricCoords" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.all_at" time="0.006" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_at_shape" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_to_shape" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomLine" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomLine.get_args" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoint" time="0.006" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoint.get_args" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoly" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoly.get_args" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.LineParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PointParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PolyParam" time="0.003" /><testcase classname="fmdtools.define.object.timer" name="fmdtools.define.object.timer.Timer" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.BaseSample.get_metric" time="0.008" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all" time="0.011" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxn_modes" time="0.009" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxnclass_modes" time="0.011" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_fault" time="0.011" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_fault_space" time="0.011" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_faults" time="0.009" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_singlecomp_modes" time="0.045" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_phases" time="0.042" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_times" time="0.045" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_joint_fault_scenario" time="0.042" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_single_fault_scenario" time="0.041" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain.get_var_iters" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterHistSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterResultSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_ranges" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_replicates" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_scenario" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_orthogonal" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_product" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_random" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultdomain" time="0.056" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultsample" time="0.098" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_orthogonal" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_random" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_even" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_quad" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence.update_sequence" time="0.002" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.SingleFaultScenario.from_fault" time="0.002" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.BaseProblem.get_opt_hist" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.DisturbanceProblem" time="0.029" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.HistoryObjective" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ParameterSimProblem" time="0.154" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture" time="0.066" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_full_problem" time="0.047" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_problem" time="0.029" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResponseCoords" time="0.005" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultConstraint.con_from_value" time="0.002" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultObjective.get_result_value" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SimpleProblem" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SingleFaultScenarioProblem" time="0.028" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fault_plot" time="0.652" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_flowgraph_plot" time="0.649" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fxngraph_plot" time="0.527" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_modelgraph_plot" time="0.632" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_result_from_plot" time="0.559" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_typegraph_plot" time="0.192" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_fault_injection" time="0.012" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_prop_method" time="0.311" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_propagation" time="0.013" /><testcase classname="tests.test_packages.define_Tests" name="test_pdf_translation_options" time="0.010" /></testsuite></testsuites>