<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="3" failures="33" skipped="3" tests="316" time="4608.619" timestamp="2024-12-18T16:45:52.170390+00:00" hostname="7ca09b1e7b0f"><testcase classname="" name="examples.multirotor.opt_drone_rural" time="0.000"><error message="collection failure">examples/multirotor/opt_drone_rural.py:47: in &lt;module&gt;
    def_mdl = Drone()
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/multirotor/drone_mdl_rural.py:700: in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
fmdtools/define/architecture/base.py:197: in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/environment.py:69: in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
fmdtools/define/flow/commsflow.py:103: in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
fmdtools/define/flow/multiflow.py:110: in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
fmdtools/define/object/base.py:190: in __init__
    self.init_roletypes(*roletypes, **kwargs)
fmdtools/define/object/base.py:251: in init_roletypes
    self.init_roles(roletype, **kwargs)
fmdtools/define/object/base.py:296: in init_roles
    container = container_initializer(**container_args)
fmdtools/define/object/coords.py:948: in __init__
    self.init_properties(*args, **kwargs)
examples/multirotor/drone_mdl_dynamic.py:90: in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
fmdtools/define/object/coords.py:411: in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
fmdtools/define/object/coords.py:188: in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
E   Exception: Outside bounds of grid: 0.0,160</error></testcase><testcase classname="" name="examples.multirotor.test_multirotor" time="0.000"><error message="collection failure">examples/multirotor/test_multirotor.py:47: in &lt;module&gt;
    ex_soc_opt = ParameterSimProblem(Drone(track=None), expd1, 'nominal')
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/multirotor/drone_mdl_rural.py:700: in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
fmdtools/define/architecture/base.py:197: in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/environment.py:69: in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
fmdtools/define/flow/commsflow.py:103: in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
fmdtools/define/flow/multiflow.py:110: in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
fmdtools/define/object/base.py:190: in __init__
    self.init_roletypes(*roletypes, **kwargs)
fmdtools/define/object/base.py:251: in init_roletypes
    self.init_roles(roletype, **kwargs)
fmdtools/define/object/base.py:296: in init_roles
    container = container_initializer(**container_args)
fmdtools/define/object/coords.py:948: in __init__
    self.init_properties(*args, **kwargs)
examples/multirotor/drone_mdl_dynamic.py:90: in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
fmdtools/define/object/coords.py:411: in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
fmdtools/define/object/coords.py:188: in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
E   Exception: Outside bounds of grid: 0.0,160</error><error message="collection failure">examples/multirotor/test_multirotor.py:47: in &lt;module&gt;
    ex_soc_opt = ParameterSimProblem(Drone(track=None), expd1, 'nominal')
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/multirotor/drone_mdl_rural.py:700: in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
fmdtools/define/architecture/base.py:197: in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/environment.py:69: in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
fmdtools/define/flow/commsflow.py:103: in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
fmdtools/define/flow/multiflow.py:110: in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
fmdtools/define/object/base.py:190: in __init__
    self.init_roletypes(*roletypes, **kwargs)
fmdtools/define/object/base.py:251: in init_roletypes
    self.init_roles(roletype, **kwargs)
fmdtools/define/object/base.py:296: in init_roles
    container = container_initializer(**container_args)
fmdtools/define/object/coords.py:948: in __init__
    self.init_properties(*args, **kwargs)
examples/multirotor/drone_mdl_dynamic.py:90: in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
fmdtools/define/object/coords.py:411: in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
fmdtools/define/object/coords.py:188: in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
E   Exception: Outside bounds of grid: 0.0,160</error></testcase><testcase classname="examples.asg_demo.Action_Sequence_Graph.ipynb" name="" time="18.431" /><testcase classname="examples.eps.EPS_Example_Notebook.ipynb" name="" time="13.716" /><testcase classname="examples.eps.test_eps.epsTests" name="test_all_faults" time="1.655" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_1" time="0.105" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_2" time="0.110" /><testcase classname="examples.eps.test_eps.epsTests" name="test_fault_app" time="304.512" /><testcase classname="examples.eps.test_eps.epsTests" name="test_multfault_saving" time="0.310" /><testcase classname="examples.eps.test_eps.epsTests" name="test_nominal_saving" time="0.232" /><testcase classname="examples.eps.test_eps.epsTests" name="test_pickleability" time="0.026" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_onefault" time="0.355" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_singlefaults" time="5.046" /><testcase classname="examples.multiflow_demo.Multiflow_and_Commsflow_Demonstration.ipynb" name="" time="8.854"><failure message="#x1B[0;31mException#x1B[0m: Error in scenario Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)">---------------------------------------------------------------------------
mdl.flows["communications"].mover_1.s.x=25
mdl.flows["communications"].mover_1.send("mover_2")
from fmdtools.sim import propagate

result, mdlhist = propagate.nominal(mdl,track='all', desired_result={'graph': FunctionArchitectureGraph})
#fig = result.graph.draw(figsize=(8,6)) #graph can be drawn, but it's the same as before since it's nominal
mdlhist
#x1B[0;31m---------------------------------------------------------------------------#x1B[0m
#x1B[0;31mAttributeError#x1B[0m                            Traceback (most recent call last)
File #x1B[0;32m/fmdtools/fmdtools/define/architecture/function.py:782#x1B[0m, in #x1B[0;36mFunctionArchitecture.propagate#x1B[0;34m(self, time, fxnfaults, disturbances, run_stochastic)#x1B[0m
#x1B[1;32m    781#x1B[0m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[0;32m--&gt; 782#x1B[0m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mprop_static#x1B[49m#x1B[43m(#x1B[49m#x1B[43mtime#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mrun_stochastic#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mrun_stochastic#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    783#x1B[0m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/function.py:812#x1B[0m, in #x1B[0;36mFunctionArchitecture.prop_static#x1B[0;34m(self, time, run_stochastic)#x1B[0m
#x1B[1;32m    811#x1B[0m oldmutables #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mfxns[fxnname]#x1B[38;5;241m.#x1B[39mreturn_mutables()
#x1B[0;32m--&gt; 812#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mfxns#x1B[49m#x1B[43m[#x1B[49m#x1B[43mfxnname#x1B[49m#x1B[43m]#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[38;5;124;43mstatic#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtime#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtime#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mrun_stochastic#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mrun_stochastic#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    813#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m oldmutables #x1B[38;5;241m!=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mfxns[fxnname]#x1B[38;5;241m.#x1B[39mreturn_mutables():

File #x1B[0;32m/fmdtools/fmdtools/define/block/function.py:189#x1B[0m, in #x1B[0;36mFunction.__call__#x1B[0;34m(self, proptype, faults, time, run_stochastic)#x1B[0m
#x1B[1;32m    188#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m proptype #x1B[38;5;241m==#x1B[39m #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mstatic#x1B[39m#x1B[38;5;124m'#x1B[39m #x1B[38;5;129;01mand#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mstatic_behavior#x1B[39m#x1B[38;5;124m'#x1B[39m):
#x1B[0;32m--&gt; 189#x1B[0m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mstatic_behavior#x1B[49m#x1B[43m(#x1B[49m#x1B[43mtime#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    190#x1B[0m #x1B[38;5;28;01melif#x1B[39;00m proptype #x1B[38;5;241m==#x1B[39m #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdynamic#x1B[39m#x1B[38;5;124m'#x1B[39m #x1B[38;5;129;01mand#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdynamic_behavior#x1B[39m#x1B[38;5;124m'#x1B[39m) #x1B[38;5;129;01mand#x1B[39;00m time #x1B[38;5;241m&gt;#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mt#x1B[38;5;241m.#x1B[39mtime:

File #x1B[0;32m/fmdtools/examples/multiflow_demo/multiflow_demo.py:69#x1B[0m, in #x1B[0;36mMover.static_behavior#x1B[0;34m(self, time)#x1B[0m
#x1B[1;32m     68#x1B[0m     #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minternal_info#x1B[38;5;241m.#x1B[39ms#x1B[38;5;241m.#x1B[39mx #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mloc#x1B[38;5;241m.#x1B[39ms#x1B[38;5;241m.#x1B[39mx
#x1B[0;32m---&gt; 69#x1B[0m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minternal_info#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43msend#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mall#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mlocal#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mx#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m)#x1B[49m
#x1B[1;32m     70#x1B[0m #x1B[38;5;28;01melif#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39my_up #x1B[38;5;241m!=#x1B[39m #x1B[38;5;241m0.0#x1B[39m:

File #x1B[0;32m/fmdtools/fmdtools/define/flow/commsflow.py:185#x1B[0m, in #x1B[0;36mCommsFlow.send#x1B[0;34m(self, fxn_to, fxn_from, *states)#x1B[0m
#x1B[1;32m    184#x1B[0m port_out #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mget_port(fxn_from, f_to, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mout#x1B[39m#x1B[38;5;124m"#x1B[39m)
#x1B[0;32m--&gt; 185#x1B[0m #x1B[43mport_out#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43ms#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43massign#x1B[49m#x1B[43m(#x1B[49m#x1B[43mport_internal#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43ms#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mstates#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mas_copy#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m)#x1B[49m
#x1B[1;32m    187#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m fxn_from #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mglob#x1B[38;5;241m.#x1B[39mfxns[f_to][#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mreceived#x1B[39m#x1B[38;5;124m"#x1B[39m]:

File #x1B[0;32m/fmdtools/fmdtools/define/container/base.py:263#x1B[0m, in #x1B[0;36mBaseContainer.assign#x1B[0;34m(self, obj, as_copy, *fields, **fielddict)#x1B[0m
#x1B[1;32m    231#x1B[0m #x1B[38;5;250m#x1B[39m#x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m    232#x1B[0m #x1B[38;5;124;03mSet the same-named values of the current object to those of another.#x1B[39;00m
#x1B[1;32m    233#x1B[0m 
#x1B[0;32m   (...)#x1B[0m
#x1B[1;32m    261#x1B[0m #x1B[38;5;124;03m    set to True for dicts/sets to be copied rather than referenced#x1B[39;00m
#x1B[1;32m    262#x1B[0m #x1B[38;5;124;03m"""#x1B[39;00m
#x1B[0;32m--&gt; 263#x1B[0m fielddict #x1B[38;5;241m=#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mget_field_dict#x1B[49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mfields#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mfielddict#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    264#x1B[0m #x1B[38;5;28;01mfor#x1B[39;00m field, value #x1B[38;5;129;01min#x1B[39;00m fielddict#x1B[38;5;241m.#x1B[39mitems():

File #x1B[0;32m/fmdtools/fmdtools/define/container/base.py:217#x1B[0m, in #x1B[0;36mBaseContainer.get_field_dict#x1B[0;34m(self, obj, *fields, **fielddict)#x1B[0m
#x1B[1;32m    215#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m fielddict:
#x1B[1;32m    216#x1B[0m     #x1B[38;5;66;03m# if states provided, only assign those states#x1B[39;00m
#x1B[0;32m--&gt; 217#x1B[0m     fielddict #x1B[38;5;241m=#x1B[39m #x1B[43m{#x1B[49m#x1B[43ms#x1B[49m#x1B[43m:#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43mgetattr#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43ms#x1B[49m#x1B[43m)#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mfor#x1B[39;49;00m#x1B[43m #x1B[49m#x1B[43ms#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;129;43;01min#x1B[39;49;00m#x1B[43m #x1B[49m#x1B[43mfields#x1B[49m#x1B[43m}#x1B[49m
#x1B[1;32m    218#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    219#x1B[0m     #x1B[38;5;66;03m# if kwarg states provided, assign keys to values#x1B[39;00m

File #x1B[0;32m/fmdtools/fmdtools/define/container/base.py:217#x1B[0m, in #x1B[0;36m&lt;dictcomp&gt;#x1B[0;34m(.0)#x1B[0m
#x1B[1;32m    215#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m fielddict:
#x1B[1;32m    216#x1B[0m     #x1B[38;5;66;03m# if states provided, only assign those states#x1B[39;00m
#x1B[0;32m--&gt; 217#x1B[0m     fielddict #x1B[38;5;241m=#x1B[39m {s: #x1B[38;5;28;43mgetattr#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43ms#x1B[49m#x1B[43m)#x1B[49m #x1B[38;5;28;01mfor#x1B[39;00m s #x1B[38;5;129;01min#x1B[39;00m fields}
#x1B[1;32m    218#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    219#x1B[0m     #x1B[38;5;66;03m# if kwarg states provided, assign keys to values#x1B[39;00m

#x1B[0;31mAttributeError#x1B[0m: 'LocationState' object has no attribute 'local'

The above exception was the direct cause of the following exception:

#x1B[0;31mException#x1B[0m                                 Traceback (most recent call last)
File #x1B[0;32m/fmdtools/fmdtools/sim/propagate.py:1111#x1B[0m, in #x1B[0;36mprop_one_scen#x1B[0;34m(mdl, scen, ctimes, nomhist, nomresult, **kwargs)#x1B[0m
#x1B[1;32m   1110#x1B[0m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[0;32m-&gt; 1111#x1B[0m     #x1B[43mmdl#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mpropagate#x1B[49m#x1B[43m(#x1B[49m#x1B[43mt#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mfxnfaults#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mdisturbances#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mrun_stochastic#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mrun_stochastic#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m   1112#x1B[0m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/function.py:784#x1B[0m, in #x1B[0;36mFunctionArchitecture.propagate#x1B[0;34m(self, time, fxnfaults, disturbances, run_stochastic)#x1B[0m
#x1B[1;32m    783#x1B[0m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[0;32m--&gt; 784#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mError in static propagation at time t=#x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m #x1B[38;5;28mstr#x1B[39m(time)) #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01me#x1B[39;00m

#x1B[0;31mException#x1B[0m: Error in static propagation at time t=0.0

The above exception was the direct cause of the following exception:

#x1B[0;31mException#x1B[0m                                 Traceback (most recent call last)
Cell #x1B[0;32mIn[10], line 5#x1B[0m
#x1B[1;32m      2#x1B[0m mdl#x1B[38;5;241m.#x1B[39mflows[#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mcommunications#x1B[39m#x1B[38;5;124m"#x1B[39m]#x1B[38;5;241m.#x1B[39mmover_1#x1B[38;5;241m.#x1B[39msend(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mmover_2#x1B[39m#x1B[38;5;124m"#x1B[39m)
#x1B[1;32m      3#x1B[0m #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01mfmdtools#x1B[39;00m#x1B[38;5;21;01m.#x1B[39;00m#x1B[38;5;21;01msim#x1B[39;00m #x1B[38;5;28;01mimport#x1B[39;00m propagate
#x1B[0;32m----&gt; 5#x1B[0m result, mdlhist #x1B[38;5;241m=#x1B[39m #x1B[43mpropagate#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mnominal#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[38;5;124;43mall#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mdesired_result#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43m{#x1B[49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[38;5;124;43mgraph#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[43m:#x1B[49m#x1B[43m #x1B[49m#x1B[43mFunctionArchitectureGraph#x1B[49m#x1B[43m}#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m      6#x1B[0m #x1B[38;5;66;03m#fig = result.graph.draw(figsize=(8,6)) #graph can be drawn, but it's the same as before since it's nominal#x1B[39;00m
#x1B[1;32m      7#x1B[0m mdlhist

File #x1B[0;32m/fmdtools/fmdtools/sim/propagate.py:237#x1B[0m, in #x1B[0;36mnominal#x1B[0;34m(mdl, **kwargs)#x1B[0m
#x1B[1;32m    208#x1B[0m #x1B[38;5;28;01mdef#x1B[39;00m #x1B[38;5;21mnominal#x1B[39m(mdl, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs):
#x1B[1;32m    209#x1B[0m #x1B[38;5;250m    #x1B[39m#x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m    210#x1B[0m #x1B[38;5;124;03m    Run the model over time in the nominal scenario.#x1B[39;00m
#x1B[1;32m    211#x1B[0m 
#x1B[0;32m   (...)#x1B[0m
#x1B[1;32m    235#x1B[0m #x1B[38;5;124;03m        A History dict with a history of modelstates#x1B[39;00m
#x1B[1;32m    236#x1B[0m #x1B[38;5;124;03m    """#x1B[39;00m
#x1B[0;32m--&gt; 237#x1B[0m     result, mdlhist, _, mdl, t_end #x1B[38;5;241m=#x1B[39m #x1B[43mnom_helper#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mNone#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mcut_hist#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    238#x1B[0m     save_helper(kwargs#x1B[38;5;241m.#x1B[39mget(#x1B[38;5;124m'#x1B[39m#x1B[38;5;124msave_args#x1B[39m#x1B[38;5;124m'#x1B[39m, {}), result, mdlhist)
#x1B[1;32m    239#x1B[0m     #x1B[38;5;28;01mreturn#x1B[39;00m result, mdlhist

File #x1B[0;32m/fmdtools/fmdtools/sim/propagate.py:574#x1B[0m, in #x1B[0;36mnom_helper#x1B[0;34m(mdl, ctimes, protect, save_args, mdl_kwargs, scen, warn_faults, **kwargs)#x1B[0m
#x1B[1;32m    571#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    572#x1B[0m     ctimes #x1B[38;5;241m=#x1B[39m []
#x1B[0;32m--&gt; 574#x1B[0m result, nommdlhist, mdls, t_end_nom #x1B[38;5;241m=#x1B[39m #x1B[43mprop_one_scen#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    575#x1B[0m #x1B[43m                                                    #x1B[49m#x1B[43mnomscen#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    576#x1B[0m #x1B[43m                                                    #x1B[49m#x1B[43mctimes#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mctimes#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    577#x1B[0m #x1B[43m                                                    #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    579#x1B[0m endfaults, endfaultprops #x1B[38;5;241m=#x1B[39m mdl#x1B[38;5;241m.#x1B[39mreturn_faultmodes()
#x1B[1;32m    580#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28many#x1B[39m(endfaults) #x1B[38;5;129;01mand#x1B[39;00m warn_faults:

File #x1B[0;32m/fmdtools/fmdtools/sim/propagate.py:1113#x1B[0m, in #x1B[0;36mprop_one_scen#x1B[0;34m(mdl, scen, ctimes, nomhist, nomresult, **kwargs)#x1B[0m
#x1B[1;32m   1111#x1B[0m     mdl#x1B[38;5;241m.#x1B[39mpropagate(t, fxnfaults, disturbances, run_stochastic#x1B[38;5;241m=#x1B[39mrun_stochastic)
#x1B[1;32m   1112#x1B[0m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[0;32m-&gt; 1113#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mError in scenario #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m #x1B[38;5;28mstr#x1B[39m(scen)) #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01me#x1B[39;00m
#x1B[1;32m   1115#x1B[0m mdl#x1B[38;5;241m.#x1B[39mlog_hist(t_ind, t, shift)
#x1B[1;32m   1117#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mtype#x1B[39m(desired_result) #x1B[38;5;129;01mis#x1B[39;00m #x1B[38;5;28mdict#x1B[39m:

#x1B[0;31mException#x1B[0m: Error in scenario Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)</failure></testcase><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_combination" time="0.044"><failure message="Exception: Error in scenario Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)">self = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

time = 0.0, fxnfaults = {}, disturbances = {}, run_stochastic = False

    def propagate(self, time, fxnfaults={}, disturbances={}, run_stochastic=False):
        """
        Inject and propagates faults through the graph at one time-step.
    
        Parameters
        ----------
        time : float
            The current time-step.
        fxnfaults : dict
            Faults to inject during this propagation step.
            With structure {'function':['fault1', 'fault2'...]}
        disturbances : dict
            Variables to change during this propagation step.
            With structure {'function.var1':value}
        run_stochastic : bool
            Whether to run stochastic behaviors or use default values. Default is False.
            Can set as 'track_pdf' to calculate/track the probability densities of
            random states over time.
        """
        # Step 0: Update model states with disturbances
        self.set_vars(**disturbances)
    
        # Step 1: Run Dynamic Propagation Methods in Order Specified
        # Inject Faults if Applicable
        for fxnname in self.dynamicfxns.union(fxnfaults.keys()):
            fxn = self.fxns[fxnname]
            faults = fxnfaults.get(fxnname, [])
            if not isinstance(faults, list):
                faults = [faults]
            fxn('dynamic', faults=faults, time=time, run_stochastic=run_stochastic)
    
        # Step 2: Run Static Propagation Methods
        try:
&gt;           self.prop_static(time, run_stochastic=run_stochastic)

fmdtools/define/architecture/function.py:782: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:812: in prop_static
    self.fxns[fxnname]('static', time=time, run_stochastic=run_stochastic)
fmdtools/define/block/function.py:189: in __call__
    self.static_behavior(time)
examples/multiflow_demo/multiflow_demo.py:69: in static_behavior
    self.internal_info.send("all", "local", "x")
fmdtools/define/flow/commsflow.py:185: in send
    port_out.s.assign(port_internal.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7fe2cc10&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'LocationState' object has no attribute 'local'

fmdtools/define/container/base.py:217: AttributeError

The above exception was the direct cause of the following exception:

mdl = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

scen = Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)
ctimes = [], nomhist = {}, nomresult = {}, kwargs = {'cut_hist': True}
desired_result = 'endclass', staged = False, cut_hist = True
run_stochastic = False, use_end_condition = True, warn_faults = True
start_time = 0

    def prop_one_scen(mdl, scen, ctimes=[], nomhist={}, nomresult={}, **kwargs):
        """
        Simulate a single scenario in the model over time.
    
        Parameters
        ----------
        mdl : Simulable
            The model to inject faults in.
        scen : Scenario
            The Scenario to run.
        ctimes : list, optional
            List of times to copy the model (for use in staged execution).
            The default is [].
        nomhist : dict, optional
            Model history dictionary from previous runs, for use in creating the new
            mdlhist. The default is {}.
        nomresult : dict, optional
            Nominal result dictionary (to compare with current if desired)
        **kwargs : kwargs
            simulation options, see :data:`sim_kwargs`
        Returns
        -------
        result: Result
            dict of result corresponding to desired_result.
        mdlhist : dict
            A dictionary with a history of modelstates.
        c_mdl : dict
            A dictionary of models at each time given in ctimes with structure {time:model}
        t_end: float
            Last sim time
        """
        desired_result, staged, cut_hist, run_stochastic, use_end_condition, warn_faults = unpack_sim_kwargs(**kwargs)
        # if staged, we want it to start a new run from the starting time of the scenario,
        # using a copy of the input model (which is the nominal run) at this time
        if staged:
            start_time = scen.time
        else:
            start_time = 0
        timerange = mdl.sp.get_timerange(start_time)
        # check if sequence is out of timerange
        for t in scen['sequence']:
            if t not in timerange:
                raise Exception("t="+str(t)+" from sequence not in timerange: "
                                + str(timerange))
        shift = mdl.sp.get_shift(start_time)
        mdl.init_time_hist()
        # run model through the time range defined in the object
        c_mdl = dict.fromkeys(ctimes)
        result = Result()
        for t_ind, t in enumerate(timerange):
            # inject fault when it occurs, track defined flow states and graph
            try:
                if t in ctimes:
                    c_mdl[t] = mdl.copy()
                if t in scen['sequence']:
                    fxnfaults = scen['sequence'][t].get('faults', {})
                    disturbances = scen['sequence'][t].get('disturbances', {})
                else:
                    fxnfaults = {}
                    disturbances = {}
                try:
&gt;                   mdl.propagate(t, fxnfaults, disturbances, run_stochastic=run_stochastic)

fmdtools/sim/propagate.py:1111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

time = 0.0, fxnfaults = {}, disturbances = {}, run_stochastic = False

    def propagate(self, time, fxnfaults={}, disturbances={}, run_stochastic=False):
        """
        Inject and propagates faults through the graph at one time-step.
    
        Parameters
        ----------
        time : float
            The current time-step.
        fxnfaults : dict
            Faults to inject during this propagation step.
            With structure {'function':['fault1', 'fault2'...]}
        disturbances : dict
            Variables to change during this propagation step.
            With structure {'function.var1':value}
        run_stochastic : bool
            Whether to run stochastic behaviors or use default values. Default is False.
            Can set as 'track_pdf' to calculate/track the probability densities of
            random states over time.
        """
        # Step 0: Update model states with disturbances
        self.set_vars(**disturbances)
    
        # Step 1: Run Dynamic Propagation Methods in Order Specified
        # Inject Faults if Applicable
        for fxnname in self.dynamicfxns.union(fxnfaults.keys()):
            fxn = self.fxns[fxnname]
            faults = fxnfaults.get(fxnname, [])
            if not isinstance(faults, list):
                faults = [faults]
            fxn('dynamic', faults=faults, time=time, run_stochastic=run_stochastic)
    
        # Step 2: Run Static Propagation Methods
        try:
            self.prop_static(time, run_stochastic=run_stochastic)
        except Exception as e:
&gt;           raise Exception("Error in static propagation at time t=" + str(time)) from e
E           Exception: Error in static propagation at time t=0.0

fmdtools/define/architecture/function.py:784: Exception

The above exception was the direct cause of the following exception:

self = &lt;examples.multiflow_demo.test_multiflow.define_Tests testMethod=test_multiflow_combination&gt;

    def setUp(self):
        self.mdl = ExModel()
&gt;       self.endresults, self.mdlhist = propagate.nominal(self.mdl)

examples/multiflow_demo/test_multiflow.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/sim/propagate.py:237: in nominal
    result, mdlhist, _, mdl, t_end = nom_helper(mdl, None, cut_hist=True, **kwargs)
fmdtools/sim/propagate.py:574: in nom_helper
    result, nommdlhist, mdls, t_end_nom = prop_one_scen(mdl,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

mdl = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

scen = Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)
ctimes = [], nomhist = {}, nomresult = {}, kwargs = {'cut_hist': True}
desired_result = 'endclass', staged = False, cut_hist = True
run_stochastic = False, use_end_condition = True, warn_faults = True
start_time = 0

    def prop_one_scen(mdl, scen, ctimes=[], nomhist={}, nomresult={}, **kwargs):
        """
        Simulate a single scenario in the model over time.
    
        Parameters
        ----------
        mdl : Simulable
            The model to inject faults in.
        scen : Scenario
            The Scenario to run.
        ctimes : list, optional
            List of times to copy the model (for use in staged execution).
            The default is [].
        nomhist : dict, optional
            Model history dictionary from previous runs, for use in creating the new
            mdlhist. The default is {}.
        nomresult : dict, optional
            Nominal result dictionary (to compare with current if desired)
        **kwargs : kwargs
            simulation options, see :data:`sim_kwargs`
        Returns
        -------
        result: Result
            dict of result corresponding to desired_result.
        mdlhist : dict
            A dictionary with a history of modelstates.
        c_mdl : dict
            A dictionary of models at each time given in ctimes with structure {time:model}
        t_end: float
            Last sim time
        """
        desired_result, staged, cut_hist, run_stochastic, use_end_condition, warn_faults = unpack_sim_kwargs(**kwargs)
        # if staged, we want it to start a new run from the starting time of the scenario,
        # using a copy of the input model (which is the nominal run) at this time
        if staged:
            start_time = scen.time
        else:
            start_time = 0
        timerange = mdl.sp.get_timerange(start_time)
        # check if sequence is out of timerange
        for t in scen['sequence']:
            if t not in timerange:
                raise Exception("t="+str(t)+" from sequence not in timerange: "
                                + str(timerange))
        shift = mdl.sp.get_shift(start_time)
        mdl.init_time_hist()
        # run model through the time range defined in the object
        c_mdl = dict.fromkeys(ctimes)
        result = Result()
        for t_ind, t in enumerate(timerange):
            # inject fault when it occurs, track defined flow states and graph
            try:
                if t in ctimes:
                    c_mdl[t] = mdl.copy()
                if t in scen['sequence']:
                    fxnfaults = scen['sequence'][t].get('faults', {})
                    disturbances = scen['sequence'][t].get('disturbances', {})
                else:
                    fxnfaults = {}
                    disturbances = {}
                try:
                    mdl.propagate(t, fxnfaults, disturbances, run_stochastic=run_stochastic)
                except Exception as e:
&gt;                   raise Exception("Error in scenario " + str(scen)) from e
E                   Exception: Error in scenario Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)

fmdtools/sim/propagate.py:1113: Exception</failure></testcase><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_passing" time="0.043"><failure message="Exception: Error in scenario Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)">self = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

time = 0.0, fxnfaults = {}, disturbances = {}, run_stochastic = False

    def propagate(self, time, fxnfaults={}, disturbances={}, run_stochastic=False):
        """
        Inject and propagates faults through the graph at one time-step.
    
        Parameters
        ----------
        time : float
            The current time-step.
        fxnfaults : dict
            Faults to inject during this propagation step.
            With structure {'function':['fault1', 'fault2'...]}
        disturbances : dict
            Variables to change during this propagation step.
            With structure {'function.var1':value}
        run_stochastic : bool
            Whether to run stochastic behaviors or use default values. Default is False.
            Can set as 'track_pdf' to calculate/track the probability densities of
            random states over time.
        """
        # Step 0: Update model states with disturbances
        self.set_vars(**disturbances)
    
        # Step 1: Run Dynamic Propagation Methods in Order Specified
        # Inject Faults if Applicable
        for fxnname in self.dynamicfxns.union(fxnfaults.keys()):
            fxn = self.fxns[fxnname]
            faults = fxnfaults.get(fxnname, [])
            if not isinstance(faults, list):
                faults = [faults]
            fxn('dynamic', faults=faults, time=time, run_stochastic=run_stochastic)
    
        # Step 2: Run Static Propagation Methods
        try:
&gt;           self.prop_static(time, run_stochastic=run_stochastic)

fmdtools/define/architecture/function.py:782: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:812: in prop_static
    self.fxns[fxnname]('static', time=time, run_stochastic=run_stochastic)
fmdtools/define/block/function.py:189: in __call__
    self.static_behavior(time)
examples/multiflow_demo/multiflow_demo.py:69: in static_behavior
    self.internal_info.send("all", "local", "x")
fmdtools/define/flow/commsflow.py:185: in send
    port_out.s.assign(port_internal.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7fead120&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'LocationState' object has no attribute 'local'

fmdtools/define/container/base.py:217: AttributeError

The above exception was the direct cause of the following exception:

mdl = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

scen = Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)
ctimes = [], nomhist = {}, nomresult = {}, kwargs = {'cut_hist': True}
desired_result = 'endclass', staged = False, cut_hist = True
run_stochastic = False, use_end_condition = True, warn_faults = True
start_time = 0

    def prop_one_scen(mdl, scen, ctimes=[], nomhist={}, nomresult={}, **kwargs):
        """
        Simulate a single scenario in the model over time.
    
        Parameters
        ----------
        mdl : Simulable
            The model to inject faults in.
        scen : Scenario
            The Scenario to run.
        ctimes : list, optional
            List of times to copy the model (for use in staged execution).
            The default is [].
        nomhist : dict, optional
            Model history dictionary from previous runs, for use in creating the new
            mdlhist. The default is {}.
        nomresult : dict, optional
            Nominal result dictionary (to compare with current if desired)
        **kwargs : kwargs
            simulation options, see :data:`sim_kwargs`
        Returns
        -------
        result: Result
            dict of result corresponding to desired_result.
        mdlhist : dict
            A dictionary with a history of modelstates.
        c_mdl : dict
            A dictionary of models at each time given in ctimes with structure {time:model}
        t_end: float
            Last sim time
        """
        desired_result, staged, cut_hist, run_stochastic, use_end_condition, warn_faults = unpack_sim_kwargs(**kwargs)
        # if staged, we want it to start a new run from the starting time of the scenario,
        # using a copy of the input model (which is the nominal run) at this time
        if staged:
            start_time = scen.time
        else:
            start_time = 0
        timerange = mdl.sp.get_timerange(start_time)
        # check if sequence is out of timerange
        for t in scen['sequence']:
            if t not in timerange:
                raise Exception("t="+str(t)+" from sequence not in timerange: "
                                + str(timerange))
        shift = mdl.sp.get_shift(start_time)
        mdl.init_time_hist()
        # run model through the time range defined in the object
        c_mdl = dict.fromkeys(ctimes)
        result = Result()
        for t_ind, t in enumerate(timerange):
            # inject fault when it occurs, track defined flow states and graph
            try:
                if t in ctimes:
                    c_mdl[t] = mdl.copy()
                if t in scen['sequence']:
                    fxnfaults = scen['sequence'][t].get('faults', {})
                    disturbances = scen['sequence'][t].get('disturbances', {})
                else:
                    fxnfaults = {}
                    disturbances = {}
                try:
&gt;                   mdl.propagate(t, fxnfaults, disturbances, run_stochastic=run_stochastic)

fmdtools/sim/propagate.py:1111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

time = 0.0, fxnfaults = {}, disturbances = {}, run_stochastic = False

    def propagate(self, time, fxnfaults={}, disturbances={}, run_stochastic=False):
        """
        Inject and propagates faults through the graph at one time-step.
    
        Parameters
        ----------
        time : float
            The current time-step.
        fxnfaults : dict
            Faults to inject during this propagation step.
            With structure {'function':['fault1', 'fault2'...]}
        disturbances : dict
            Variables to change during this propagation step.
            With structure {'function.var1':value}
        run_stochastic : bool
            Whether to run stochastic behaviors or use default values. Default is False.
            Can set as 'track_pdf' to calculate/track the probability densities of
            random states over time.
        """
        # Step 0: Update model states with disturbances
        self.set_vars(**disturbances)
    
        # Step 1: Run Dynamic Propagation Methods in Order Specified
        # Inject Faults if Applicable
        for fxnname in self.dynamicfxns.union(fxnfaults.keys()):
            fxn = self.fxns[fxnname]
            faults = fxnfaults.get(fxnname, [])
            if not isinstance(faults, list):
                faults = [faults]
            fxn('dynamic', faults=faults, time=time, run_stochastic=run_stochastic)
    
        # Step 2: Run Static Propagation Methods
        try:
            self.prop_static(time, run_stochastic=run_stochastic)
        except Exception as e:
&gt;           raise Exception("Error in static propagation at time t=" + str(time)) from e
E           Exception: Error in static propagation at time t=0.0

fmdtools/define/architecture/function.py:784: Exception

The above exception was the direct cause of the following exception:

self = &lt;examples.multiflow_demo.test_multiflow.define_Tests testMethod=test_multiflow_passing&gt;

    def setUp(self):
        self.mdl = ExModel()
&gt;       self.endresults, self.mdlhist = propagate.nominal(self.mdl)

examples/multiflow_demo/test_multiflow.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/sim/propagate.py:237: in nominal
    result, mdlhist, _, mdl, t_end = nom_helper(mdl, None, cut_hist=True, **kwargs)
fmdtools/sim/propagate.py:574: in nom_helper
    result, nommdlhist, mdls, t_end_nom = prop_one_scen(mdl,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

mdl = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

scen = Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)
ctimes = [], nomhist = {}, nomresult = {}, kwargs = {'cut_hist': True}
desired_result = 'endclass', staged = False, cut_hist = True
run_stochastic = False, use_end_condition = True, warn_faults = True
start_time = 0

    def prop_one_scen(mdl, scen, ctimes=[], nomhist={}, nomresult={}, **kwargs):
        """
        Simulate a single scenario in the model over time.
    
        Parameters
        ----------
        mdl : Simulable
            The model to inject faults in.
        scen : Scenario
            The Scenario to run.
        ctimes : list, optional
            List of times to copy the model (for use in staged execution).
            The default is [].
        nomhist : dict, optional
            Model history dictionary from previous runs, for use in creating the new
            mdlhist. The default is {}.
        nomresult : dict, optional
            Nominal result dictionary (to compare with current if desired)
        **kwargs : kwargs
            simulation options, see :data:`sim_kwargs`
        Returns
        -------
        result: Result
            dict of result corresponding to desired_result.
        mdlhist : dict
            A dictionary with a history of modelstates.
        c_mdl : dict
            A dictionary of models at each time given in ctimes with structure {time:model}
        t_end: float
            Last sim time
        """
        desired_result, staged, cut_hist, run_stochastic, use_end_condition, warn_faults = unpack_sim_kwargs(**kwargs)
        # if staged, we want it to start a new run from the starting time of the scenario,
        # using a copy of the input model (which is the nominal run) at this time
        if staged:
            start_time = scen.time
        else:
            start_time = 0
        timerange = mdl.sp.get_timerange(start_time)
        # check if sequence is out of timerange
        for t in scen['sequence']:
            if t not in timerange:
                raise Exception("t="+str(t)+" from sequence not in timerange: "
                                + str(timerange))
        shift = mdl.sp.get_shift(start_time)
        mdl.init_time_hist()
        # run model through the time range defined in the object
        c_mdl = dict.fromkeys(ctimes)
        result = Result()
        for t_ind, t in enumerate(timerange):
            # inject fault when it occurs, track defined flow states and graph
            try:
                if t in ctimes:
                    c_mdl[t] = mdl.copy()
                if t in scen['sequence']:
                    fxnfaults = scen['sequence'][t].get('faults', {})
                    disturbances = scen['sequence'][t].get('disturbances', {})
                else:
                    fxnfaults = {}
                    disturbances = {}
                try:
                    mdl.propagate(t, fxnfaults, disturbances, run_stochastic=run_stochastic)
                except Exception as e:
&gt;                   raise Exception("Error in scenario " + str(scen)) from e
E                   Exception: Error in scenario Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)

fmdtools/sim/propagate.py:1113: Exception</failure></testcase><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_mutliflow_copying" time="0.050"><failure message="Exception: Error in scenario Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)">self = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

time = 0.0, fxnfaults = {}, disturbances = {}, run_stochastic = False

    def propagate(self, time, fxnfaults={}, disturbances={}, run_stochastic=False):
        """
        Inject and propagates faults through the graph at one time-step.
    
        Parameters
        ----------
        time : float
            The current time-step.
        fxnfaults : dict
            Faults to inject during this propagation step.
            With structure {'function':['fault1', 'fault2'...]}
        disturbances : dict
            Variables to change during this propagation step.
            With structure {'function.var1':value}
        run_stochastic : bool
            Whether to run stochastic behaviors or use default values. Default is False.
            Can set as 'track_pdf' to calculate/track the probability densities of
            random states over time.
        """
        # Step 0: Update model states with disturbances
        self.set_vars(**disturbances)
    
        # Step 1: Run Dynamic Propagation Methods in Order Specified
        # Inject Faults if Applicable
        for fxnname in self.dynamicfxns.union(fxnfaults.keys()):
            fxn = self.fxns[fxnname]
            faults = fxnfaults.get(fxnname, [])
            if not isinstance(faults, list):
                faults = [faults]
            fxn('dynamic', faults=faults, time=time, run_stochastic=run_stochastic)
    
        # Step 2: Run Static Propagation Methods
        try:
&gt;           self.prop_static(time, run_stochastic=run_stochastic)

fmdtools/define/architecture/function.py:782: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:812: in prop_static
    self.fxns[fxnname]('static', time=time, run_stochastic=run_stochastic)
fmdtools/define/block/function.py:189: in __call__
    self.static_behavior(time)
examples/multiflow_demo/multiflow_demo.py:69: in static_behavior
    self.internal_info.send("all", "local", "x")
fmdtools/define/flow/commsflow.py:185: in send
    port_out.s.assign(port_internal.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7d3231c0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'LocationState' object has no attribute 'local'

fmdtools/define/container/base.py:217: AttributeError

The above exception was the direct cause of the following exception:

mdl = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

scen = Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)
ctimes = [], nomhist = {}, nomresult = {}, kwargs = {'cut_hist': True}
desired_result = 'endclass', staged = False, cut_hist = True
run_stochastic = False, use_end_condition = True, warn_faults = True
start_time = 0

    def prop_one_scen(mdl, scen, ctimes=[], nomhist={}, nomresult={}, **kwargs):
        """
        Simulate a single scenario in the model over time.
    
        Parameters
        ----------
        mdl : Simulable
            The model to inject faults in.
        scen : Scenario
            The Scenario to run.
        ctimes : list, optional
            List of times to copy the model (for use in staged execution).
            The default is [].
        nomhist : dict, optional
            Model history dictionary from previous runs, for use in creating the new
            mdlhist. The default is {}.
        nomresult : dict, optional
            Nominal result dictionary (to compare with current if desired)
        **kwargs : kwargs
            simulation options, see :data:`sim_kwargs`
        Returns
        -------
        result: Result
            dict of result corresponding to desired_result.
        mdlhist : dict
            A dictionary with a history of modelstates.
        c_mdl : dict
            A dictionary of models at each time given in ctimes with structure {time:model}
        t_end: float
            Last sim time
        """
        desired_result, staged, cut_hist, run_stochastic, use_end_condition, warn_faults = unpack_sim_kwargs(**kwargs)
        # if staged, we want it to start a new run from the starting time of the scenario,
        # using a copy of the input model (which is the nominal run) at this time
        if staged:
            start_time = scen.time
        else:
            start_time = 0
        timerange = mdl.sp.get_timerange(start_time)
        # check if sequence is out of timerange
        for t in scen['sequence']:
            if t not in timerange:
                raise Exception("t="+str(t)+" from sequence not in timerange: "
                                + str(timerange))
        shift = mdl.sp.get_shift(start_time)
        mdl.init_time_hist()
        # run model through the time range defined in the object
        c_mdl = dict.fromkeys(ctimes)
        result = Result()
        for t_ind, t in enumerate(timerange):
            # inject fault when it occurs, track defined flow states and graph
            try:
                if t in ctimes:
                    c_mdl[t] = mdl.copy()
                if t in scen['sequence']:
                    fxnfaults = scen['sequence'][t].get('faults', {})
                    disturbances = scen['sequence'][t].get('disturbances', {})
                else:
                    fxnfaults = {}
                    disturbances = {}
                try:
&gt;                   mdl.propagate(t, fxnfaults, disturbances, run_stochastic=run_stochastic)

fmdtools/sim/propagate.py:1111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

time = 0.0, fxnfaults = {}, disturbances = {}, run_stochastic = False

    def propagate(self, time, fxnfaults={}, disturbances={}, run_stochastic=False):
        """
        Inject and propagates faults through the graph at one time-step.
    
        Parameters
        ----------
        time : float
            The current time-step.
        fxnfaults : dict
            Faults to inject during this propagation step.
            With structure {'function':['fault1', 'fault2'...]}
        disturbances : dict
            Variables to change during this propagation step.
            With structure {'function.var1':value}
        run_stochastic : bool
            Whether to run stochastic behaviors or use default values. Default is False.
            Can set as 'track_pdf' to calculate/track the probability densities of
            random states over time.
        """
        # Step 0: Update model states with disturbances
        self.set_vars(**disturbances)
    
        # Step 1: Run Dynamic Propagation Methods in Order Specified
        # Inject Faults if Applicable
        for fxnname in self.dynamicfxns.union(fxnfaults.keys()):
            fxn = self.fxns[fxnname]
            faults = fxnfaults.get(fxnname, [])
            if not isinstance(faults, list):
                faults = [faults]
            fxn('dynamic', faults=faults, time=time, run_stochastic=run_stochastic)
    
        # Step 2: Run Static Propagation Methods
        try:
            self.prop_static(time, run_stochastic=run_stochastic)
        except Exception as e:
&gt;           raise Exception("Error in static propagation at time t=" + str(time)) from e
E           Exception: Error in static propagation at time t=0.0

fmdtools/define/architecture/function.py:784: Exception

The above exception was the direct cause of the following exception:

self = &lt;examples.multiflow_demo.test_multiflow.define_Tests testMethod=test_mutliflow_copying&gt;

    def setUp(self):
        self.mdl = ExModel()
&gt;       self.endresults, self.mdlhist = propagate.nominal(self.mdl)

examples/multiflow_demo/test_multiflow.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/sim/propagate.py:237: in nominal
    result, mdlhist, _, mdl, t_end = nom_helper(mdl, None, cut_hist=True, **kwargs)
fmdtools/sim/propagate.py:574: in nom_helper
    result, nommdlhist, mdls, t_end_nom = prop_one_scen(mdl,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

mdl = exmodel ExModel
FUNCTIONS:
mover_1 Mover
mover_2 Mover
coordinator Coordinator
FLOWS:
communications Communications fl...
location Location flow: LocationState(x=0.0, y=0.0)
   mover_1 Location flow: LocationState(x=1.0, y=0.0)
   mover...

scen = Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)
ctimes = [], nomhist = {}, nomresult = {}, kwargs = {'cut_hist': True}
desired_result = 'endclass', staged = False, cut_hist = True
run_stochastic = False, use_end_condition = True, warn_faults = True
start_time = 0

    def prop_one_scen(mdl, scen, ctimes=[], nomhist={}, nomresult={}, **kwargs):
        """
        Simulate a single scenario in the model over time.
    
        Parameters
        ----------
        mdl : Simulable
            The model to inject faults in.
        scen : Scenario
            The Scenario to run.
        ctimes : list, optional
            List of times to copy the model (for use in staged execution).
            The default is [].
        nomhist : dict, optional
            Model history dictionary from previous runs, for use in creating the new
            mdlhist. The default is {}.
        nomresult : dict, optional
            Nominal result dictionary (to compare with current if desired)
        **kwargs : kwargs
            simulation options, see :data:`sim_kwargs`
        Returns
        -------
        result: Result
            dict of result corresponding to desired_result.
        mdlhist : dict
            A dictionary with a history of modelstates.
        c_mdl : dict
            A dictionary of models at each time given in ctimes with structure {time:model}
        t_end: float
            Last sim time
        """
        desired_result, staged, cut_hist, run_stochastic, use_end_condition, warn_faults = unpack_sim_kwargs(**kwargs)
        # if staged, we want it to start a new run from the starting time of the scenario,
        # using a copy of the input model (which is the nominal run) at this time
        if staged:
            start_time = scen.time
        else:
            start_time = 0
        timerange = mdl.sp.get_timerange(start_time)
        # check if sequence is out of timerange
        for t in scen['sequence']:
            if t not in timerange:
                raise Exception("t="+str(t)+" from sequence not in timerange: "
                                + str(timerange))
        shift = mdl.sp.get_shift(start_time)
        mdl.init_time_hist()
        # run model through the time range defined in the object
        c_mdl = dict.fromkeys(ctimes)
        result = Result()
        for t_ind, t in enumerate(timerange):
            # inject fault when it occurs, track defined flow states and graph
            try:
                if t in ctimes:
                    c_mdl[t] = mdl.copy()
                if t in scen['sequence']:
                    fxnfaults = scen['sequence'][t].get('faults', {})
                    disturbances = scen['sequence'][t].get('disturbances', {})
                else:
                    fxnfaults = {}
                    disturbances = {}
                try:
                    mdl.propagate(t, fxnfaults, disturbances, run_stochastic=run_stochastic)
                except Exception as e:
&gt;                   raise Exception("Error in scenario " + str(scen)) from e
E                   Exception: Error in scenario Scenario(sequence={}, times=(), rate=1.0, name='nominal', time=0.0)

fmdtools/sim/propagate.py:1113: Exception</failure></testcase><testcase classname="examples.multirotor.Demonstration.ipynb" name="" time="19.685"><failure message="#x1B[0;31mException#x1B[0m: Outside bounds of grid: 0.0,160">---------------------------------------------------------------------------
# Note: because of the complicated functions, the model must be re-instantiated for each function in order to work in this case

dynamic_mdl = Drone_Dynamic()
endclass, mdlhist = propagate.nominal(dynamic_mdl)
#x1B[0;31m---------------------------------------------------------------------------#x1B[0m
#x1B[0;31mException#x1B[0m                                 Traceback (most recent call last)
Cell #x1B[0;32mIn[26], line 3#x1B[0m
#x1B[1;32m      1#x1B[0m #x1B[38;5;66;03m# Note: because of the complicated functions, the model must be re-instantiated for each function in order to work in this case#x1B[39;00m
#x1B[0;32m----&gt; 3#x1B[0m dynamic_mdl #x1B[38;5;241m=#x1B[39m #x1B[43mDrone_Dynamic#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m      4#x1B[0m endclass, mdlhist #x1B[38;5;241m=#x1B[39m propagate#x1B[38;5;241m.#x1B[39mnominal(dynamic_mdl)

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/function.py:512#x1B[0m, in #x1B[0;36mFunctionArchitecture.__init__#x1B[0;34m(self, h, **kwargs)#x1B[0m
#x1B[1;32m    510#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_fxnflows #x1B[38;5;241m=#x1B[39m []
#x1B[1;32m    511#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_flowstates #x1B[38;5;241m=#x1B[39m {}
#x1B[0;32m--&gt; 512#x1B[0m #x1B[43mArchitecture#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mh#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mh#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:90#x1B[0m, in #x1B[0;36mArchitecture.__init__#x1B[0;34m(self, as_copy, h, *args, **kwargs)#x1B[0m
#x1B[1;32m     88#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_init_flexroles #x1B[38;5;241m=#x1B[39m []
#x1B[1;32m     89#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_flexible_roles(#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs)
#x1B[0;32m---&gt; 90#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_architecture#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m     91#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mbuild(#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs)

File #x1B[0;32m/fmdtools/examples/multirotor/drone_mdl_dynamic.py:418#x1B[0m, in #x1B[0;36mDrone.init_architecture#x1B[0;34m(self, **kwargs)#x1B[0m
#x1B[1;32m    416#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_flow(#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdofs#x1B[39m#x1B[38;5;124m'#x1B[39m, DOFs)
#x1B[1;32m    417#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_flow(#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdes_traj#x1B[39m#x1B[38;5;124m'#x1B[39m, DesTraj)
#x1B[0;32m--&gt; 418#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43madd_flow#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[38;5;124;43menvironment#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mDroneEnvironment#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    419#x1B[0m #x1B[38;5;66;03m# add functions to the model#x1B[39;00m
#x1B[1;32m    420#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_fxn(#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mstore_ee#x1B[39m#x1B[38;5;124m'#x1B[39m, StoreEE, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mee_1#x1B[39m#x1B[38;5;124m'#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mforce_st#x1B[39m#x1B[38;5;124m'#x1B[39m)

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:197#x1B[0m, in #x1B[0;36mArchitecture.add_flow#x1B[0;34m(self, name, fclass, **kwargs)#x1B[0m
#x1B[1;32m    195#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    196#x1B[0m     use_copy #x1B[38;5;241m=#x1B[39m #x1B[38;5;28;01mFalse#x1B[39;00m
#x1B[0;32m--&gt; 197#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43madd_flex_role_obj#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[38;5;124;43mflows#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mobjclass#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mfclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43muse_copy#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43muse_copy#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    198#x1B[0m #x1B[43m                       #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:162#x1B[0m, in #x1B[0;36mArchitecture.add_flex_role_obj#x1B[0;34m(self, flex_role, name, objclass, use_copy, **kwargs)#x1B[0m
#x1B[1;32m    160#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mr#x1B[39m#x1B[38;5;124m'#x1B[39m) #x1B[38;5;129;01mand#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(objclass, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mcontainer_r#x1B[39m#x1B[38;5;124m"#x1B[39m):
#x1B[1;32m    161#x1B[0m     kwargs #x1B[38;5;241m=#x1B[39m {#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39m{#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mr#x1B[39m#x1B[38;5;124m'#x1B[39m: {#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mseed#x1B[39m#x1B[38;5;124m"#x1B[39m: #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mr#x1B[38;5;241m.#x1B[39mseed}}, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs}
#x1B[0;32m--&gt; 162#x1B[0m obj #x1B[38;5;241m=#x1B[39m #x1B[43minit_obj#x1B[49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mobjclass#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mobjclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    163#x1B[0m #x1B[43m               #x1B[49m#x1B[43mas_copy#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mas_copy#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroot#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mget_full_name#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m+#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43m.#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;241;43m+#x1B[39;49m#x1B[43mflex_role#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    164#x1B[0m #x1B[43m               #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    166#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(obj, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mh#x1B[39m#x1B[38;5;124m'#x1B[39m) #x1B[38;5;129;01mand#x1B[39;00m obj#x1B[38;5;241m.#x1B[39mh:
#x1B[1;32m    167#x1B[0m     hist #x1B[38;5;241m=#x1B[39m obj#x1B[38;5;241m.#x1B[39mh

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:962#x1B[0m, in #x1B[0;36minit_obj#x1B[0;34m(name, objclass, track, as_copy, **kwargs)#x1B[0m
#x1B[1;32m    960#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    961#x1B[0m     #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[0;32m--&gt; 962#x1B[0m         fl #x1B[38;5;241m=#x1B[39m #x1B[43mobjclass#x1B[49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    963#x1B[0m     #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mTypeError#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[1;32m    964#x1B[0m         #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mTypeError#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mPoorly specified class #x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(objclass) #x1B[38;5;241m+#x1B[39m
#x1B[1;32m    965#x1B[0m                         #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m (or poor arguments) #x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(kwargs)) #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01me#x1B[39;00m

File #x1B[0;32m/fmdtools/fmdtools/define/environment.py:69#x1B[0m, in #x1B[0;36mEnvironment.__init__#x1B[0;34m(self, name, root, glob, p, s, r, c, ga, track)#x1B[0m
#x1B[1;32m     67#x1B[0m #x1B[38;5;28;01mdef#x1B[39;00m #x1B[38;5;21m__init__#x1B[39m(#x1B[38;5;28mself#x1B[39m, name#x1B[38;5;241m=#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124m'#x1B[39m, root#x1B[38;5;241m=#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124m'#x1B[39m, glob#x1B[38;5;241m=#x1B[39m[], p#x1B[38;5;241m=#x1B[39m{}, s#x1B[38;5;241m=#x1B[39m{}, r#x1B[38;5;241m=#x1B[39m{}, c#x1B[38;5;241m=#x1B[39m{}, ga#x1B[38;5;241m=#x1B[39m{},
#x1B[1;32m     68#x1B[0m              track#x1B[38;5;241m=#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdefault#x1B[39m#x1B[38;5;124m'#x1B[39m):
#x1B[0;32m---&gt; 69#x1B[0m     #x1B[38;5;28;43msuper#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroot#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mroot#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mglob#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mglob#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mp#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mp#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43ms#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43ms#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m     70#x1B[0m     #x1B[38;5;66;03m# NOTE: p and s also init here because if not, they are overritten#x1B[39;00m
#x1B[1;32m     71#x1B[0m     #x1B[38;5;66;03m# may need to change in the future#x1B[39;00m
#x1B[1;32m     72#x1B[0m     #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_roletypes(#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mcontainer#x1B[39m#x1B[38;5;124m'#x1B[39m, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mcoords#x1B[39m#x1B[38;5;124m"#x1B[39m, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124march#x1B[39m#x1B[38;5;124m"#x1B[39m, r#x1B[38;5;241m=#x1B[39mr, p#x1B[38;5;241m=#x1B[39mp, s#x1B[38;5;241m=#x1B[39ms)

File #x1B[0;32m/fmdtools/fmdtools/define/flow/commsflow.py:103#x1B[0m, in #x1B[0;36mCommsFlow.__init__#x1B[0;34m(self, name, glob, track, **kwargs)#x1B[0m
#x1B[1;32m    101#x1B[0m #x1B[38;5;250m#x1B[39m#x1B[38;5;124;03m"""Initialize CommsFlow object."""#x1B[39;00m
#x1B[1;32m    102#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mfxns #x1B[38;5;241m=#x1B[39m {}
#x1B[0;32m--&gt; 103#x1B[0m #x1B[38;5;28;43msuper#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mglob#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mglob#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/flow/multiflow.py:110#x1B[0m, in #x1B[0;36mMultiFlow.__init__#x1B[0;34m(self, name, root, glob, track, **kwargs)#x1B[0m
#x1B[1;32m    108#x1B[0m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m root:
#x1B[1;32m    109#x1B[0m         root #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mglob#x1B[38;5;241m.#x1B[39mget_full_name()
#x1B[0;32m--&gt; 110#x1B[0m #x1B[38;5;28;43msuper#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroot#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mroot#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    111#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mlocals #x1B[38;5;241m=#x1B[39m []

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:190#x1B[0m, in #x1B[0;36mBaseObject.__init__#x1B[0;34m(self, name, roletypes, track, root, **kwargs)#x1B[0m
#x1B[1;32m    188#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mroot #x1B[38;5;241m=#x1B[39m root
#x1B[1;32m    189#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_indicators()
#x1B[0;32m--&gt; 190#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_roletypes#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mroletypes#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    191#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_track(track)
#x1B[1;32m    192#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mcheck_slots()

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:251#x1B[0m, in #x1B[0;36mBaseObject.init_roletypes#x1B[0;34m(self, *roletypes, **kwargs)#x1B[0m
#x1B[1;32m    248#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m roletype #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mroletypes:
#x1B[1;32m    249#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mRoletype: #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m roletype #x1B[38;5;241m+#x1B[39m #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m not in class variable#x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m
#x1B[1;32m    250#x1B[0m                     #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m self.roletypes: #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mroletypes))
#x1B[0;32m--&gt; 251#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_roles#x1B[49m#x1B[43m(#x1B[49m#x1B[43mroletype#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:296#x1B[0m, in #x1B[0;36mBaseObject.init_roles#x1B[0;34m(self, roletype, **kwargs)#x1B[0m
#x1B[1;32m    294#x1B[0m     container_args[#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mroot#x1B[39m#x1B[38;5;124m'#x1B[39m] #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mget_full_name()
#x1B[1;32m    295#x1B[0m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[0;32m--&gt; 296#x1B[0m     container #x1B[38;5;241m=#x1B[39m #x1B[43mcontainer_initializer#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mcontainer_args#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    297#x1B[0m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mAttributeError#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m ae:
#x1B[1;32m    298#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mProblem initializing #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m roletype #x1B[38;5;241m+#x1B[39m #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m_#x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m rolename
#x1B[1;32m    299#x1B[0m                     #x1B[38;5;241m+#x1B[39m #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m: #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m #x1B[38;5;28mstr#x1B[39m(container_initializer)) #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01mae#x1B[39;00m

File #x1B[0;32m/fmdtools/fmdtools/define/object/coords.py:948#x1B[0m, in #x1B[0;36mCoords.__init__#x1B[0;34m(self, track, *args, **kwargs)#x1B[0m
#x1B[1;32m    946#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_coords_roles()
#x1B[1;32m    947#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_property_arrays(#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mproperties)
#x1B[0;32m--&gt; 948#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_properties#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43margs#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    949#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mbuild()
#x1B[1;32m    950#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_track(track)

File #x1B[0;32m/fmdtools/examples/multirotor/drone_mdl_dynamic.py:90#x1B[0m, in #x1B[0;36mSightGrid.init_properties#x1B[0;34m(self, *args, **kwargs)#x1B[0m
#x1B[1;32m     88#x1B[0m #x1B[38;5;28;01mdef#x1B[39;00m #x1B[38;5;21minit_properties#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[38;5;241m*#x1B[39margs, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs):
#x1B[1;32m     89#x1B[0m #x1B[38;5;250m    #x1B[39m#x1B[38;5;124;03m"""Set target true between 0 and 150 in the x and 10 and 160 in the y."""#x1B[39;00m
#x1B[0;32m---&gt; 90#x1B[0m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mset_range#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mtarget#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m0#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m150#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m10#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m160#x1B[39;49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/object/coords.py:411#x1B[0m, in #x1B[0;36mBaseCoords.set_range#x1B[0;34m(self, prop, value, xmin, xmax, ymin, ymax, inclusive)#x1B[0m
#x1B[1;32m    409#x1B[0m     y_max_ind #x1B[38;5;241m=#x1B[39m #x1B[38;5;28;01mNone#x1B[39;00m
#x1B[1;32m    410#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[0;32m--&gt; 411#x1B[0m     _, y_max_ind #x1B[38;5;241m=#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mto_index#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m0.0#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mymax#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    412#x1B[0m     #x1B[38;5;28;01mif#x1B[39;00m inclusive #x1B[38;5;129;01mand#x1B[39;00m y_max_ind #x1B[38;5;241m&lt;#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39my_size:
#x1B[1;32m    413#x1B[0m         y_max_ind #x1B[38;5;241m+#x1B[39m#x1B[38;5;241m=#x1B[39m #x1B[38;5;241m1#x1B[39m

File #x1B[0;32m/fmdtools/fmdtools/define/object/coords.py:188#x1B[0m, in #x1B[0;36mBaseCoords.to_index#x1B[0;34m(self, x, y)#x1B[0m
#x1B[1;32m    166#x1B[0m #x1B[38;5;250m#x1B[39m#x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m    167#x1B[0m #x1B[38;5;124;03mFind the index of the array corresponding to the given x/y values.#x1B[39;00m
#x1B[1;32m    168#x1B[0m 
#x1B[0;32m   (...)#x1B[0m
#x1B[1;32m    185#x1B[0m #x1B[38;5;124;03m(5, 2)#x1B[39;00m
#x1B[1;32m    186#x1B[0m #x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m    187#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39min_range(x, y):
#x1B[0;32m--&gt; 188#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mOutside bounds of grid: #x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(x)#x1B[38;5;241m+#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124m,#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(y))
#x1B[1;32m    189#x1B[0m #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[38;5;28mround#x1B[39m(x#x1B[38;5;241m/#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39mblocksize), #x1B[38;5;28mround#x1B[39m(y#x1B[38;5;241m/#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39mblocksize)

#x1B[0;31mException#x1B[0m: Outside bounds of grid: 0.0,160</failure></testcase><testcase classname="examples.multirotor.Multirotor_Optimization.ipynb" name="" time="8.587"><failure message="#x1B[0;31mException#x1B[0m: Outside bounds of grid: 0.0,160">---------------------------------------------------------------------------
from drone_mdl_rural import Drone
import numpy as np

mdl = Drone()
#x1B[0;31m---------------------------------------------------------------------------#x1B[0m
#x1B[0;31mException#x1B[0m                                 Traceback (most recent call last)
Cell #x1B[0;32mIn[1], line 4#x1B[0m
#x1B[1;32m      1#x1B[0m #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01mdrone_mdl_rural#x1B[39;00m #x1B[38;5;28;01mimport#x1B[39;00m Drone
#x1B[1;32m      2#x1B[0m #x1B[38;5;28;01mimport#x1B[39;00m #x1B[38;5;21;01mnumpy#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m #x1B[38;5;21;01mnp#x1B[39;00m
#x1B[0;32m----&gt; 4#x1B[0m mdl #x1B[38;5;241m=#x1B[39m #x1B[43mDrone#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/function.py:512#x1B[0m, in #x1B[0;36mFunctionArchitecture.__init__#x1B[0;34m(self, h, **kwargs)#x1B[0m
#x1B[1;32m    510#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_fxnflows #x1B[38;5;241m=#x1B[39m []
#x1B[1;32m    511#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_flowstates #x1B[38;5;241m=#x1B[39m {}
#x1B[0;32m--&gt; 512#x1B[0m #x1B[43mArchitecture#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mh#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mh#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:90#x1B[0m, in #x1B[0;36mArchitecture.__init__#x1B[0;34m(self, as_copy, h, *args, **kwargs)#x1B[0m
#x1B[1;32m     88#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_init_flexroles #x1B[38;5;241m=#x1B[39m []
#x1B[1;32m     89#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_flexible_roles(#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs)
#x1B[0;32m---&gt; 90#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_architecture#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m     91#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mbuild(#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs)

File #x1B[0;32m/fmdtools/examples/multirotor/drone_mdl_rural.py:700#x1B[0m, in #x1B[0;36mDrone.init_architecture#x1B[0;34m(self, **kwargs)#x1B[0m
#x1B[1;32m    698#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_flow(#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdofs#x1B[39m#x1B[38;5;124m'#x1B[39m, DOFs)
#x1B[1;32m    699#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_flow(#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdes_traj#x1B[39m#x1B[38;5;124m'#x1B[39m, DesTraj)
#x1B[0;32m--&gt; 700#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43madd_flow#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[38;5;124;43menvironment#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mDroneEnvironment#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mp#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mp#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43menv_param#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    702#x1B[0m #x1B[38;5;66;03m# add functions to the model#x1B[39;00m
#x1B[1;32m    703#x1B[0m flows #x1B[38;5;241m=#x1B[39m [#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mee_ctl#x1B[39m#x1B[38;5;124m'#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mforce_st#x1B[39m#x1B[38;5;124m'#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mhsig_dofs#x1B[39m#x1B[38;5;124m'#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mhsig_bat#x1B[39m#x1B[38;5;124m'#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mrsig_traj#x1B[39m#x1B[38;5;124m'#x1B[39m]

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:197#x1B[0m, in #x1B[0;36mArchitecture.add_flow#x1B[0;34m(self, name, fclass, **kwargs)#x1B[0m
#x1B[1;32m    195#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    196#x1B[0m     use_copy #x1B[38;5;241m=#x1B[39m #x1B[38;5;28;01mFalse#x1B[39;00m
#x1B[0;32m--&gt; 197#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43madd_flex_role_obj#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[38;5;124;43mflows#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mobjclass#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mfclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43muse_copy#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43muse_copy#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    198#x1B[0m #x1B[43m                       #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:162#x1B[0m, in #x1B[0;36mArchitecture.add_flex_role_obj#x1B[0;34m(self, flex_role, name, objclass, use_copy, **kwargs)#x1B[0m
#x1B[1;32m    160#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mr#x1B[39m#x1B[38;5;124m'#x1B[39m) #x1B[38;5;129;01mand#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(objclass, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mcontainer_r#x1B[39m#x1B[38;5;124m"#x1B[39m):
#x1B[1;32m    161#x1B[0m     kwargs #x1B[38;5;241m=#x1B[39m {#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39m{#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mr#x1B[39m#x1B[38;5;124m'#x1B[39m: {#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mseed#x1B[39m#x1B[38;5;124m"#x1B[39m: #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mr#x1B[38;5;241m.#x1B[39mseed}}, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs}
#x1B[0;32m--&gt; 162#x1B[0m obj #x1B[38;5;241m=#x1B[39m #x1B[43minit_obj#x1B[49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mobjclass#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mobjclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    163#x1B[0m #x1B[43m               #x1B[49m#x1B[43mas_copy#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mas_copy#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroot#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mget_full_name#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m+#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43m.#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;241;43m+#x1B[39;49m#x1B[43mflex_role#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    164#x1B[0m #x1B[43m               #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    166#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(obj, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mh#x1B[39m#x1B[38;5;124m'#x1B[39m) #x1B[38;5;129;01mand#x1B[39;00m obj#x1B[38;5;241m.#x1B[39mh:
#x1B[1;32m    167#x1B[0m     hist #x1B[38;5;241m=#x1B[39m obj#x1B[38;5;241m.#x1B[39mh

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:962#x1B[0m, in #x1B[0;36minit_obj#x1B[0;34m(name, objclass, track, as_copy, **kwargs)#x1B[0m
#x1B[1;32m    960#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    961#x1B[0m     #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[0;32m--&gt; 962#x1B[0m         fl #x1B[38;5;241m=#x1B[39m #x1B[43mobjclass#x1B[49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    963#x1B[0m     #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mTypeError#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[1;32m    964#x1B[0m         #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mTypeError#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mPoorly specified class #x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(objclass) #x1B[38;5;241m+#x1B[39m
#x1B[1;32m    965#x1B[0m                         #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m (or poor arguments) #x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(kwargs)) #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01me#x1B[39;00m

File #x1B[0;32m/fmdtools/fmdtools/define/environment.py:69#x1B[0m, in #x1B[0;36mEnvironment.__init__#x1B[0;34m(self, name, root, glob, p, s, r, c, ga, track)#x1B[0m
#x1B[1;32m     67#x1B[0m #x1B[38;5;28;01mdef#x1B[39;00m #x1B[38;5;21m__init__#x1B[39m(#x1B[38;5;28mself#x1B[39m, name#x1B[38;5;241m=#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124m'#x1B[39m, root#x1B[38;5;241m=#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124m'#x1B[39m, glob#x1B[38;5;241m=#x1B[39m[], p#x1B[38;5;241m=#x1B[39m{}, s#x1B[38;5;241m=#x1B[39m{}, r#x1B[38;5;241m=#x1B[39m{}, c#x1B[38;5;241m=#x1B[39m{}, ga#x1B[38;5;241m=#x1B[39m{},
#x1B[1;32m     68#x1B[0m              track#x1B[38;5;241m=#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdefault#x1B[39m#x1B[38;5;124m'#x1B[39m):
#x1B[0;32m---&gt; 69#x1B[0m     #x1B[38;5;28;43msuper#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroot#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mroot#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mglob#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mglob#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mp#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mp#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43ms#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43ms#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m     70#x1B[0m     #x1B[38;5;66;03m# NOTE: p and s also init here because if not, they are overritten#x1B[39;00m
#x1B[1;32m     71#x1B[0m     #x1B[38;5;66;03m# may need to change in the future#x1B[39;00m
#x1B[1;32m     72#x1B[0m     #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_roletypes(#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mcontainer#x1B[39m#x1B[38;5;124m'#x1B[39m, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mcoords#x1B[39m#x1B[38;5;124m"#x1B[39m, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124march#x1B[39m#x1B[38;5;124m"#x1B[39m, r#x1B[38;5;241m=#x1B[39mr, p#x1B[38;5;241m=#x1B[39mp, s#x1B[38;5;241m=#x1B[39ms)

File #x1B[0;32m/fmdtools/fmdtools/define/flow/commsflow.py:103#x1B[0m, in #x1B[0;36mCommsFlow.__init__#x1B[0;34m(self, name, glob, track, **kwargs)#x1B[0m
#x1B[1;32m    101#x1B[0m #x1B[38;5;250m#x1B[39m#x1B[38;5;124;03m"""Initialize CommsFlow object."""#x1B[39;00m
#x1B[1;32m    102#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mfxns #x1B[38;5;241m=#x1B[39m {}
#x1B[0;32m--&gt; 103#x1B[0m #x1B[38;5;28;43msuper#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mglob#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mglob#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/flow/multiflow.py:110#x1B[0m, in #x1B[0;36mMultiFlow.__init__#x1B[0;34m(self, name, root, glob, track, **kwargs)#x1B[0m
#x1B[1;32m    108#x1B[0m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m root:
#x1B[1;32m    109#x1B[0m         root #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mglob#x1B[38;5;241m.#x1B[39mget_full_name()
#x1B[0;32m--&gt; 110#x1B[0m #x1B[38;5;28;43msuper#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroot#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mroot#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    111#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mlocals #x1B[38;5;241m=#x1B[39m []

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:190#x1B[0m, in #x1B[0;36mBaseObject.__init__#x1B[0;34m(self, name, roletypes, track, root, **kwargs)#x1B[0m
#x1B[1;32m    188#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mroot #x1B[38;5;241m=#x1B[39m root
#x1B[1;32m    189#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_indicators()
#x1B[0;32m--&gt; 190#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_roletypes#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mroletypes#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    191#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_track(track)
#x1B[1;32m    192#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mcheck_slots()

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:251#x1B[0m, in #x1B[0;36mBaseObject.init_roletypes#x1B[0;34m(self, *roletypes, **kwargs)#x1B[0m
#x1B[1;32m    248#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m roletype #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mroletypes:
#x1B[1;32m    249#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mRoletype: #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m roletype #x1B[38;5;241m+#x1B[39m #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m not in class variable#x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m
#x1B[1;32m    250#x1B[0m                     #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m self.roletypes: #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mroletypes))
#x1B[0;32m--&gt; 251#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_roles#x1B[49m#x1B[43m(#x1B[49m#x1B[43mroletype#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:296#x1B[0m, in #x1B[0;36mBaseObject.init_roles#x1B[0;34m(self, roletype, **kwargs)#x1B[0m
#x1B[1;32m    294#x1B[0m     container_args[#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mroot#x1B[39m#x1B[38;5;124m'#x1B[39m] #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mget_full_name()
#x1B[1;32m    295#x1B[0m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[0;32m--&gt; 296#x1B[0m     container #x1B[38;5;241m=#x1B[39m #x1B[43mcontainer_initializer#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mcontainer_args#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    297#x1B[0m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mAttributeError#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m ae:
#x1B[1;32m    298#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mProblem initializing #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m roletype #x1B[38;5;241m+#x1B[39m #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m_#x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m rolename
#x1B[1;32m    299#x1B[0m                     #x1B[38;5;241m+#x1B[39m #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m: #x1B[39m#x1B[38;5;124m"#x1B[39m #x1B[38;5;241m+#x1B[39m #x1B[38;5;28mstr#x1B[39m(container_initializer)) #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01mae#x1B[39;00m

File #x1B[0;32m/fmdtools/fmdtools/define/object/coords.py:948#x1B[0m, in #x1B[0;36mCoords.__init__#x1B[0;34m(self, track, *args, **kwargs)#x1B[0m
#x1B[1;32m    946#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_coords_roles()
#x1B[1;32m    947#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_property_arrays(#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mproperties)
#x1B[0;32m--&gt; 948#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_properties#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43margs#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    949#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mbuild()
#x1B[1;32m    950#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_track(track)

File #x1B[0;32m/fmdtools/examples/multirotor/drone_mdl_dynamic.py:90#x1B[0m, in #x1B[0;36mSightGrid.init_properties#x1B[0;34m(self, *args, **kwargs)#x1B[0m
#x1B[1;32m     88#x1B[0m #x1B[38;5;28;01mdef#x1B[39;00m #x1B[38;5;21minit_properties#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[38;5;241m*#x1B[39margs, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs):
#x1B[1;32m     89#x1B[0m #x1B[38;5;250m    #x1B[39m#x1B[38;5;124;03m"""Set target true between 0 and 150 in the x and 10 and 160 in the y."""#x1B[39;00m
#x1B[0;32m---&gt; 90#x1B[0m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mset_range#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mtarget#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m0#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m150#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m10#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m160#x1B[39;49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/object/coords.py:411#x1B[0m, in #x1B[0;36mBaseCoords.set_range#x1B[0;34m(self, prop, value, xmin, xmax, ymin, ymax, inclusive)#x1B[0m
#x1B[1;32m    409#x1B[0m     y_max_ind #x1B[38;5;241m=#x1B[39m #x1B[38;5;28;01mNone#x1B[39;00m
#x1B[1;32m    410#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[0;32m--&gt; 411#x1B[0m     _, y_max_ind #x1B[38;5;241m=#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mto_index#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m0.0#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mymax#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    412#x1B[0m     #x1B[38;5;28;01mif#x1B[39;00m inclusive #x1B[38;5;129;01mand#x1B[39;00m y_max_ind #x1B[38;5;241m&lt;#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39my_size:
#x1B[1;32m    413#x1B[0m         y_max_ind #x1B[38;5;241m+#x1B[39m#x1B[38;5;241m=#x1B[39m #x1B[38;5;241m1#x1B[39m

File #x1B[0;32m/fmdtools/fmdtools/define/object/coords.py:188#x1B[0m, in #x1B[0;36mBaseCoords.to_index#x1B[0;34m(self, x, y)#x1B[0m
#x1B[1;32m    166#x1B[0m #x1B[38;5;250m#x1B[39m#x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m    167#x1B[0m #x1B[38;5;124;03mFind the index of the array corresponding to the given x/y values.#x1B[39;00m
#x1B[1;32m    168#x1B[0m 
#x1B[0;32m   (...)#x1B[0m
#x1B[1;32m    185#x1B[0m #x1B[38;5;124;03m(5, 2)#x1B[39;00m
#x1B[1;32m    186#x1B[0m #x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m    187#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39min_range(x, y):
#x1B[0;32m--&gt; 188#x1B[0m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mOutside bounds of grid: #x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(x)#x1B[38;5;241m+#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;124m,#x1B[39m#x1B[38;5;124m'#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(y))
#x1B[1;32m    189#x1B[0m #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[38;5;28mround#x1B[39m(x#x1B[38;5;241m/#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39mblocksize), #x1B[38;5;28mround#x1B[39m(y#x1B[38;5;241m/#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39mblocksize)

#x1B[0;31mException#x1B[0m: Outside bounds of grid: 0.0,160</failure></testcase><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.AffectDOF.inc_pos" time="0.014" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.assign_vectdist_to_goal" time="0.021" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.calc_dist_to_goal" time="0.008" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.SightGrid" time="0.015"><failure message="073 &#10;074     Define the Drone Grid environment.&#10;075 &#10;076     Used to calculate environmental risk and number of points viewed.&#10;077 &#10;078     Example&#10;079     -------&#10;080     &gt;&gt;&gt; mdl = Drone()&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest examples.multirotor.drone_mdl_dynamic.SightGrid[0]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 418, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/examples/multirotor/drone_mdl_dynamic.py:80: UnexpectedException">073 
074     Define the Drone Grid environment.
075 
076     Used to calculate environmental risk and number of points viewed.
077 
078     Example
079     -------
080     &gt;&gt;&gt; mdl = Drone()
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest examples.multirotor.drone_mdl_dynamic.SightGrid[0]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 418, in init_architecture
    self.add_flow('environment', DroneEnvironment)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/examples/multirotor/drone_mdl_dynamic.py:80: UnexpectedException</failure></testcase><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.AffectDOF.calc_pwr" time="0.028" /><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.LineArchParam" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.AffectDOF.static_behavior" time="0.010" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.CtlDOF.static_behavior" time="0.016" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.dist2d" time="0.004" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.unit_vect2d" time="0.004" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DistEE.static_behavior" time="0.009" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.HoldPayload.static_behavior" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.PlanPath.static_behavior" time="0.006" /><testcase classname="examples.pump.Optimization.ipynb" name="" time="228.024" /><testcase classname="examples.pump.Parallelism_Tutorial.ipynb" name="" time="199.180" /><testcase classname="examples.pump.Pump_Example_Notebook.ipynb" name="" time="52.233" /><testcase classname="examples.pump.Tutorial_complete.ipynb" name="" time="23.556" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.accumulate" time="0.005" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.reseting_accumulate" time="0.004" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_app_prop_values" time="1.314" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_cost_calc" time="125.087" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_parallelism" time="56.380" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values" time="1.224" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values_2" time="2.230" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_isave" time="16.152" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_save" time="14.508" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fmea_options" time="2.227" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_hist_tracking_setup" time="0.076" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_different" time="6.623" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_same" time="12.023" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/fmdtools/examples/pump/test_pump.py:137: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_isave" time="160.468" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_save" time="163.508" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nominal_save" time="0.983" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_csv" time="0.447" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_json" time="0.491" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_pickle" time="0.484" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_onefault_save" time="1.410" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample" time="0.039" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_isave" time="6.383" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_save" time="6.695" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_pickleability" time="0.051" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_multfault" time="1.443" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_isave" time="5.633" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_save" time="6.097" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting" time="0.043" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting_dict" time="0.035" /><testcase classname="examples.pump.test_pump.IndivPumpTests" name="test_mutable_setup" time="0.076" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_inf_v" time="0.004" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_no_v" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_hi" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_initialization" time="0.003" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_condfaults_dynamic" time="0.005" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_initialization" time="0.004" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_nom" time="0.004" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_results" time="0.517" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_static" time="0.052" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_nominal_results" time="0.288" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_mdl_pickle" time="0.663" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_different" time="7.158" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_same" time="9.925" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_reset" time="0.001"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/fmdtools/examples/pump/test_pump_stochastic.py:115: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_set_vars" time="0.033" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_isave" time="275.869" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_save" time="269.086" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_isave" time="4.251" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_save" time="4.612" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nested_hists" time="35.853" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals" time="3.633" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals_xd" time="178.038" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_rand_paramsample_plot" time="10.345" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_approach" time="310.083" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_safety" time="17.980" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_set_seeds" time="0.133" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_stochastic_pdf" time="0.074" /><testcase classname="examples.rover.FaultSample_Use-Cases.ipynb" name="" time="15.909" /><testcase classname="examples.rover.HFAC_Analyses.IDETC_Human_Paper_Analysis.ipynb" name="" time="484.841" /><testcase classname="examples.rover.Model_Structure_Visualization_Tutorial.ipynb" name="" time="75.899" /><testcase classname="examples.rover.ParameterSample_Use-Cases.ipynb" name="" time="366.904" /><testcase classname="examples.rover.Rover_Setup_Notebook.ipynb" name="" time="85.112" /><testcase classname="examples.rover.degradation_modelling.Degradation_Modelling_Notebook.ipynb" name="" time="523.667" /><testcase classname="examples.rover.rover_model" name="examples.rover.rover_model.Drive.drive_nominal" time="0.109" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Comprehend" time="0.007" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Decide" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.HumanActions" time="0.025" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Look" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Percieve" time="0.006" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Press" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Project" time="0.006" /><testcase classname="examples.rover.test_rover.RoverTests" name="test_obj_values" time="6.716" /><testcase classname="examples.tank.Tank_Analysis.ipynb" name="" time="66.337" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach" time="10.164" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_0" time="10.193" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_1" time="26.268" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_notrack" time="10.536" /><testcase classname="examples.tank.test_tank.TankTests" name="test_comp_mode_inj" time="0.320" /><testcase classname="examples.tank.test_tank.TankTests" name="test_different_components" time="0.119" /><testcase classname="examples.tank.test_tank.TankTests" name="test_epc_math" time="0.060" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_isave" time="12.139" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_save" time="11.872" /><testcase classname="examples.tank.test_tank.TankTests" name="test_local_tstep" time="0.741" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_different" time="3.243" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_same" time="6.438" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_reset" time="0.001"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/fmdtools/examples/tank/test_tank.py:69: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_isave" time="111.114" /><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_save" time="109.355" /><testcase classname="examples.tank.test_tank.TankTests" name="test_param_sample_save" time="3.302" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_multfault" time="0.633" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nominal" time="0.405" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_onefault" time="0.644" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_singlefaults" time="5.597" /><testcase classname="examples.tank.test_tank.TankTests" name="test_singlefaults_isave" time="5.380" /><testcase classname="examples.tank.test_tank.TankTests" name="test_tank_copy_args" time="0.098" /><testcase classname="examples.taxiway.Paper_Notebook.ipynb" name="" time="7.953"><failure message="#x1B[0;31mAttributeError#x1B[0m: 'RequestState' object has no attribute 'atc'">---------------------------------------------------------------------------
mdl = taxiway_model()
#x1B[0;31m---------------------------------------------------------------------------#x1B[0m
#x1B[0;31mAttributeError#x1B[0m                            Traceback (most recent call last)
Cell #x1B[0;32mIn[4], line 1#x1B[0m
#x1B[0;32m----&gt; 1#x1B[0m mdl #x1B[38;5;241m=#x1B[39m #x1B[43mtaxiway_model#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/function.py:512#x1B[0m, in #x1B[0;36mFunctionArchitecture.__init__#x1B[0;34m(self, h, **kwargs)#x1B[0m
#x1B[1;32m    510#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_fxnflows #x1B[38;5;241m=#x1B[39m []
#x1B[1;32m    511#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_flowstates #x1B[38;5;241m=#x1B[39m {}
#x1B[0;32m--&gt; 512#x1B[0m #x1B[43mArchitecture#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mh#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mh#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:90#x1B[0m, in #x1B[0;36mArchitecture.__init__#x1B[0;34m(self, as_copy, h, *args, **kwargs)#x1B[0m
#x1B[1;32m     88#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_init_flexroles #x1B[38;5;241m=#x1B[39m []
#x1B[1;32m     89#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_flexible_roles(#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs)
#x1B[0;32m---&gt; 90#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_architecture#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m     91#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mbuild(#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs)

File #x1B[0;32m/fmdtools/examples/taxiway/model.py:52#x1B[0m, in #x1B[0;36mtaxiway_model.init_architecture#x1B[0;34m(self, **kwargs)#x1B[0m
#x1B[1;32m     49#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_fxn(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124matc#x1B[39m#x1B[38;5;124m"#x1B[39m, ATC, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mground#x1B[39m#x1B[38;5;124m"#x1B[39m, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mlocation#x1B[39m#x1B[38;5;124m"#x1B[39m, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mrequests#x1B[39m#x1B[38;5;124m"#x1B[39m, p#x1B[38;5;241m=#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp)
#x1B[1;32m     51#x1B[0m #x1B[38;5;28;01mfor#x1B[39;00m Aname #x1B[38;5;129;01min#x1B[39;00m [#x1B[38;5;241m*#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39massetparams#x1B[38;5;241m.#x1B[39mmas, #x1B[38;5;241m*#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39massetparams#x1B[38;5;241m.#x1B[39muas]:
#x1B[0;32m---&gt; 52#x1B[0m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43madd_fxn#x1B[49m#x1B[43m(#x1B[49m
#x1B[1;32m     53#x1B[0m #x1B[43m        #x1B[49m#x1B[43mAname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mAircraft#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mground#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mlocation#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mrequests#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mp#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mp#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43massetparams#x1B[49m
#x1B[1;32m     54#x1B[0m #x1B[43m    #x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m     56#x1B[0m #x1B[38;5;28;01mfor#x1B[39;00m Hname #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39massetparams#x1B[38;5;241m.#x1B[39mhs:
#x1B[1;32m     57#x1B[0m     #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39madd_fxn(
#x1B[1;32m     58#x1B[0m         Hname,
#x1B[1;32m     59#x1B[0m         Helicopter,
#x1B[0;32m   (...)#x1B[0m
#x1B[1;32m     63#x1B[0m         p#x1B[38;5;241m=#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mp#x1B[38;5;241m.#x1B[39massetparams,
#x1B[1;32m     64#x1B[0m     )

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/function.py:554#x1B[0m, in #x1B[0;36mFunctionArchitecture.add_fxn#x1B[0;34m(self, name, fclass, *flownames, **fkwargs)#x1B[0m
#x1B[1;32m    536#x1B[0m #x1B[38;5;28;01mdef#x1B[39;00m #x1B[38;5;21madd_fxn#x1B[39m(#x1B[38;5;28mself#x1B[39m, name, fclass, #x1B[38;5;241m*#x1B[39mflownames, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mfkwargs):
#x1B[1;32m    537#x1B[0m #x1B[38;5;250m    #x1B[39m#x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m    538#x1B[0m #x1B[38;5;124;03m    Instantiate a given function in the model.#x1B[39;00m
#x1B[1;32m    539#x1B[0m 
#x1B[0;32m   (...)#x1B[0m
#x1B[1;32m    552#x1B[0m #x1B[38;5;124;03m        Parameters to send to __init__ method of the Function superclass#x1B[39;00m
#x1B[1;32m    553#x1B[0m #x1B[38;5;124;03m    """#x1B[39;00m
#x1B[0;32m--&gt; 554#x1B[0m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43madd_sim#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[38;5;124;43mfxns#x1B[39;49m#x1B[38;5;124;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mfclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mflownames#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mfkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    555#x1B[0m     #x1B[38;5;28;01mfor#x1B[39;00m flowname #x1B[38;5;129;01min#x1B[39;00m flownames:
#x1B[1;32m    556#x1B[0m         #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39m_fxnflows#x1B[38;5;241m.#x1B[39mappend((name, flowname))

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:240#x1B[0m, in #x1B[0;36mArchitecture.add_sim#x1B[0;34m(self, flex_role, name, simclass, *flownames, **kwargs)#x1B[0m
#x1B[1;32m    237#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39msp#x1B[38;5;241m.#x1B[39muse_local:
#x1B[1;32m    238#x1B[0m     fkwargs #x1B[38;5;241m=#x1B[39m {#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39m{#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mt#x1B[39m#x1B[38;5;124m'#x1B[39m: {#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mdt#x1B[39m#x1B[38;5;124m'#x1B[39m: #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39msp#x1B[38;5;241m.#x1B[39mdt}}, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mfkwargs}
#x1B[0;32m--&gt; 240#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43madd_flex_role_obj#x1B[49m#x1B[43m(#x1B[49m#x1B[43mflex_role#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mobjclass#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43msimclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mflows#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mflows#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mfkwargs#x1B[49m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/architecture/base.py:162#x1B[0m, in #x1B[0;36mArchitecture.add_flex_role_obj#x1B[0;34m(self, flex_role, name, objclass, use_copy, **kwargs)#x1B[0m
#x1B[1;32m    160#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mr#x1B[39m#x1B[38;5;124m'#x1B[39m) #x1B[38;5;129;01mand#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(objclass, #x1B[38;5;124m"#x1B[39m#x1B[38;5;124mcontainer_r#x1B[39m#x1B[38;5;124m"#x1B[39m):
#x1B[1;32m    161#x1B[0m     kwargs #x1B[38;5;241m=#x1B[39m {#x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39m{#x1B[38;5;124m'#x1B[39m#x1B[38;5;124mr#x1B[39m#x1B[38;5;124m'#x1B[39m: {#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mseed#x1B[39m#x1B[38;5;124m"#x1B[39m: #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mr#x1B[38;5;241m.#x1B[39mseed}}, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs}
#x1B[0;32m--&gt; 162#x1B[0m obj #x1B[38;5;241m=#x1B[39m #x1B[43minit_obj#x1B[49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mobjclass#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mobjclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    163#x1B[0m #x1B[43m               #x1B[49m#x1B[43mas_copy#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mas_copy#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroot#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mget_full_name#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m+#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43m.#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;241;43m+#x1B[39;49m#x1B[43mflex_role#x1B[49m#x1B[43m,#x1B[49m
#x1B[1;32m    164#x1B[0m #x1B[43m               #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    166#x1B[0m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(obj, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mh#x1B[39m#x1B[38;5;124m'#x1B[39m) #x1B[38;5;129;01mand#x1B[39;00m obj#x1B[38;5;241m.#x1B[39mh:
#x1B[1;32m    167#x1B[0m     hist #x1B[38;5;241m=#x1B[39m obj#x1B[38;5;241m.#x1B[39mh

File #x1B[0;32m/fmdtools/fmdtools/define/object/base.py:962#x1B[0m, in #x1B[0;36minit_obj#x1B[0;34m(name, objclass, track, as_copy, **kwargs)#x1B[0m
#x1B[1;32m    960#x1B[0m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    961#x1B[0m     #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[0;32m--&gt; 962#x1B[0m         fl #x1B[38;5;241m=#x1B[39m #x1B[43mobjclass#x1B[49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    963#x1B[0m     #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mTypeError#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[1;32m    964#x1B[0m         #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mTypeError#x1B[39;00m(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mPoorly specified class #x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(objclass) #x1B[38;5;241m+#x1B[39m
#x1B[1;32m    965#x1B[0m                         #x1B[38;5;124m"#x1B[39m#x1B[38;5;124m (or poor arguments) #x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;241m+#x1B[39m#x1B[38;5;28mstr#x1B[39m(kwargs)) #x1B[38;5;28;01mfrom#x1B[39;00m #x1B[38;5;21;01me#x1B[39;00m

File #x1B[0;32m/fmdtools/fmdtools/define/block/function.py:85#x1B[0m, in #x1B[0;36mFunction.__init__#x1B[0;34m(self, name, args_f, **kwargs)#x1B[0m
#x1B[1;32m     76#x1B[0m #x1B[38;5;28;01mdef#x1B[39;00m #x1B[38;5;21m__init__#x1B[39m(#x1B[38;5;28mself#x1B[39m, name#x1B[38;5;241m=#x1B[39m#x1B[38;5;28;01mNone#x1B[39;00m, args_f#x1B[38;5;241m=#x1B[39m#x1B[38;5;28mdict#x1B[39m(), #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mkwargs):
#x1B[1;32m     77#x1B[0m #x1B[38;5;250m    #x1B[39m#x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m     78#x1B[0m #x1B[38;5;124;03m    Instantiate the function superclass with the relevant parameters.#x1B[39;00m
#x1B[1;32m     79#x1B[0m 
#x1B[0;32m   (...)#x1B[0m
#x1B[1;32m     83#x1B[0m #x1B[38;5;124;03m        arguments to pass to custom __init__ function.#x1B[39;00m
#x1B[1;32m     84#x1B[0m #x1B[38;5;124;03m    """#x1B[39;00m
#x1B[0;32m---&gt; 85#x1B[0m     #x1B[38;5;28;43msuper#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[38;5;21;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m     86#x1B[0m     #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39margs_f #x1B[38;5;241m=#x1B[39m args_f
#x1B[1;32m     87#x1B[0m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[38;5;124m'#x1B[39m#x1B[38;5;124mbehavior#x1B[39m#x1B[38;5;124m'#x1B[39m):

File #x1B[0;32m/fmdtools/fmdtools/define/block/base.py:420#x1B[0m, in #x1B[0;36mBlock.__init__#x1B[0;34m(self, name, flows, h, **kwargs)#x1B[0m
#x1B[1;32m    418#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mupdate_seed()
#x1B[1;32m    419#x1B[0m #x1B[38;5;66;03m# finally, allow for user-defined role/state changing#x1B[39;00m
#x1B[0;32m--&gt; 420#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43minit_block#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    421#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39minit_hist(h#x1B[38;5;241m=#x1B[39mh)
#x1B[1;32m    422#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mcheck_slots()

File #x1B[0;32m/fmdtools/examples/taxiway/asset.py:75#x1B[0m, in #x1B[0;36mAsset.init_block#x1B[0;34m(self, **kwargs)#x1B[0m
#x1B[1;32m     72#x1B[0m     #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mperc_requests#x1B[38;5;241m.#x1B[39ms#x1B[38;5;241m.#x1B[39mput(asset_req#x1B[38;5;241m=#x1B[39m#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mland#x1B[39m#x1B[38;5;124m"#x1B[39m)
#x1B[1;32m     73#x1B[0m atc_requests#x1B[38;5;241m.#x1B[39ms#x1B[38;5;241m.#x1B[39massign(#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mperc_requests#x1B[38;5;241m.#x1B[39ms, as_copy#x1B[38;5;241m=#x1B[39m#x1B[38;5;28;01mTrue#x1B[39;00m)
#x1B[0;32m---&gt; 75#x1B[0m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mperc_requests#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mupdate#x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43matc#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43mlocal#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[38;5;124;43masset_req#x1B[39;49m#x1B[38;5;124;43m"#x1B[39;49m#x1B[43m)#x1B[49m
#x1B[1;32m     77#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mperc_location #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mlocation#x1B[38;5;241m.#x1B[39mcreate_local(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mpercieved#x1B[39m#x1B[38;5;124m"#x1B[39m, s#x1B[38;5;241m=#x1B[39m#x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mlocation#x1B[38;5;241m.#x1B[39ms)
#x1B[1;32m     79#x1B[0m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mclosest_location #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mlocation#x1B[38;5;241m.#x1B[39mcreate_local(#x1B[38;5;124m"#x1B[39m#x1B[38;5;124mclosest#x1B[39m#x1B[38;5;124m"#x1B[39m)

File #x1B[0;32m/fmdtools/fmdtools/define/flow/multiflow.py:251#x1B[0m, in #x1B[0;36mMultiFlow.update#x1B[0;34m(self, to_update, to_get, *states)#x1B[0m
#x1B[1;32m    249#x1B[0m #x1B[38;5;28;01mfor#x1B[39;00m to_up #x1B[38;5;129;01min#x1B[39;00m updatelist:
#x1B[1;32m    250#x1B[0m     up #x1B[38;5;241m=#x1B[39m #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mget_view(to_update)
#x1B[0;32m--&gt; 251#x1B[0m     #x1B[43mup#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43ms#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43massign#x1B[49m#x1B[43m(#x1B[49m#x1B[43mget#x1B[49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43ms#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mstates#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mas_copy#x1B[49m#x1B[38;5;241;43m=#x1B[39;49m#x1B[38;5;28;43;01mTrue#x1B[39;49;00m#x1B[43m)#x1B[49m

File #x1B[0;32m/fmdtools/fmdtools/define/container/base.py:263#x1B[0m, in #x1B[0;36mBaseContainer.assign#x1B[0;34m(self, obj, as_copy, *fields, **fielddict)#x1B[0m
#x1B[1;32m    230#x1B[0m #x1B[38;5;28;01mdef#x1B[39;00m #x1B[38;5;21massign#x1B[39m(#x1B[38;5;28mself#x1B[39m, obj, #x1B[38;5;241m*#x1B[39mfields, as_copy#x1B[38;5;241m=#x1B[39m#x1B[38;5;28;01mTrue#x1B[39;00m, #x1B[38;5;241m*#x1B[39m#x1B[38;5;241m*#x1B[39mfielddict):
#x1B[1;32m    231#x1B[0m #x1B[38;5;250m    #x1B[39m#x1B[38;5;124;03m"""#x1B[39;00m
#x1B[1;32m    232#x1B[0m #x1B[38;5;124;03m    Set the same-named values of the current object to those of another.#x1B[39;00m
#x1B[1;32m    233#x1B[0m 
#x1B[0;32m   (...)#x1B[0m
#x1B[1;32m    261#x1B[0m #x1B[38;5;124;03m        set to True for dicts/sets to be copied rather than referenced#x1B[39;00m
#x1B[1;32m    262#x1B[0m #x1B[38;5;124;03m    """#x1B[39;00m
#x1B[0;32m--&gt; 263#x1B[0m     fielddict #x1B[38;5;241m=#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[38;5;241;43m.#x1B[39;49m#x1B[43mget_field_dict#x1B[49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mfields#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[38;5;241;43m*#x1B[39;49m#x1B[43mfielddict#x1B[49m#x1B[43m)#x1B[49m
#x1B[1;32m    264#x1B[0m     #x1B[38;5;28;01mfor#x1B[39;00m field, value #x1B[38;5;129;01min#x1B[39;00m fielddict#x1B[38;5;241m.#x1B[39mitems():
#x1B[1;32m    265#x1B[0m         #x1B[38;5;28mself#x1B[39m#x1B[38;5;241m.#x1B[39mset_field(field, value, as_copy#x1B[38;5;241m=#x1B[39mas_copy)

File #x1B[0;32m/fmdtools/fmdtools/define/container/base.py:217#x1B[0m, in #x1B[0;36mBaseContainer.get_field_dict#x1B[0;34m(self, obj, *fields, **fielddict)#x1B[0m
#x1B[1;32m    214#x1B[0m #x1B[38;5;28;01melif#x1B[39;00m #x1B[38;5;28misinstance#x1B[39m(obj, dataobject):
#x1B[1;32m    215#x1B[0m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m fielddict:
#x1B[1;32m    216#x1B[0m         #x1B[38;5;66;03m# if states provided, only assign those states#x1B[39;00m
#x1B[0;32m--&gt; 217#x1B[0m         fielddict #x1B[38;5;241m=#x1B[39m #x1B[43m{#x1B[49m#x1B[43ms#x1B[49m#x1B[43m:#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43mgetattr#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43ms#x1B[49m#x1B[43m)#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43;01mfor#x1B[39;49;00m#x1B[43m #x1B[49m#x1B[43ms#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;129;43;01min#x1B[39;49;00m#x1B[43m #x1B[49m#x1B[43mfields#x1B[49m#x1B[43m}#x1B[49m
#x1B[1;32m    218#x1B[0m     #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    219#x1B[0m         #x1B[38;5;66;03m# if kwarg states provided, assign keys to values#x1B[39;00m
#x1B[1;32m    220#x1B[0m         fielddict #x1B[38;5;241m=#x1B[39m {k: #x1B[38;5;28mgetattr#x1B[39m(obj, v) #x1B[38;5;28;01mfor#x1B[39;00m k, v #x1B[38;5;129;01min#x1B[39;00m fielddict#x1B[38;5;241m.#x1B[39mitems()}

File #x1B[0;32m/fmdtools/fmdtools/define/container/base.py:217#x1B[0m, in #x1B[0;36m&lt;dictcomp&gt;#x1B[0;34m(.0)#x1B[0m
#x1B[1;32m    214#x1B[0m #x1B[38;5;28;01melif#x1B[39;00m #x1B[38;5;28misinstance#x1B[39m(obj, dataobject):
#x1B[1;32m    215#x1B[0m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m fielddict:
#x1B[1;32m    216#x1B[0m         #x1B[38;5;66;03m# if states provided, only assign those states#x1B[39;00m
#x1B[0;32m--&gt; 217#x1B[0m         fielddict #x1B[38;5;241m=#x1B[39m {s: #x1B[38;5;28;43mgetattr#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43ms#x1B[49m#x1B[43m)#x1B[49m #x1B[38;5;28;01mfor#x1B[39;00m s #x1B[38;5;129;01min#x1B[39;00m fields}
#x1B[1;32m    218#x1B[0m     #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[1;32m    219#x1B[0m         #x1B[38;5;66;03m# if kwarg states provided, assign keys to values#x1B[39;00m
#x1B[1;32m    220#x1B[0m         fielddict #x1B[38;5;241m=#x1B[39m {k: #x1B[38;5;28mgetattr#x1B[39m(obj, v) #x1B[38;5;28;01mfor#x1B[39;00m k, v #x1B[38;5;129;01min#x1B[39;00m fielddict#x1B[38;5;241m.#x1B[39mitems()}

#x1B[0;31mAttributeError#x1B[0m: 'RequestState' object has no attribute 'atc'</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid" time="0.024"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_asset.AssetTests testMethod=test_avoid&gt;

    def setUp(self):
        single_ac_params = AssetParams(
            num_ma=1, ground_ma=0, num_ua=0, ground_ua=0, num_h=0, ground_h=0
        )
&gt;       self.single_ac_model = test_aircraft_model(
            p=TaxiwayParams(assetparams=single_ac_params)
        )

examples/taxiway/test_asset.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/test_asset.py:83: in init_architecture
    self.add_fxn("ma1", Aircraft, "ground", "location", "requests",
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7d1270d0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid_plot" time="0.029"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_asset.AssetTests testMethod=test_avoid_plot&gt;

    def setUp(self):
        single_ac_params = AssetParams(
            num_ma=1, ground_ma=0, num_ua=0, ground_ua=0, num_h=0, ground_h=0
        )
&gt;       self.single_ac_model = test_aircraft_model(
            p=TaxiwayParams(assetparams=single_ac_params)
        )

examples/taxiway/test_asset.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/test_asset.py:83: in init_architecture
    self.add_fxn("ma1", Aircraft, "ground", "location", "requests",
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef852636d0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle" time="0.017"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_asset.AssetTests testMethod=test_heli_cycle&gt;

    def setUp(self):
        single_ac_params = AssetParams(
            num_ma=1, ground_ma=0, num_ua=0, ground_ua=0, num_h=0, ground_h=0
        )
&gt;       self.single_ac_model = test_aircraft_model(
            p=TaxiwayParams(assetparams=single_ac_params)
        )

examples/taxiway/test_asset.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/test_asset.py:83: in init_architecture
    self.add_fxn("ma1", Aircraft, "ground", "location", "requests",
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef84208b80&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle_plot" time="0.017"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_asset.AssetTests testMethod=test_heli_cycle_plot&gt;

    def setUp(self):
        single_ac_params = AssetParams(
            num_ma=1, ground_ma=0, num_ua=0, ground_ua=0, num_h=0, ground_h=0
        )
&gt;       self.single_ac_model = test_aircraft_model(
            p=TaxiwayParams(assetparams=single_ac_params)
        )

examples/taxiway/test_asset.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/test_asset.py:83: in init_architecture
    self.add_fxn("ma1", Aircraft, "ground", "location", "requests",
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7fc71600&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight" time="0.020"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_asset.AssetTests testMethod=test_lost_sight&gt;

    def setUp(self):
        single_ac_params = AssetParams(
            num_ma=1, ground_ma=0, num_ua=0, ground_ua=0, num_h=0, ground_h=0
        )
&gt;       self.single_ac_model = test_aircraft_model(
            p=TaxiwayParams(assetparams=single_ac_params)
        )

examples/taxiway/test_asset.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/test_asset.py:83: in init_architecture
    self.add_fxn("ma1", Aircraft, "ground", "location", "requests",
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7d2ebc40&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight_plot" time="0.019"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_asset.AssetTests testMethod=test_lost_sight_plot&gt;

    def setUp(self):
        single_ac_params = AssetParams(
            num_ma=1, ground_ma=0, num_ua=0, ground_ua=0, num_h=0, ground_h=0
        )
&gt;       self.single_ac_model = test_aircraft_model(
            p=TaxiwayParams(assetparams=single_ac_params)
        )

examples/taxiway/test_asset.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/test_asset.py:83: in init_architecture
    self.add_fxn("ma1", Aircraft, "ground", "location", "requests",
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7d0ec6a0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle" time="0.020"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_asset.AssetTests testMethod=test_one_cycle&gt;

    def setUp(self):
        single_ac_params = AssetParams(
            num_ma=1, ground_ma=0, num_ua=0, ground_ua=0, num_h=0, ground_h=0
        )
&gt;       self.single_ac_model = test_aircraft_model(
            p=TaxiwayParams(assetparams=single_ac_params)
        )

examples/taxiway/test_asset.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/test_asset.py:83: in init_architecture
    self.add_fxn("ma1", Aircraft, "ground", "location", "requests",
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7ee596f0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle_plot" time="0.015"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_asset.AssetTests testMethod=test_one_cycle_plot&gt;

    def setUp(self):
        single_ac_params = AssetParams(
            num_ma=1, ground_ma=0, num_ua=0, ground_ua=0, num_h=0, ground_h=0
        )
&gt;       self.single_ac_model = test_aircraft_model(
            p=TaxiwayParams(assetparams=single_ac_params)
        )

examples/taxiway/test_asset.py:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/test_asset.py:83: in init_architecture
    self.add_fxn("ma1", Aircraft, "ground", "location", "requests",
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7d28cf10&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception" time="0.031"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_model.ModelTests testMethod=test_atc_lost_ground_perception&gt;

    def setUp(self):
&gt;       self.mdl = taxiway_model()

examples/taxiway/test_model.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/model.py:52: in init_architecture
    self.add_fxn(
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef845febc0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception_plot" time="0.030"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_model.ModelTests testMethod=test_atc_lost_ground_perception_plot&gt;

    def setUp(self):
&gt;       self.mdl = taxiway_model()

examples/taxiway/test_model.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/model.py:52: in init_architecture
    self.add_fxn(
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef851d8dc0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command" time="0.034"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_model.ModelTests testMethod=test_atc_wrong_land_command&gt;

    def setUp(self):
&gt;       self.mdl = taxiway_model()

examples/taxiway/test_model.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/model.py:52: in init_architecture
    self.add_fxn(
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7d3be890&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_lost_sight" time="0.054"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_model.ModelTests testMethod=test_atc_wrong_land_command_lost_sight&gt;

    def setUp(self):
&gt;       self.mdl = taxiway_model()

examples/taxiway/test_model.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/model.py:52: in init_architecture
    self.add_fxn(
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef851d9bd0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_sight_plot" time="0.038"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_model.ModelTests testMethod=test_atc_wrong_land_command_sight_plot&gt;

    def setUp(self):
&gt;       self.mdl = taxiway_model()

examples/taxiway/test_model.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/model.py:52: in init_architecture
    self.add_fxn(
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7fe2cf70&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_model.ModelTests" name="test_default_plots" time="0.048"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_model.ModelTests testMethod=test_default_plots&gt;

    def setUp(self):
&gt;       self.mdl = taxiway_model()

examples/taxiway/test_model.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/model.py:52: in init_architecture
    self.add_fxn(
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7fc308b0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="examples.taxiway.test_model.ModelTests" name="test_scen" time="0.058"><failure message="AttributeError: 'RequestState' object has no attribute 'atc'">self = &lt;test_model.ModelTests testMethod=test_scen&gt;

    def setUp(self):
&gt;       self.mdl = taxiway_model()

examples/taxiway/test_model.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
fmdtools/define/architecture/function.py:512: in __init__
    Architecture.__init__(self, h=h, **kwargs)
fmdtools/define/architecture/base.py:90: in __init__
    self.init_architecture(**kwargs)
examples/taxiway/model.py:52: in init_architecture
    self.add_fxn(
fmdtools/define/architecture/function.py:554: in add_fxn
    self.add_sim('fxns', name, fclass, *flownames, **fkwargs)
fmdtools/define/architecture/base.py:240: in add_sim
    self.add_flex_role_obj(flex_role, name, objclass=simclass, flows=flows, **fkwargs)
fmdtools/define/architecture/base.py:162: in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
fmdtools/define/object/base.py:962: in init_obj
    fl = objclass(name=name, track=track, **kwargs)
fmdtools/define/block/function.py:85: in __init__
    super().__init__(name=name, **kwargs)
fmdtools/define/block/base.py:420: in __init__
    self.init_block(**kwargs)
examples/taxiway/asset.py:75: in init_block
    self.perc_requests.update("atc", "local", "asset_req")
fmdtools/define/flow/multiflow.py:251: in update
    up.s.assign(get.s, *states, as_copy=True)
fmdtools/define/container/base.py:263: in assign
    fielddict = self.get_field_dict(obj, *fields, **fielddict)
fmdtools/define/container/base.py:217: in get_field_dict
    fielddict = {s: getattr(obj, s) for s in fields}
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = &lt;tuple_iterator object at 0x7fef7d3231c0&gt;

&gt;   fielddict = {s: getattr(obj, s) for s in fields}
E   AttributeError: 'RequestState' object has no attribute 'atc'

fmdtools/define/container/base.py:217: AttributeError</failure></testcase><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.auto_filetype" time="0.006" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.create_indiv_filename" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.diff" time="0.004" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.is_bool" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.is_numeric" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.join_key" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.nan_to_x" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.to_include_keys" time="0.003" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph" time="0.634" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.add_node_groups" time="0.411" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.set_heatmap" time="0.143" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.ModelGraph" time="0.013" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.create_inheritance_subgraph" time="0.006" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.FlowEdgeStyle" time="0.003" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.edge_style_factory" time="0.555" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.node_style_factory" time="0.992" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.to_legend_label" time="0.005" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.cut" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_degraded_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_fault_time" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_faulty_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_bound_errhist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_slice" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_modephase_time" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_phase_time" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_samples_in_phases" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.find_modephase" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_phase_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_sample_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.find_interval_overlap" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.from_hist" time="0.004" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.join_phasemaps" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__eq__" time="0.004" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__sub__" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.fromdict" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.is_flat" time="0.003" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.Comparison" time="1.837" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureActGraph" time="0.010" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureFlowGraph" time="0.008" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureGraph" time="0.009" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitecture" time="0.012" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFlowGraph" time="0.010" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFxnGraph" time="0.011" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureGraph" time="0.015" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureTypeGraph" time="0.008" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture" time="0.007" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture.all_at" time="0.008" /><testcase classname="fmdtools.define.block.action" name="fmdtools.define.block.action.Action" time="0.005" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_hist_ind" time="0.003" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_shift" time="0.003" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_timerange" time="0.004" /><testcase classname="fmdtools.define.block.function" name="fmdtools.define.block.function.Function" time="0.005" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.assign" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.copy" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.create_hist" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.get_field_dict" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.set_field" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.to_default" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.check_container_pick" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Fault.calc_rate" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode" time="0.003" /><testcase classname="fmdtools.define.container.parameter" name="fmdtools.define.container.parameter.Parameter" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand" time="0.004" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand.get_rand_states" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.add" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.div" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.get" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.gett" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.inc" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.limit" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.mul" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.put" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.roundto" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.same" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.set_atts" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.sub" time="0.002" /><testcase classname="fmdtools.define.container.time" name="fmdtools.define.container.time.Time" time="0.004" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment" time="0.020" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment.copy" time="0.051" /><testcase classname="fmdtools.define.flow.base" name="fmdtools.define.flow.base.Flow" time="0.006" /><testcase classname="fmdtools.define.flow.commsflow" name="fmdtools.define.flow.commsflow.CommsFlow" time="0.007" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow" time="0.005" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.create_hist" time="0.005" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.get_view" time="0.004" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject" time="0.006" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.assign_roles" time="0.004" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_att_roletype" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_node_attrs" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_prop" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_neighbors" time="0.009" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_properties" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_pts" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_range" time="0.008" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_gridpoint" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_index" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords" time="0.006" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.copy" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_all" time="0.006" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_closest" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.in_area" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.set_rand_pts" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.CoordsParam" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.MetricCoords" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.all_at" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_at_shape" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_to_shape" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomLine" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoint" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoly" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.LineParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PointParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PolyParam" time="0.003" /><testcase classname="fmdtools.define.object.timer" name="fmdtools.define.object.timer.Timer" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all" time="0.014"><failure message="467 &#10;468         Add all faults in the Simulable to the FaultDomain.&#10;469 &#10;470         Examples&#10;471         --------&#10;472         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;473         &gt;&gt;&gt; fd = FaultDomain(Drone().fxns['ctl_dof'])&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.FaultDomain.add_all[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:473: UnexpectedException">467 
468         Add all faults in the Simulable to the FaultDomain.
469 
470         Examples
471         --------
472         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
473         &gt;&gt;&gt; fd = FaultDomain(Drone().fxns['ctl_dof'])
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.FaultDomain.add_all[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:473: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxn_modes" time="0.014"><failure message="537 &#10;538         Parameters&#10;539         ----------&#10;540         *fxnnames : str&#10;541             Names of the functions (e.g., &quot;affect_dof&quot;, &quot;move_water&quot;).&#10;542 &#10;543         Examples&#10;544         --------&#10;545         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;546         &gt;&gt;&gt; fd = FaultDomain(Drone())&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.FaultDomain.add_all_fxn_modes[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:546: UnexpectedException">537 
538         Parameters
539         ----------
540         *fxnnames : str
541             Names of the functions (e.g., "affect_dof", "move_water").
542 
543         Examples
544         --------
545         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
546         &gt;&gt;&gt; fd = FaultDomain(Drone())
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.FaultDomain.add_all_fxn_modes[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:546: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxnclass_modes" time="0.029" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_faults" time="0.014"><failure message="447 &#10;448         Parameters&#10;449         ----------&#10;450         *faults : tuple&#10;451             Faults (simname, faultmode) to inject&#10;452 &#10;453         Examples&#10;454         --------&#10;455         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;456         &gt;&gt;&gt; fd= FaultDomain(Drone())&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.FaultDomain.add_faults[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:456: UnexpectedException">447 
448         Parameters
449         ----------
450         *faults : tuple
451             Faults (simname, faultmode) to inject
452 
453         Examples
454         --------
455         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
456         &gt;&gt;&gt; fd= FaultDomain(Drone())
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.FaultDomain.add_faults[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:456: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_singlecomp_modes" time="0.015"><failure message="561 &#10;562         Parameters&#10;563         ----------&#10;564         *fxns : str&#10;565             Names of the functions containing the components.&#10;566 &#10;567         Examples&#10;568         --------&#10;569         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;570         &gt;&gt;&gt; fd = FaultDomain(Drone())&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.FaultDomain.add_singlecomp_modes[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:570: UnexpectedException">561 
562         Parameters
563         ----------
564         *fxns : str
565             Names of the functions containing the components.
566 
567         Examples
568         --------
569         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
570         &gt;&gt;&gt; fd = FaultDomain(Drone())
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.FaultDomain.add_singlecomp_modes[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:570: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_phases" time="0.014"><failure message="966             The default is {}.&#10;967         n_joint : int&#10;968             Number of joint fault modes to include in sample.&#10;969         **joint_kwargs : kwargs&#10;970             baserate and p_cond arguments to add_joint_fault_scenario.&#10;971 &#10;972         Examples&#10;973         --------&#10;974         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;975         &gt;&gt;&gt; mdl = Drone()&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.FaultSample.add_fault_phases[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:975: UnexpectedException">966             The default is {}.
967         n_joint : int
968             Number of joint fault modes to include in sample.
969         **joint_kwargs : kwargs
970             baserate and p_cond arguments to add_joint_fault_scenario.
971 
972         Examples
973         --------
974         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
975         &gt;&gt;&gt; mdl = Drone()
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.FaultSample.add_fault_phases[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:975: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_times" time="0.014"><failure message="896             Weight factors corresponding to the times The default is [].&#10;897         n_joint : int&#10;898             Number of joint fault modes.&#10;899         **joint_kwargs : kwargs&#10;900             baserate and p_cond arguments to add_joint_fault_scenario.&#10;901 &#10;902         Examples&#10;903         --------&#10;904         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;905         &gt;&gt;&gt; mdl = Drone()&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.FaultSample.add_fault_times[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:905: UnexpectedException">896             Weight factors corresponding to the times The default is [].
897         n_joint : int
898             Number of joint fault modes.
899         **joint_kwargs : kwargs
900             baserate and p_cond arguments to add_joint_fault_scenario.
901 
902         Examples
903         --------
904         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
905         &gt;&gt;&gt; mdl = Drone()
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.FaultSample.add_fault_times[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:905: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_joint_fault_scenario" time="0.014"><failure message="857             Default is 'ind' which calculates the rate as independent (rate1*rate2*...).&#10;858             Can also be 'max', which uses the max fault likelihood.&#10;859         p_cond : float&#10;860             Conditional fault probability for joint fault modes. Used if not using&#10;861             independent base rate assumptions to calculate. Default is 1.0.&#10;862 &#10;863         Examples&#10;864         --------&#10;865         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;866         &gt;&gt;&gt; fd = FaultDomain(Drone())&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.FaultSample.add_joint_fault_scenario[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:866: UnexpectedException">857             Default is 'ind' which calculates the rate as independent (rate1*rate2*...).
858             Can also be 'max', which uses the max fault likelihood.
859         p_cond : float
860             Conditional fault probability for joint fault modes. Used if not using
861             independent base rate assumptions to calculate. Default is 1.0.
862 
863         Examples
864         --------
865         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
866         &gt;&gt;&gt; fd = FaultDomain(Drone())
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.FaultSample.add_joint_fault_scenario[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:866: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_single_fault_scenario" time="0.013"><failure message="819             Fault to add ('blockname', 'faultname').&#10;820         time : float&#10;821             Time of the fault scenario.&#10;822         weight : float, optional&#10;823             Weighting factor for the scenario rate. The default is 1.0.&#10;824 &#10;825         Examples&#10;826         --------&#10;827         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;828         &gt;&gt;&gt; mdl = Drone()&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.FaultSample.add_single_fault_scenario[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:828: UnexpectedException">819             Fault to add ('blockname', 'faultname').
820         time : float
821             Time of the fault scenario.
822         weight : float, optional
823             Weighting factor for the scenario rate. The default is 1.0.
824 
825         Examples
826         --------
827         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
828         &gt;&gt;&gt; mdl = Drone()
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.FaultSample.add_single_fault_scenario[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:828: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain.get_var_iters" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterHistSample" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterResultSample" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_ranges" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_replicates" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_scenario" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_orthogonal" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_product" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_random" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultdomain" time="0.013"><failure message="1063             (e.g., to call Faultdomain.add_all, use &quot;all&quot;)&#10;1064         *args : args&#10;1065             Arguments to add_method.&#10;1066         **kwargs : kwargs&#10;1067             Keyword arguments to add_method&#10;1068 &#10;1069         Examples&#10;1070         --------&#10;1071         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;1072         &gt;&gt;&gt; s = SampleApproach(Drone())&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.SampleApproach.add_faultdomain[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:1072: UnexpectedException">1063             (e.g., to call Faultdomain.add_all, use "all")
1064         *args : args
1065             Arguments to add_method.
1066         **kwargs : kwargs
1067             Keyword arguments to add_method
1068 
1069         Examples
1070         --------
1071         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
1072         &gt;&gt;&gt; s = SampleApproach(Drone())
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.SampleApproach.add_faultdomain[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:1072: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultsample" time="0.012"><failure message="1114             Phasemap to instantiate the FaultSample with. If a dict/tuple is provided,&#10;1115             uses a PhaseMap with the dict/tuple as phases. The default is {}.&#10;1116             If a list, passes to JointFaultSample&#10;1117         **kwargs : kwargs&#10;1118             add_method kwargs.&#10;1119 &#10;1120         Examples&#10;1121         --------&#10;1122         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone&#10;1123         &gt;&gt;&gt; s = SampleApproach(Drone())&#10;UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')&#10;Traceback (most recent call last):&#10;  File &quot;/opt/conda/envs/my_env/lib/python3.11/doctest.py&quot;, line 1355, in __run&#10;    exec(compile(example.source, filename, &quot;single&quot;,&#10;  File &quot;&lt;doctest fmdtools.sim.sample.SampleApproach.add_faultsample[1]&gt;&quot;, line 1, in &lt;module&gt;&#10;  File &quot;/fmdtools/fmdtools/define/architecture/function.py&quot;, line 512, in __init__&#10;    Architecture.__init__(self, h=h, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 90, in __init__&#10;    self.init_architecture(**kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_rural.py&quot;, line 700, in init_architecture&#10;    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 197, in add_flow&#10;    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,&#10;  File &quot;/fmdtools/fmdtools/define/architecture/base.py&quot;, line 162, in add_flex_role_obj&#10;    obj = init_obj(name=name, objclass=objclass, track=track,&#10;          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 962, in init_obj&#10;    fl = objclass(name=name, track=track, **kwargs)&#10;         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/environment.py&quot;, line 69, in __init__&#10;    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)&#10;  File &quot;/fmdtools/fmdtools/define/flow/commsflow.py&quot;, line 103, in __init__&#10;    super().__init__(name=name, glob=glob, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/flow/multiflow.py&quot;, line 110, in __init__&#10;    super().__init__(name=name, root=root, track=track, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 190, in __init__&#10;    self.init_roletypes(*roletypes, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 251, in init_roletypes&#10;    self.init_roles(roletype, **kwargs)&#10;  File &quot;/fmdtools/fmdtools/define/object/base.py&quot;, line 296, in init_roles&#10;    container = container_initializer(**container_args)&#10;                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 948, in __init__&#10;    self.init_properties(*args, **kwargs)&#10;  File &quot;/fmdtools/examples/multirotor/drone_mdl_dynamic.py&quot;, line 90, in init_properties&#10;    self.set_range(&quot;target&quot;, True, 0, 150, 10, 160)&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 411, in set_range&#10;    _, y_max_ind = self.to_index(0.0, ymax)&#10;                   ^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;/fmdtools/fmdtools/define/object/coords.py&quot;, line 188, in to_index&#10;    raise Exception(&quot;Outside bounds of grid: &quot;+str(x)+','+str(y))&#10;Exception: Outside bounds of grid: 0.0,160&#10;/fmdtools/fmdtools/sim/sample.py:1123: UnexpectedException">1114             Phasemap to instantiate the FaultSample with. If a dict/tuple is provided,
1115             uses a PhaseMap with the dict/tuple as phases. The default is {}.
1116             If a list, passes to JointFaultSample
1117         **kwargs : kwargs
1118             add_method kwargs.
1119 
1120         Examples
1121         --------
1122         &gt;&gt;&gt; from examples.multirotor.drone_mdl_rural import Drone
1123         &gt;&gt;&gt; s = SampleApproach(Drone())
UNEXPECTED EXCEPTION: Exception('Outside bounds of grid: 0.0,160')
Traceback (most recent call last):
  File "/opt/conda/envs/my_env/lib/python3.11/doctest.py", line 1355, in __run
    exec(compile(example.source, filename, "single",
  File "&lt;doctest fmdtools.sim.sample.SampleApproach.add_faultsample[1]&gt;", line 1, in &lt;module&gt;
  File "/fmdtools/fmdtools/define/architecture/function.py", line 512, in __init__
    Architecture.__init__(self, h=h, **kwargs)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 90, in __init__
    self.init_architecture(**kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_rural.py", line 700, in init_architecture
    self.add_flow('environment', DroneEnvironment, p=self.p.env_param)
  File "/fmdtools/fmdtools/define/architecture/base.py", line 197, in add_flow
    self.add_flex_role_obj('flows', name, objclass=fclass, use_copy=use_copy,
  File "/fmdtools/fmdtools/define/architecture/base.py", line 162, in add_flex_role_obj
    obj = init_obj(name=name, objclass=objclass, track=track,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/base.py", line 962, in init_obj
    fl = objclass(name=name, track=track, **kwargs)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/environment.py", line 69, in __init__
    super().__init__(name=name, root=root, glob=glob, p=p, s=s, track=track)
  File "/fmdtools/fmdtools/define/flow/commsflow.py", line 103, in __init__
    super().__init__(name=name, glob=glob, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/flow/multiflow.py", line 110, in __init__
    super().__init__(name=name, root=root, track=track, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 190, in __init__
    self.init_roletypes(*roletypes, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 251, in init_roletypes
    self.init_roles(roletype, **kwargs)
  File "/fmdtools/fmdtools/define/object/base.py", line 296, in init_roles
    container = container_initializer(**container_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 948, in __init__
    self.init_properties(*args, **kwargs)
  File "/fmdtools/examples/multirotor/drone_mdl_dynamic.py", line 90, in init_properties
    self.set_range("target", True, 0, 150, 10, 160)
  File "/fmdtools/fmdtools/define/object/coords.py", line 411, in set_range
    _, y_max_ind = self.to_index(0.0, ymax)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/fmdtools/fmdtools/define/object/coords.py", line 188, in to_index
    raise Exception("Outside bounds of grid: "+str(x)+','+str(y))
Exception: Outside bounds of grid: 0.0,160
/fmdtools/fmdtools/sim/sample.py:1123: UnexpectedException</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_orthogonal" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_random" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_even" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_quad" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence.update_sequence" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.BaseProblem.get_opt_hist" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.DisturbanceProblem.__init__" time="0.031" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.HistoryObjective" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ParameterSimProblem" time="0.157" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture" time="0.066" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_full_problem" time="0.048" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_problem" time="0.030" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResponseCoords" time="0.005" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultConstraint.con_from_value" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultObjective.get_result_value" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SimpleProblem" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SingleFaultScenarioProblem" time="0.028" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fault_plot" time="0.658" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_flowgraph_plot" time="0.891" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fxngraph_plot" time="0.839" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_modelgraph_plot" time="0.615" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_result_from_plot" time="0.587" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_typegraph_plot" time="0.200" /><testcase classname="tests.test_packages.define_Tests" name="test_pdf_translation_options" time="0.008" /></testsuite></testsuites>