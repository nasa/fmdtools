<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="3" failures="11" skipped="3" tests="379" time="3953.984" timestamp="2025-09-03T00:26:01.098692-07:00" hostname="bamboo-r7.ndc.nasa.gov"><testcase classname="" name="examples.rover.optimization.search_rover" time="0.000"><error message="collection failure">fmdtools/analyze/result.py:365: in __getattr__
    return get_dict_attr(obj.data, self.__class__, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fmdtools/analyze/result.py:96: in get_dict_attr
    sub_dict = dict_in[attr[0]]
               ^^^^^^^^^^^^^^^^
E   KeyError: 'endclass'

During handling of the above exception, another exception occurred:
fmdtools/analyze/result.py:368: in __getattr__
    return self.all_with(argstr)
           ^^^^^^^^^^^^^^^^^^^^^
fmdtools/analyze/result.py:442: in all_with
    raise Exception(attr+" not in Result keys: "+str(self.keys()))
E   Exception: endclass not in Result keys: dict_keys(['nominal.tend.classify.rate', 'nominal.tend.classify.cost', 'nominal.tend.classify.prob', 'nominal.tend.classify.expected_cost', 'nominal.tend.classify.in_bound', 'nominal.tend.classify.at_finish', 'nominal.tend.classify.line_dist', 'nominal.tend.classify.num_modes', 'nominal.tend.classify.end_dist', 'nominal.tend.classify.tot_deviation', 'nominal.tend.classify.faults', 'nominal.tend.classify.classification', 'nominal.tend.classify.end_x', 'nominal.tend.classify.end_y', 'nominal.tend.classify.endpt', 'sequence.tend.classify.rate', 'sequence.tend.classify.cost', 'sequence.tend.classify.prob', 'sequence.tend.classify.expected_cost', 'sequence.tend.classify.in_bound', 'sequence.tend.classify.at_finish', 'sequence.tend.classify.line_dist', 'sequence.tend.classify.num_modes', 'sequence.tend.classify.end_dist', 'sequence.tend.classify.tot_deviation', 'sequence.tend.classify.faults', 'sequence.tend.classify.classification', 'sequence.tend.classify.end_x', 'sequence.tend.classify.end_y', 'sequence.tend.classify.endpt'])

During handling of the above exception, another exception occurred:
examples/rover/optimization/search_rover.py:760: in &lt;module&gt;
    line_dist([0, 0, 0])
examples/rover/optimization/search_rover.py:40: in line_dist
    dist = res.endclass['line_dist']
           ^^^^^^^^^^^^
fmdtools/analyze/result.py:370: in __getattr__
    raise AttributeError("Not in dict: "+str(argstr))
E   AttributeError: Not in dict: endclass</error></testcase><testcase classname="" name="examples.rover.test_rover" time="0.000"><error message="collection failure">fmdtools/analyze/result.py:365: in __getattr__
    return get_dict_attr(obj.data, self.__class__, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fmdtools/analyze/result.py:96: in get_dict_attr
    sub_dict = dict_in[attr[0]]
               ^^^^^^^^^^^^^^^^
E   KeyError: 'endclass'

During handling of the above exception, another exception occurred:
fmdtools/analyze/result.py:368: in __getattr__
    return self.all_with(argstr)
           ^^^^^^^^^^^^^^^^^^^^^
fmdtools/analyze/result.py:442: in all_with
    raise Exception(attr+" not in Result keys: "+str(self.keys()))
E   Exception: endclass not in Result keys: dict_keys(['nominal.tend.classify.rate', 'nominal.tend.classify.cost', 'nominal.tend.classify.prob', 'nominal.tend.classify.expected_cost', 'nominal.tend.classify.in_bound', 'nominal.tend.classify.at_finish', 'nominal.tend.classify.line_dist', 'nominal.tend.classify.num_modes', 'nominal.tend.classify.end_dist', 'nominal.tend.classify.tot_deviation', 'nominal.tend.classify.faults', 'nominal.tend.classify.classification', 'nominal.tend.classify.end_x', 'nominal.tend.classify.end_y', 'nominal.tend.classify.endpt', 'sequence.tend.classify.rate', 'sequence.tend.classify.cost', 'sequence.tend.classify.prob', 'sequence.tend.classify.expected_cost', 'sequence.tend.classify.in_bound', 'sequence.tend.classify.at_finish', 'sequence.tend.classify.line_dist', 'sequence.tend.classify.num_modes', 'sequence.tend.classify.end_dist', 'sequence.tend.classify.tot_deviation', 'sequence.tend.classify.faults', 'sequence.tend.classify.classification', 'sequence.tend.classify.end_x', 'sequence.tend.classify.end_y', 'sequence.tend.classify.endpt'])

During handling of the above exception, another exception occurred:
examples/rover/test_rover.py:19: in &lt;module&gt;
    from examples.rover.optimization.search_rover import line_dist, line_dist_faster
examples/rover/optimization/search_rover.py:760: in &lt;module&gt;
    line_dist([0, 0, 0])
examples/rover/optimization/search_rover.py:40: in line_dist
    dist = res.endclass['line_dist']
           ^^^^^^^^^^^^
fmdtools/analyze/result.py:370: in __getattr__
    raise AttributeError("Not in dict: "+str(argstr))
E   AttributeError: Not in dict: endclass</error><error message="collection failure">fmdtools/analyze/result.py:365: in __getattr__
    return get_dict_attr(obj.data, self.__class__, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fmdtools/analyze/result.py:96: in get_dict_attr
    sub_dict = dict_in[attr[0]]
               ^^^^^^^^^^^^^^^^
E   KeyError: 'endclass'

During handling of the above exception, another exception occurred:
fmdtools/analyze/result.py:368: in __getattr__
    return self.all_with(argstr)
           ^^^^^^^^^^^^^^^^^^^^^
fmdtools/analyze/result.py:442: in all_with
    raise Exception(attr+" not in Result keys: "+str(self.keys()))
E   Exception: endclass not in Result keys: dict_keys(['nominal.tend.classify.rate', 'nominal.tend.classify.cost', 'nominal.tend.classify.prob', 'nominal.tend.classify.expected_cost', 'nominal.tend.classify.in_bound', 'nominal.tend.classify.at_finish', 'nominal.tend.classify.line_dist', 'nominal.tend.classify.num_modes', 'nominal.tend.classify.end_dist', 'nominal.tend.classify.tot_deviation', 'nominal.tend.classify.faults', 'nominal.tend.classify.classification', 'nominal.tend.classify.end_x', 'nominal.tend.classify.end_y', 'nominal.tend.classify.endpt', 'sequence.tend.classify.rate', 'sequence.tend.classify.cost', 'sequence.tend.classify.prob', 'sequence.tend.classify.expected_cost', 'sequence.tend.classify.in_bound', 'sequence.tend.classify.at_finish', 'sequence.tend.classify.line_dist', 'sequence.tend.classify.num_modes', 'sequence.tend.classify.end_dist', 'sequence.tend.classify.tot_deviation', 'sequence.tend.classify.faults', 'sequence.tend.classify.classification', 'sequence.tend.classify.end_x', 'sequence.tend.classify.end_y', 'sequence.tend.classify.endpt'])

During handling of the above exception, another exception occurred:
examples/rover/test_rover.py:19: in &lt;module&gt;
    from examples.rover.optimization.search_rover import line_dist, line_dist_faster
examples/rover/optimization/search_rover.py:760: in &lt;module&gt;
    line_dist([0, 0, 0])
examples/rover/optimization/search_rover.py:40: in line_dist
    dist = res.endclass['line_dist']
           ^^^^^^^^^^^^
fmdtools/analyze/result.py:370: in __getattr__
    raise AttributeError("Not in dict: "+str(argstr))
E   AttributeError: Not in dict: endclass</error></testcase><testcase classname="examples.asg_demo.Action_Sequence_Graph.ipynb" name="Action_Sequence_Graph.ipynb" time="19.487" /><testcase classname="examples.eps.EPS_Example_Notebook.ipynb" name="EPS_Example_Notebook.ipynb" time="13.955" /><testcase classname="examples.eps.test_eps.epsTests" name="test_all_faults" time="3.218" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_1" time="0.177" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_2" time="0.198" /><testcase classname="examples.eps.test_eps.epsTests" name="test_fault_app" time="4.874" /><testcase classname="examples.eps.test_eps.epsTests" name="test_multfault_saving" time="0.529" /><testcase classname="examples.eps.test_eps.epsTests" name="test_nominal_saving" time="0.160" /><testcase classname="examples.eps.test_eps.epsTests" name="test_pickleability" time="7.348" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_onefault" time="0.572" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_singlefaults" time="10.561" /><testcase classname="examples.multiflow_demo.Multiflow_and_Commsflow_Demonstration.ipynb" name="Multiflow_and_Commsflow_Demonstration.ipynb" time="8.270" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_combination" time="0.336" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_passing" time="0.365" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_mutliflow_copying" time="0.336" /><testcase classname="examples.multirotor.Demonstration.ipynb" name="Demonstration.ipynb" time="101.048" /><testcase classname="examples.multirotor.Multirotor_Optimization.ipynb" name="Multirotor_Optimization.ipynb" time="291.407" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.AffectDOF.inc_pos" time="0.008" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.assign_vectdist_to_goal" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.calc_dist_to_goal" time="0.005" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.SightGrid" time="0.390" /><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.AffectDOF.calc_pwr" time="0.019" /><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.LineArchParam" time="0.004" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.AffectDOF.static_behavior" time="0.005" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.CtlDOF.static_behavior" time="0.005" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.dist2d" time="0.002" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.unit_vect2d" time="0.002" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DistEE.static_behavior" time="0.007" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.HoldPayload.static_behavior" time="0.009" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.PlanPath.static_behavior" time="0.007" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_objectives" time="1.437" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_param_domain_1" time="0.003" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_param_domain_2" time="0.003" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_set_constraints_1" time="0.002" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_set_constraints_2" time="0.002" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_sim_mdl" time="0.875" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest" name="test_scenprob_results" time="2.291" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest2" name="test_scenprob_results" time="2.255" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest3" name="test_scenprob_results" time="2.219" /><testcase classname="examples.multirotor.test_multirotor.DroneDisturbanceTest" name="test_disturbance_set" time="0.756" /><testcase classname="examples.pump.Optimization.ipynb" name="Optimization.ipynb" time="185.625" /><testcase classname="examples.pump.Parallelism_Tutorial.ipynb" name="Parallelism_Tutorial.ipynb" time="227.581" /><testcase classname="examples.pump.Pump_Example_Notebook.ipynb" name="Pump_Example_Notebook.ipynb" time="9.209"><failure message="#x1B[31mAttributeError#x1B[39m: Not in dict: graph">---------------------------------------------------------------------------
result.graph
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mKeyError#x1B[39m                                  Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:365#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    364#x1B[39m         obj = #x1B[38;5;28mself#x1B[39m
#x1B[32m--&gt; #x1B[39m#x1B[32m365#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[43mget_dict_attr#x1B[49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m.#x1B[49m#x1B[43mdata#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[34;43m__class__#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43margs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    366#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mKeyError#x1B[39;00m:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:96#x1B[39m, in #x1B[36mget_dict_attr#x1B[39m#x1B[34m(dict_in, des_class, *attr)#x1B[39m
#x1B[32m     95#x1B[39m #x1B[38;5;250m#x1B[39m#x1B[33;03m"""Get attributes *attr from a given nested dict dict_in of class des_class."""#x1B[39;00m
#x1B[32m---&gt; #x1B[39m#x1B[32m96#x1B[39m sub_dict = #x1B[43mdict_in#x1B[49m#x1B[43m[#x1B[49m#x1B[43mattr#x1B[49m#x1B[43m[#x1B[49m#x1B[32;43m0#x1B[39;49m#x1B[43m]#x1B[49m#x1B[43m]#x1B[49m
#x1B[32m     97#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mlen#x1B[39m(attr) == #x1B[32m1#x1B[39m:

#x1B[31mKeyError#x1B[39m: 'graph'

During handling of the above exception, another exception occurred:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:368#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    367#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m368#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mall_with#x1B[49m#x1B[43m(#x1B[49m#x1B[43margstr#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    369#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:442#x1B[39m, in #x1B[36mResult.all_with#x1B[39m#x1B[34m(self, attr)#x1B[39m
#x1B[32m    441#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m442#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(attr+#x1B[33m"#x1B[39m#x1B[33m not in Result keys: #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mself#x1B[39m.keys()))

#x1B[31mException#x1B[39m: graph not in Result keys: dict_keys([])

During handling of the above exception, another exception occurred:

#x1B[31mAttributeError#x1B[39m                            Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[9]#x1B[39m#x1B[32m, line 1#x1B[39m
#x1B[32m----&gt; #x1B[39m#x1B[32m1#x1B[39m #x1B[43mresult#x1B[49m#x1B[43m.#x1B[49m#x1B[43mgraph#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:370#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    368#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[38;5;28mself#x1B[39m.all_with(argstr)
#x1B[32m    369#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m370#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mAttributeError#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mNot in dict: #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(argstr))

#x1B[31mAttributeError#x1B[39m: Not in dict: graph</failure></testcase><testcase classname="examples.pump.Tutorial_complete.ipynb" name="Tutorial_complete.ipynb" time="7.813"><failure message="#x1B[31mAttributeError#x1B[39m: 'Pump' object has no attribute 'staticfxns'">---------------------------------------------------------------------------
mdl.staticfxns
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mAttributeError#x1B[39m                            Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[9]#x1B[39m#x1B[32m, line 1#x1B[39m
#x1B[32m----&gt; #x1B[39m#x1B[32m1#x1B[39m #x1B[43mmdl#x1B[49m#x1B[43m.#x1B[49m#x1B[43mstaticfxns#x1B[49m

#x1B[31mAttributeError#x1B[39m: 'Pump' object has no attribute 'staticfxns'</failure></testcase><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.accumulate" time="0.003" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.reseting_accumulate" time="0.002" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_app_prop_values" time="1.387" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_cost_calc" time="116.068" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_parallelism" time="70.579" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values" time="2.004" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values_2" time="2.486" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_isave" time="16.551" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_save" time="15.617" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fmea_options" time="2.314" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_hist_tracking_setup" time="0.072" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_different" time="11.298" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_same" time="21.105" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/pump/test_pump.py:138: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_isave" time="155.425" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_save" time="154.784" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nominal_save" time="0.905" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_csv" time="0.624" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_json" time="0.603" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_pickle" time="0.613" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_onefault_save" time="1.593" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample" time="0.049" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_isave" time="9.477" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_save" time="8.659" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_pickleability" time="7.747" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_multfault" time="2.087" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_isave" time="9.311" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_save" time="9.648" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting" time="0.041" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting_dict" time="0.040" /><testcase classname="examples.pump.test_pump.IndivPumpTests" name="test_mutable_setup" time="0.042" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_inf_v" time="0.004" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_no_v" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_hi" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_initialization" time="0.003" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_condfaults_dynamic" time="0.005" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_initialization" time="0.004" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_nom" time="0.004" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_results" time="0.772" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_static" time="0.084" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_nominal_results" time="0.378" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_mdl_pickle" time="79.712" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_different" time="11.550" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_same" time="20.923" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_reset" time="0.001"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/pump/test_pump_stochastic.py:112: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_set_vars" time="0.037" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_isave" time="80.490" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_save" time="83.607" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_isave" time="4.865" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_save" time="5.120" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nested_hists" time="11.231" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals" time="4.302" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals_xd" time="256.110" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_rand_paramsample_plot" time="10.146" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_approach" time="375.512" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_safety" time="26.952" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_set_seeds" time="0.111" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_stochastic_pdf" time="0.119" /><testcase classname="examples.rover.FaultSample_Use-Cases.ipynb" name="FaultSample_Use-Cases.ipynb" time="24.411" /><testcase classname="examples.rover.HFAC_Analyses.IDETC_Human_Paper_Analysis.ipynb" name="IDETC_Human_Paper_Analysis.ipynb" time="364.405"><failure message="A cell timed out while it was being executed, after 300 seconds.">A cell timed out while it was being executed, after 300 seconds.
The message was: Cell execution timed out.
Here is a preview of the cell contents:
-------------------
ers, hists = prop.parameter_sample(mdl, ps)
-------------------</failure></testcase><testcase classname="examples.rover.Model_Structure_Visualization_Tutorial.ipynb" name="Model_Structure_Visualization_Tutorial.ipynb" time="8.145"><failure message="#x1B[31mException#x1B[39m: Local timestep: 0.5 doesn't line up with global timestep: 1.0">---------------------------------------------------------------------------
mdl = Rover()
mtg = FunctionArchitectureTypeGraph(mdl)
fig, ax = mtg.draw()
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[10]#x1B[39m#x1B[32m, line 1#x1B[39m
#x1B[32m----&gt; #x1B[39m#x1B[32m1#x1B[39m mdl = #x1B[43mRover#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m      2#x1B[39m mtg = FunctionArchitectureTypeGraph(mdl)
#x1B[32m      3#x1B[39m fig, ax = mtg.draw()

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/architecture/base.py:109#x1B[39m, in #x1B[36mArchitecture.__init__#x1B[39m#x1B[34m(self, as_copy, h, *args, **kwargs)#x1B[39m
#x1B[32m    107#x1B[39m #x1B[38;5;28mself#x1B[39m._init_flexroles = []
#x1B[32m    108#x1B[39m #x1B[38;5;28mself#x1B[39m.init_flexible_roles(**kwargs)
#x1B[32m--&gt; #x1B[39m#x1B[32m109#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43minit_architecture#x1B[49m#x1B[43m(#x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    110#x1B[39m #x1B[38;5;28mself#x1B[39m.build(**kwargs)
#x1B[32m    111#x1B[39m #x1B[38;5;28mself#x1B[39m.mut_kwargs = {role: kwargs.get(role)
#x1B[32m    112#x1B[39m                    #x1B[38;5;28;01mfor#x1B[39;00m role #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28mself#x1B[39m.get_roles(#x1B[33m'#x1B[39m#x1B[33mcontainer#x1B[39m#x1B[33m'#x1B[39m, with_immutable=#x1B[38;5;28;01mFalse#x1B[39;00m)
#x1B[32m    113#x1B[39m                    #x1B[38;5;28;01mif#x1B[39;00m role #x1B[38;5;129;01min#x1B[39;00m kwargs}

#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[8]#x1B[39m#x1B[32m, line 31#x1B[39m, in #x1B[36mRover.init_architecture#x1B[39m#x1B[34m(self, **kwargs)#x1B[39m
#x1B[32m     28#x1B[39m #x1B[38;5;28mself#x1B[39m.add_flow(#x1B[33m'#x1B[39m#x1B[33mcomms#x1B[39m#x1B[33m'#x1B[39m, Flow) #x1B[38;5;66;03m#{'x':0,'y':0}#x1B[39;00m
#x1B[32m     30#x1B[39m #x1B[38;5;28mself#x1B[39m.add_fxn(#x1B[33m"#x1B[39m#x1B[33mcontrol_rover#x1B[39m#x1B[33m"#x1B[39m, ControlRover, #x1B[33m"#x1B[39m#x1B[33mcontrol#x1B[39m#x1B[33m"#x1B[39m)
#x1B[32m---&gt; #x1B[39m#x1B[32m31#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43madd_fxn#x1B[49m#x1B[43m(#x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43mstore_energy#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mStoreEnergy#x1B[49m#x1B[43m,#x1B[49m#x1B[43m  #x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43mee#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43mcontrol#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m)#x1B[49m
#x1B[32m     32#x1B[39m #x1B[38;5;28mself#x1B[39m.add_fxn(#x1B[33m"#x1B[39m#x1B[33mmove_rover#x1B[39m#x1B[33m"#x1B[39m, MoveRover, #x1B[33m"#x1B[39m#x1B[33mground#x1B[39m#x1B[33m"#x1B[39m,#x1B[33m"#x1B[39m#x1B[33mee#x1B[39m#x1B[33m"#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mcontrol#x1B[39m#x1B[33m"#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mforce#x1B[39m#x1B[33m"#x1B[39m)
#x1B[32m     33#x1B[39m #x1B[38;5;28mself#x1B[39m.add_fxn(#x1B[33m"#x1B[39m#x1B[33mview_ground#x1B[39m#x1B[33m"#x1B[39m, ViewGround, #x1B[33m"#x1B[39m#x1B[33mground#x1B[39m#x1B[33m"#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mee#x1B[39m#x1B[33m"#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mvideo#x1B[39m#x1B[33m"#x1B[39m,#x1B[33m"#x1B[39m#x1B[33mforce#x1B[39m#x1B[33m"#x1B[39m)

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/architecture/function.py:508#x1B[39m, in #x1B[36mFunctionArchitecture.add_fxn#x1B[39m#x1B[34m(self, name, fclass, *flownames, **fkwargs)#x1B[39m
#x1B[32m    490#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34madd_fxn#x1B[39m(#x1B[38;5;28mself#x1B[39m, name, fclass, *flownames, **fkwargs):
#x1B[32m    491#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    492#x1B[39m #x1B[33;03m    Instantiate a given function in the model.#x1B[39;00m
#x1B[32m    493#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    506#x1B[39m #x1B[33;03m        Parameters to send to __init__ method of the Function superclass#x1B[39;00m
#x1B[32m    507#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m508#x1B[39m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43madd_sim#x1B[49m#x1B[43m(#x1B[49m#x1B[33;43m'#x1B[39;49m#x1B[33;43mfxns#x1B[39;49m#x1B[33;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mfclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43mflownames#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mfkwargs#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/architecture/base.py:388#x1B[39m, in #x1B[36mArchitecture.add_sim#x1B[39m#x1B[34m(self, flex_role, name, simclass, *flownames, **kwargs)#x1B[39m
#x1B[32m    371#x1B[39m #x1B[38;5;250m#x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    372#x1B[39m #x1B[33;03mAdd a Simulable to the given flex_role.#x1B[39;00m
#x1B[32m    373#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    385#x1B[39m #x1B[33;03m    Flows, dicts for non-default values to p, s, etc.#x1B[39;00m
#x1B[32m    386#x1B[39m #x1B[33;03m"""#x1B[39;00m
#x1B[32m    387#x1B[39m flows = #x1B[38;5;28mself#x1B[39m.get_flows(*flownames, all_if_empty=#x1B[38;5;28;01mFalse#x1B[39;00m)
#x1B[32m--&gt; #x1B[39m#x1B[32m388#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43madd_flex_role_obj#x1B[49m#x1B[43m(#x1B[49m#x1B[43mflex_role#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    389#x1B[39m #x1B[43m                       #x1B[49m#x1B[43mobjclass#x1B[49m#x1B[43m=#x1B[49m#x1B[43msimclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mflows#x1B[49m#x1B[43m=#x1B[49m#x1B[43mflows#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    390#x1B[39m #x1B[38;5;28;01mfor#x1B[39;00m flowname #x1B[38;5;129;01min#x1B[39;00m flownames:
#x1B[32m    391#x1B[39m     #x1B[38;5;28mself#x1B[39m._simflows.append((name, flowname))

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/architecture/base.py:314#x1B[39m, in #x1B[36mArchitecture.add_flex_role_obj#x1B[39m#x1B[34m(self, flex_role, name, objclass, use_copy, **kwargs)#x1B[39m
#x1B[32m    312#x1B[39m track = get_sub_include(name, get_sub_include(flex_role, #x1B[38;5;28mself#x1B[39m.track))
#x1B[32m    313#x1B[39m kwargs = #x1B[38;5;28mself#x1B[39m.get_flex_role_kwargs(objclass, **kwargs)
#x1B[32m--&gt; #x1B[39m#x1B[32m314#x1B[39m obj = #x1B[43minit_obj#x1B[49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[43m=#x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mobjclass#x1B[49m#x1B[43m=#x1B[49m#x1B[43mobjclass#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[43m=#x1B[49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    315#x1B[39m #x1B[43m               #x1B[49m#x1B[43mas_copy#x1B[49m#x1B[43m=#x1B[49m#x1B[43mas_copy#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroot#x1B[49m#x1B[43m=#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mget_full_name#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[43m+#x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43m.#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m+#x1B[49m#x1B[43mflex_role#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    316#x1B[39m #x1B[43m               #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    318#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(obj, #x1B[33m'#x1B[39m#x1B[33mh#x1B[39m#x1B[33m'#x1B[39m) #x1B[38;5;129;01mand#x1B[39;00m obj.h:
#x1B[32m    319#x1B[39m     hist = obj.h

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/object/base.py:1201#x1B[39m, in #x1B[36minit_obj#x1B[39m#x1B[34m(name, objclass, track, as_copy, **kwargs)#x1B[39m
#x1B[32m   1199#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m   1200#x1B[39m     #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m-&gt; #x1B[39m#x1B[32m1201#x1B[39m         fl = #x1B[43mobjclass#x1B[49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[43m=#x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mtrack#x1B[49m#x1B[43m=#x1B[49m#x1B[43mtrack#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m   1202#x1B[39m     #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mTypeError#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[32m   1203#x1B[39m         #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mTypeError#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mPoorly specified class #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(objclass) +
#x1B[32m   1204#x1B[39m                         #x1B[33m"#x1B[39m#x1B[33m (or poor arguments) #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(kwargs)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/function.py:90#x1B[39m, in #x1B[36mFunction.__init__#x1B[39m#x1B[34m(self, name, args_f, **kwargs)#x1B[39m
#x1B[32m     81#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34m__init__#x1B[39m(#x1B[38;5;28mself#x1B[39m, name=#x1B[38;5;28;01mNone#x1B[39;00m, args_f=#x1B[38;5;28mdict#x1B[39m(), **kwargs):
#x1B[32m     82#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m     83#x1B[39m #x1B[33;03m    Instantiate the function superclass with the relevant parameters.#x1B[39;00m
#x1B[32m     84#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m     88#x1B[39m #x1B[33;03m        arguments to pass to custom __init__ function.#x1B[39;00m
#x1B[32m     89#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m---&gt; #x1B[39m#x1B[32m90#x1B[39m     #x1B[38;5;28;43msuper#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m#x1B[43m.#x1B[49m#x1B[34;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mname#x1B[49m#x1B[43m=#x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m     91#x1B[39m     #x1B[38;5;28mself#x1B[39m.args_f = args_f
#x1B[32m     92#x1B[39m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mhasattr#x1B[39m(#x1B[38;5;28mself#x1B[39m, #x1B[33m'#x1B[39m#x1B[33mbehavior#x1B[39m#x1B[33m'#x1B[39m):

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/base.py:843#x1B[39m, in #x1B[36mBlock.__init__#x1B[39m#x1B[34m(self, name, flows, h, **kwargs)#x1B[39m
#x1B[32m    840#x1B[39m     flows = {#x1B[38;5;28mself#x1B[39m.flownames.get(fn, fn): flow #x1B[38;5;28;01mfor#x1B[39;00m fn, flow #x1B[38;5;129;01min#x1B[39;00m flows.items()}
#x1B[32m    841#x1B[39m flows = {**flows}
#x1B[32m--&gt; #x1B[39m#x1B[32m843#x1B[39m #x1B[43mSimulable#x1B[49m#x1B[43m.#x1B[49m#x1B[34;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mname#x1B[49m#x1B[43m=#x1B[49m#x1B[43mname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mroletypes#x1B[49m#x1B[43m=#x1B[49m#x1B[43m[#x1B[49m#x1B[33;43m'#x1B[39;49m#x1B[33;43mcontainer#x1B[39;49m#x1B[33;43m'#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[33;43m'#x1B[39;49m#x1B[33;43mflow#x1B[39;49m#x1B[33;43m'#x1B[39;49m#x1B[43m]#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    844#x1B[39m #x1B[43m                   #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mflows#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    845#x1B[39m #x1B[38;5;66;03m# send flows from block level to arch level#x1B[39;00m
#x1B[32m    846#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[33m'#x1B[39m#x1B[33march#x1B[39m#x1B[33m'#x1B[39m #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28mself#x1B[39m.roletypes:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/base.py:206#x1B[39m, in #x1B[36mSimulable.__init__#x1B[39m#x1B[34m(self, **kwargs)#x1B[39m
#x1B[32m    195#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34m__init__#x1B[39m(#x1B[38;5;28mself#x1B[39m, **kwargs):
#x1B[32m    196#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    197#x1B[39m #x1B[33;03m    Instantiate internal Simulable attributes.#x1B[39;00m
#x1B[32m    198#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    204#x1B[39m #x1B[33;03m        Keyword arguments to BaseObject#x1B[39;00m
#x1B[32m    205#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m206#x1B[39m     #x1B[43mBaseObject#x1B[49m#x1B[43m.#x1B[49m#x1B[34;43m__init__#x1B[39;49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    207#x1B[39m     #x1B[38;5;28mself#x1B[39m.set_time()
#x1B[32m    208#x1B[39m     #x1B[38;5;28mself#x1B[39m._sims = {}

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/object/base.py:246#x1B[39m, in #x1B[36mBaseObject.__init__#x1B[39m#x1B[34m(self, name, roletypes, track, root, **kwargs)#x1B[39m
#x1B[32m    244#x1B[39m #x1B[38;5;28mself#x1B[39m.init_indicators()
#x1B[32m    245#x1B[39m #x1B[38;5;28mself#x1B[39m.init_track(track)
#x1B[32m--&gt; #x1B[39m#x1B[32m246#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43minit_roletypes#x1B[49m#x1B[43m(#x1B[49m#x1B[43m*#x1B[49m#x1B[43mroletypes#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    247#x1B[39m #x1B[38;5;28mself#x1B[39m.check_slots()
#x1B[32m    248#x1B[39m #x1B[38;5;28mself#x1B[39m._mutobjs = []

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/object/base.py:346#x1B[39m, in #x1B[36mBaseObject.init_roletypes#x1B[39m#x1B[34m(self, initializer, *roletypes, **kwargs)#x1B[39m
#x1B[32m    343#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m roletype #x1B[38;5;129;01mnot#x1B[39;00m #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28mself#x1B[39m.roletypes:
#x1B[32m    344#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mRoletype: #x1B[39m#x1B[33m"#x1B[39m + roletype + #x1B[33m"#x1B[39m#x1B[33m not in class variable#x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    345#x1B[39m                     #x1B[33m"#x1B[39m#x1B[33m self.roletypes: #x1B[39m#x1B[33m"#x1B[39m + #x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mself#x1B[39m.roletypes))
#x1B[32m--&gt; #x1B[39m#x1B[32m346#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43minit_roles#x1B[49m#x1B[43m(#x1B[49m#x1B[43mroletype#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43minitializer#x1B[49m#x1B[43m=#x1B[49m#x1B[43minitializer#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/object/base.py:395#x1B[39m, in #x1B[36mBaseObject.init_roles#x1B[39m#x1B[34m(self, roletype, initializer, **kwargs)#x1B[39m
#x1B[32m    393#x1B[39m     obj_args[#x1B[33m'#x1B[39m#x1B[33mtrack#x1B[39m#x1B[33m'#x1B[39m] = get_sub_include(rolename, #x1B[38;5;28mself#x1B[39m.track)
#x1B[32m    394#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m395#x1B[39m     obj = #x1B[43mobj_initializer#x1B[49m#x1B[43m(#x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mobj_args#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    396#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mAttributeError#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m ae:
#x1B[32m    397#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mProblem initializing #x1B[39m#x1B[33m"#x1B[39m + roletype + #x1B[33m"#x1B[39m#x1B[33m_#x1B[39m#x1B[33m"#x1B[39m + rolename
#x1B[32m    398#x1B[39m                     + #x1B[33m"#x1B[39m#x1B[33m: #x1B[39m#x1B[33m"#x1B[39m + #x1B[38;5;28mstr#x1B[39m(initializer)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01mae#x1B[39;00m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/container/time.py:101#x1B[39m, in #x1B[36mTime.__init__#x1B[39m#x1B[34m(self, *args, **kwargs)#x1B[39m
#x1B[32m     99#x1B[39m #x1B[38;5;28;01mfor#x1B[39;00m timername #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28mself#x1B[39m.timernames:
#x1B[32m    100#x1B[39m     #x1B[38;5;28mself#x1B[39m.timers[timername] = Timer(timername)
#x1B[32m--&gt; #x1B[39m#x1B[32m101#x1B[39m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mset_timestep#x1B[49m#x1B[43m(#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/container/time.py:150#x1B[39m, in #x1B[36mTime.set_timestep#x1B[39m#x1B[34m(self, **kwargs)#x1B[39m
#x1B[32m    148#x1B[39m     dt = local_tstep
#x1B[32m    149#x1B[39m     #x1B[38;5;28;01mif#x1B[39;00m (dt &lt; global_tstep #x1B[38;5;129;01mand#x1B[39;00m global_tstep % dt) #x1B[38;5;129;01mor#x1B[39;00m dt % global_tstep:
#x1B[32m--&gt; #x1B[39m#x1B[32m150#x1B[39m         #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mLocal timestep: #x1B[39m#x1B[33m"#x1B[39m + #x1B[38;5;28mstr#x1B[39m(dt) +
#x1B[32m    151#x1B[39m                         #x1B[33m"#x1B[39m#x1B[33m doesn#x1B[39m#x1B[33m'#x1B[39m#x1B[33mt line up with global timestep: #x1B[39m#x1B[33m"#x1B[39m +
#x1B[32m    152#x1B[39m                         #x1B[38;5;28mstr#x1B[39m(global_tstep))
#x1B[32m    153#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m    154#x1B[39m     dt = global_tstep

#x1B[31mException#x1B[39m: Local timestep: 0.5 doesn't line up with global timestep: 1.0</failure></testcase><testcase classname="examples.rover.Rover_Setup_Notebook.ipynb" name="Rover_Setup_Notebook.ipynb" time="94.184" /><testcase classname="examples.rover.degradation_modelling.Degradation_Modelling_Notebook.ipynb" name="Degradation_Modelling_Notebook.ipynb" time="159.482"><failure message="#x1B[31mException#x1B[39m: Error simulating nested sample scenario(s)">---------------------------------------------------------------------------
fd = {'drive_faults':  (('faults', ('drive', 'elec_open'), ('drive', 'stuck'), ('drive', 'stuck_left'), ('drive', 'stuck_right')), {})}
fs = {'drive_faults': (('fault_phases', 'drive_faults', "start"), {})}
ec_nest, hist_nest, app_nest = prop.nested_sample(mdl, phs, faultdomains=fd, faultsamples=fs, pool=mp.Pool(5))

#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mRemoteTraceback#x1B[39m                           Traceback (most recent call last)
#x1B[31mRemoteTraceback#x1B[39m: 
"""
Traceback (most recent call last):
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 833, in run
    inputs = self.gen_inputs(scenlist)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 1044, in gen_inputs
    return [({**sim_kwar, 'scen': scen, 'mdl': self.mdls[scen.time].copy()},
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 1044, in &lt;listcomp&gt;
    return [({**sim_kwar, 'scen': scen, 'mdl': self.mdls[scen.time].copy()},
                                               ~~~~~~~~~^^^^^^^^^^^
KeyError: 15.0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 485, in __call__
    self.run(**kwargs)
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 1032, in run
    super().run(**kwargs)
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 835, in run
    raise Exception("Not enough models: "+str(self.mdls)) from e
Exception: Not enough models: {}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/bamboo/.local/share/uv/python/cpython-3.11.11-linux-x86_64-gnu/lib/python3.11/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ^^^^^^^^^^^^^^^^^^^
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 1057, in exec_fault_sim
    return sim(**args[1])
           ^^^^^^^^^^^^^^
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 980, in __call__
    rets = super().__call__(**kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py", line 487, in __call__
    raise Exception("Error simulating "+self.name+" scenario(s)") from e
Exception: Error simulating hist_2 scenario(s)
"""

The above exception was the direct cause of the following exception:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:485#x1B[39m, in #x1B[36mBaseSimulation.__call__#x1B[39m#x1B[34m(self, **kwargs)#x1B[39m
#x1B[32m    484#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m485#x1B[39m     #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mrun#x1B[49m#x1B[43m(#x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    486#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:836#x1B[39m, in #x1B[36mMultiSimulation.run#x1B[39m#x1B[34m(self, **kwargs)#x1B[39m
#x1B[32m    835#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mNot enough models: #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mself#x1B[39m.mdls)) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m836#x1B[39m res_list = #x1B[38;5;28;43mlist#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43mtqdm#x1B[49m#x1B[43m.#x1B[49m#x1B[43mtqdm#x1B[49m#x1B[43m(#x1B[49m#x1B[43mrunner#x1B[49m#x1B[43m(#x1B[49m#x1B[43minputs#x1B[49m#x1B[43m)#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    837#x1B[39m #x1B[43m                          #x1B[49m#x1B[43mtotal#x1B[49m#x1B[43m=#x1B[49m#x1B[38;5;28;43mlen#x1B[39;49m#x1B[43m(#x1B[49m#x1B[43minputs#x1B[49m#x1B[43m)#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    838#x1B[39m #x1B[43m                          #x1B[49m#x1B[43mdisable#x1B[49m#x1B[43m=#x1B[49m#x1B[38;5;129;43;01mnot#x1B[39;49;00m#x1B[43m #x1B[49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mshowprogress#x1B[49m#x1B[43m)#x1B[49m#x1B[43m,#x1B[49m
#x1B[32m    839#x1B[39m #x1B[43m                          #x1B[49m#x1B[43mdesc#x1B[49m#x1B[43m=#x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43mSCENARIOS COMPLETE#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m)#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    840#x1B[39m #x1B[38;5;28;01mfor#x1B[39;00m i, scen #x1B[38;5;129;01min#x1B[39;00m #x1B[38;5;28menumerate#x1B[39m(scenlist):

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/tqdm/std.py:1181#x1B[39m, in #x1B[36mtqdm.__iter__#x1B[39m#x1B[34m(self)#x1B[39m
#x1B[32m   1180#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m-&gt; #x1B[39m#x1B[32m1181#x1B[39m #x1B[43m    #x1B[49m#x1B[38;5;28;43;01mfor#x1B[39;49;00m#x1B[43m #x1B[49m#x1B[43mobj#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;129;43;01min#x1B[39;49;00m#x1B[43m #x1B[49m#x1B[43miterable#x1B[49m#x1B[43m:#x1B[49m
#x1B[32m   1182#x1B[39m #x1B[43m        #x1B[49m#x1B[38;5;28;43;01myield#x1B[39;49;00m#x1B[43m #x1B[49m#x1B[43mobj#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/.local/share/uv/python/cpython-3.11.11-linux-x86_64-gnu/lib/python3.11/multiprocessing/pool.py:873#x1B[39m, in #x1B[36mIMapIterator.next#x1B[39m#x1B[34m(self, timeout)#x1B[39m
#x1B[32m    872#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m value
#x1B[32m--&gt; #x1B[39m#x1B[32m873#x1B[39m #x1B[38;5;28;01mraise#x1B[39;00m value

#x1B[31mException#x1B[39m: Error simulating hist_2 scenario(s)

The above exception was the direct cause of the following exception:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[32]#x1B[39m#x1B[32m, line 3#x1B[39m
#x1B[32m      1#x1B[39m fd = {#x1B[33m'#x1B[39m#x1B[33mdrive_faults#x1B[39m#x1B[33m'#x1B[39m:  ((#x1B[33m'#x1B[39m#x1B[33mfaults#x1B[39m#x1B[33m'#x1B[39m, (#x1B[33m'#x1B[39m#x1B[33mdrive#x1B[39m#x1B[33m'#x1B[39m, #x1B[33m'#x1B[39m#x1B[33melec_open#x1B[39m#x1B[33m'#x1B[39m), (#x1B[33m'#x1B[39m#x1B[33mdrive#x1B[39m#x1B[33m'#x1B[39m, #x1B[33m'#x1B[39m#x1B[33mstuck#x1B[39m#x1B[33m'#x1B[39m), (#x1B[33m'#x1B[39m#x1B[33mdrive#x1B[39m#x1B[33m'#x1B[39m, #x1B[33m'#x1B[39m#x1B[33mstuck_left#x1B[39m#x1B[33m'#x1B[39m), (#x1B[33m'#x1B[39m#x1B[33mdrive#x1B[39m#x1B[33m'#x1B[39m, #x1B[33m'#x1B[39m#x1B[33mstuck_right#x1B[39m#x1B[33m'#x1B[39m)), {})}
#x1B[32m      2#x1B[39m fs = {#x1B[33m'#x1B[39m#x1B[33mdrive_faults#x1B[39m#x1B[33m'#x1B[39m: ((#x1B[33m'#x1B[39m#x1B[33mfault_phases#x1B[39m#x1B[33m'#x1B[39m, #x1B[33m'#x1B[39m#x1B[33mdrive_faults#x1B[39m#x1B[33m'#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mstart#x1B[39m#x1B[33m"#x1B[39m), {})}
#x1B[32m----&gt; #x1B[39m#x1B[32m3#x1B[39m ec_nest, hist_nest, app_nest = #x1B[43mprop#x1B[49m#x1B[43m.#x1B[49m#x1B[43mnested_sample#x1B[49m#x1B[43m(#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mphs#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mfaultdomains#x1B[49m#x1B[43m=#x1B[49m#x1B[43mfd#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mfaultsamples#x1B[49m#x1B[43m=#x1B[49m#x1B[43mfs#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mpool#x1B[49m#x1B[43m=#x1B[49m#x1B[43mmp#x1B[49m#x1B[43m.#x1B[49m#x1B[43mPool#x1B[49m#x1B[43m(#x1B[49m#x1B[32;43m5#x1B[39;49m#x1B[43m)#x1B[49m#x1B[43m)#x1B[49m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:317#x1B[39m, in #x1B[36mnested_sample#x1B[39m#x1B[34m(mdl, ps, **kwargs)#x1B[39m
#x1B[32m    289#x1B[39m #x1B[38;5;250m#x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    290#x1B[39m #x1B[33;03mSimulate a set of fault scenarios within a ParameterSample.#x1B[39;00m
#x1B[32m    291#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    313#x1B[39m #x1B[33;03m    scenario with structure {'nomscen1': app1}#x1B[39;00m
#x1B[32m    314#x1B[39m #x1B[33;03m"""#x1B[39;00m
#x1B[32m    315#x1B[39m sim = NestedSimulation(mdl=mdl, samp=ps, name=#x1B[33m"#x1B[39m#x1B[33mnested sample#x1B[39m#x1B[33m"#x1B[39m,
#x1B[32m    316#x1B[39m                        **filter_kwargs(NestedSimulation, **kwargs))
#x1B[32m--&gt; #x1B[39m#x1B[32m317#x1B[39m res, hist = #x1B[43msim#x1B[49m#x1B[43m(#x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mget_sim_call_kwargs#x1B[49m#x1B[43m(#x1B[49m#x1B[43msim#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    318#x1B[39m #x1B[38;5;28;01mreturn#x1B[39;00m res, hist, sim.apps

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/propagate.py:487#x1B[39m, in #x1B[36mBaseSimulation.__call__#x1B[39m#x1B[34m(self, **kwargs)#x1B[39m
#x1B[32m    485#x1B[39m     #x1B[38;5;28mself#x1B[39m.run(**kwargs)
#x1B[32m    486#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m #x1B[38;5;28;01mas#x1B[39;00m e:
#x1B[32m--&gt; #x1B[39m#x1B[32m487#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mError simulating #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mself#x1B[39m.name+#x1B[33m"#x1B[39m#x1B[33m scenario(s)#x1B[39m#x1B[33m"#x1B[39m) #x1B[38;5;28;01mfrom#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34;01me#x1B[39;00m
#x1B[32m    488#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mself#x1B[39m.tosave:
#x1B[32m    489#x1B[39m     #x1B[38;5;28mself#x1B[39m.save(**filter_kwargs(#x1B[38;5;28mself#x1B[39m.save, **kwargs))

#x1B[31mException#x1B[39m: Error simulating nested sample scenario(s)</failure></testcase><testcase classname="examples.rover.rover_model" name="examples.rover.rover_model.Drive.drive_nominal" time="0.110" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Comprehend" time="0.010" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Decide" time="0.009" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.HumanActions" time="0.048" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Look" time="0.007" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Percieve" time="0.009" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Press" time="0.008" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Project" time="0.009" /><testcase classname="examples.tank.Tank_Analysis.ipynb" name="Tank_Analysis.ipynb" time="8.233"><failure message="#x1B[31mAttributeError#x1B[39m: Not in dict: graph">---------------------------------------------------------------------------

fig = result.graph.draw(figsize=(8,6))
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mKeyError#x1B[39m                                  Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:365#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    364#x1B[39m         obj = #x1B[38;5;28mself#x1B[39m
#x1B[32m--&gt; #x1B[39m#x1B[32m365#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[43mget_dict_attr#x1B[49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m.#x1B[49m#x1B[43mdata#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[34;43m__class__#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43margs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    366#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mKeyError#x1B[39;00m:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:96#x1B[39m, in #x1B[36mget_dict_attr#x1B[39m#x1B[34m(dict_in, des_class, *attr)#x1B[39m
#x1B[32m     95#x1B[39m #x1B[38;5;250m#x1B[39m#x1B[33;03m"""Get attributes *attr from a given nested dict dict_in of class des_class."""#x1B[39;00m
#x1B[32m---&gt; #x1B[39m#x1B[32m96#x1B[39m sub_dict = #x1B[43mdict_in#x1B[49m#x1B[43m[#x1B[49m#x1B[43mattr#x1B[49m#x1B[43m[#x1B[49m#x1B[32;43m0#x1B[39;49m#x1B[43m]#x1B[49m#x1B[43m]#x1B[49m
#x1B[32m     97#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mlen#x1B[39m(attr) == #x1B[32m1#x1B[39m:

#x1B[31mKeyError#x1B[39m: 'graph'

During handling of the above exception, another exception occurred:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:368#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    367#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m368#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mall_with#x1B[49m#x1B[43m(#x1B[49m#x1B[43margstr#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    369#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:442#x1B[39m, in #x1B[36mResult.all_with#x1B[39m#x1B[34m(self, attr)#x1B[39m
#x1B[32m    441#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m442#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(attr+#x1B[33m"#x1B[39m#x1B[33m not in Result keys: #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mself#x1B[39m.keys()))

#x1B[31mException#x1B[39m: graph not in Result keys: dict_keys([])

During handling of the above exception, another exception occurred:

#x1B[31mAttributeError#x1B[39m                            Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[6]#x1B[39m#x1B[32m, line 1#x1B[39m
#x1B[32m----&gt; #x1B[39m#x1B[32m1#x1B[39m fig = #x1B[43mresult#x1B[49m#x1B[43m.#x1B[49m#x1B[43mgraph#x1B[49m.draw(figsize=(#x1B[32m8#x1B[39m,#x1B[32m6#x1B[39m))

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:370#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    368#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[38;5;28mself#x1B[39m.all_with(argstr)
#x1B[32m    369#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m370#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mAttributeError#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mNot in dict: #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(argstr))

#x1B[31mAttributeError#x1B[39m: Not in dict: graph</failure></testcase><testcase classname="examples.tank.test_tank.TankTests" name="test_approach" time="19.255" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_0" time="17.984" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_1" time="45.122" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_notrack" time="17.282" /><testcase classname="examples.tank.test_tank.TankTests" name="test_comp_mode_inj" time="0.257" /><testcase classname="examples.tank.test_tank.TankTests" name="test_different_components" time="0.103" /><testcase classname="examples.tank.test_tank.TankTests" name="test_epc_math" time="0.075" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_isave" time="20.630" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_save" time="19.082" /><testcase classname="examples.tank.test_tank.TankTests" name="test_local_tstep" time="1.368" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_different" time="4.579" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_same" time="9.824" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_reset" time="0.001"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/tank/test_tank.py:69: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_isave" time="197.231" /><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_save" time="201.396" /><testcase classname="examples.tank.test_tank.TankTests" name="test_param_sample_isave" time="5.239" /><testcase classname="examples.tank.test_tank.TankTests" name="test_param_sample_save" time="5.453" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_multfault" time="1.241" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nominal" time="0.576" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_onefault" time="1.381" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_singlefaults" time="11.736" /><testcase classname="examples.tank.test_tank.TankTests" name="test_singlefaults_isave" time="11.564" /><testcase classname="examples.tank.test_tank.TankTests" name="test_tank_copy_args" time="0.118" /><testcase classname="examples.taxiway.Paper_Notebook.ipynb" name="Paper_Notebook.ipynb" time="32.805"><failure message="#x1B[31mAttributeError#x1B[39m: Not in dict: t120p0">---------------------------------------------------------------------------
endresults.t120p0.endclass #table should also include local, global metrics
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mKeyError#x1B[39m                                  Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:365#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    364#x1B[39m         obj = #x1B[38;5;28mself#x1B[39m
#x1B[32m--&gt; #x1B[39m#x1B[32m365#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[43mget_dict_attr#x1B[49m#x1B[43m(#x1B[49m#x1B[43mobj#x1B[49m#x1B[43m.#x1B[49m#x1B[43mdata#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[34;43m__class__#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43margs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    366#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mKeyError#x1B[39;00m:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:96#x1B[39m, in #x1B[36mget_dict_attr#x1B[39m#x1B[34m(dict_in, des_class, *attr)#x1B[39m
#x1B[32m     95#x1B[39m #x1B[38;5;250m#x1B[39m#x1B[33;03m"""Get attributes *attr from a given nested dict dict_in of class des_class."""#x1B[39;00m
#x1B[32m---&gt; #x1B[39m#x1B[32m96#x1B[39m sub_dict = #x1B[43mdict_in#x1B[49m#x1B[43m[#x1B[49m#x1B[43mattr#x1B[49m#x1B[43m[#x1B[49m#x1B[32;43m0#x1B[39;49m#x1B[43m]#x1B[49m#x1B[43m]#x1B[49m
#x1B[32m     97#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28mlen#x1B[39m(attr) == #x1B[32m1#x1B[39m:

#x1B[31mKeyError#x1B[39m: 't120p0'

During handling of the above exception, another exception occurred:

#x1B[31mException#x1B[39m                                 Traceback (most recent call last)
#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:368#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    367#x1B[39m #x1B[38;5;28;01mtry#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m368#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mall_with#x1B[49m#x1B[43m(#x1B[49m#x1B[43margstr#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    369#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m:

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:442#x1B[39m, in #x1B[36mResult.all_with#x1B[39m#x1B[34m(self, attr)#x1B[39m
#x1B[32m    441#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m442#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(attr+#x1B[33m"#x1B[39m#x1B[33m not in Result keys: #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(#x1B[38;5;28mself#x1B[39m.keys()))

#x1B[31mException#x1B[39m: t120p0 not in Result keys: dict_keys(['nominal.t20p0.graph', 'nominal.t93p0.graph.flows.location', 'nominal.t110p0.graph.flows.location', 'nominal.t120p0.graph', 'ma3_lost_sight_t0.t20p0.graph', 'ma3_lost_sight_t0.t93p0.graph.flows.location', 'ma3_lost_sight_t0.t110p0.graph.flows.location', 'ma3_lost_sight_t0.t120p0.graph'])

During handling of the above exception, another exception occurred:

#x1B[31mAttributeError#x1B[39m                            Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[23]#x1B[39m#x1B[32m, line 1#x1B[39m
#x1B[32m----&gt; #x1B[39m#x1B[32m1#x1B[39m #x1B[43mendresults#x1B[49m#x1B[43m.#x1B[49m#x1B[43mt120p0#x1B[49m.endclass #x1B[38;5;66;03m#table should also include local, global metrics#x1B[39;00m

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/analyze/result.py:370#x1B[39m, in #x1B[36mResult.__getattr__#x1B[39m#x1B[34m(self, argstr)#x1B[39m
#x1B[32m    368#x1B[39m     #x1B[38;5;28;01mreturn#x1B[39;00m #x1B[38;5;28mself#x1B[39m.all_with(argstr)
#x1B[32m    369#x1B[39m #x1B[38;5;28;01mexcept#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m:
#x1B[32m--&gt; #x1B[39m#x1B[32m370#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mAttributeError#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mNot in dict: #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(argstr))

#x1B[31mAttributeError#x1B[39m: Not in dict: t120p0</failure></testcase><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid" time="1.272" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid_plot" time="1.931" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle" time="0.735" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle_plot" time="1.001" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight" time="3.098" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight_plot" time="2.979" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle" time="0.678" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle_plot" time="0.820" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception" time="16.429" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception_plot" time="16.542" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command" time="17.929" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_lost_sight" time="15.970" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_sight_plot" time="20.459" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_default_plots" time="12.913" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_scen" time="8.112" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.auto_filetype" time="0.006" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_average" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_expected" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_metric" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_metric_ci" time="0.021" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_percent" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_rate" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_sum" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_total" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.create_indiv_filename" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.diff" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.join_key" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.to_include_keys" time="0.002" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph" time="0.564" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph._get_edge_style" time="0.003" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph._get_node_style" time="0.003" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.add_node_groups" time="0.130" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.draw_drawio" time="0.015" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.set_heatmap" time="0.119" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.ModelGraph" time="0.011"><failure message="211     get_states: bool&#10;212         whether to get states for the graph&#10;213     **kwargs:&#10;214         keyword arguments for self.nx_from_obj&#10;215 &#10;216     Examples&#10;217     --------&#10;218     &gt;&gt;&gt; from fmdtools.define.block.function import ExampleFunction&#10;219     &gt;&gt;&gt; mg = ModelGraph(ExampleFunction())&#10;220     &gt;&gt;&gt; mg.get_nodes()&#10;Expected:&#10;    ['examplefunction', 'examplefunction.m', 'examplefunction.p', 'examplefunction.s', 'examplefunction.sp', 'examplefunction.t', 'examplefunction.exampleflow', 'examplefunction.dynamic_behavior']&#10;Got:&#10;    ['examplefunction', 'examplefunction.t', 'examplefunction.s', 'examplefunction.m', 'examplefunction.exampleflow', 'examplefunction.dynamic_behavior']&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/analyze/graph/model.py:220: DocTestFailure">211     get_states: bool
212         whether to get states for the graph
213     **kwargs:
214         keyword arguments for self.nx_from_obj
215 
216     Examples
217     --------
218     &gt;&gt;&gt; from fmdtools.define.block.function import ExampleFunction
219     &gt;&gt;&gt; mg = ModelGraph(ExampleFunction())
220     &gt;&gt;&gt; mg.get_nodes()
Expected:
    ['examplefunction', 'examplefunction.m', 'examplefunction.p', 'examplefunction.s', 'examplefunction.sp', 'examplefunction.t', 'examplefunction.exampleflow', 'examplefunction.dynamic_behavior']
Got:
    ['examplefunction', 'examplefunction.t', 'examplefunction.s', 'examplefunction.m', 'examplefunction.exampleflow', 'examplefunction.dynamic_behavior']

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/analyze/graph/model.py:220: DocTestFailure</failure></testcase><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.create_inheritance_subgraph" time="0.004" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.FlowEdgeStyle" time="0.003" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.edge_style_factory" time="0.812" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.node_style_factory" time="1.793" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.to_legend_label" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.cut" time="0.002" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_degraded_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_fault_time" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_faulty_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_bound_errhist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_ci_errhist" time="0.012" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_std_errhist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_percentile_errhist" time="0.008" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_slice" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_modephase_time" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_phase_time" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_samples_in_phases" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.find_modephase" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_phase_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_sample_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.find_interval_overlap" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.from_hist" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.join_phasemaps" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__eq__" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__sub__" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.align_external_dict" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.fromdict" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_metric" time="0.005" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_metric_ci" time="0.010" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_vals" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.is_flat" time="0.002" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.Comparison" time="1.861" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.FMEA" time="0.053" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.result_summary" time="0.312" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.result_summary_fmea" time="1.394" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitecture" time="0.013" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureActGraph" time="0.007" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureFlowGraph" time="0.006" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureGraph" time="0.007" /><testcase classname="fmdtools.define.architecture.base" name="fmdtools.define.architecture.base.Architecture.as_drawio" time="0.033" /><testcase classname="fmdtools.define.architecture.component" name="fmdtools.define.architecture.component.ComponentArchitecture" time="0.011" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitecture" time="0.013" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFlowGraph" time="0.009" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFxnGraph" time="0.010" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureGraph" time="0.015" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureTypeGraph" time="0.007" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture" time="0.007"><failure message="069     ExGeomState(occupied=False, buffer_around=1.0)&#10;070     &gt;&gt;&gt; ega.h&#10;071     time:                         array(101)&#10;072     points.ex_point.s.occupied:   array(101)&#10;073     points.ex_point.s.buffer_around: array(101)&#10;074     lines.ex_line.s.occupied:     array(101)&#10;075     lines.ex_line.s.buffer_around: array(101)&#10;076     polys.ex_poly.s.occupied:     array(101)&#10;077     polys.ex_poly.s.buffer_around: array(101)&#10;078     &gt;&gt;&gt; ega.return_mutables()&#10;Expected:&#10;    ((-0.1, 0, False, False, False), (False, 1.0), (False, 1.0), (False, 1.0))&#10;Got:&#10;    ((False, 1.0), (False, 1.0), (False, 1.0), (-0.1, 0, False, False, False))&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/geom.py:78: DocTestFailure">069     ExGeomState(occupied=False, buffer_around=1.0)
070     &gt;&gt;&gt; ega.h
071     time:                         array(101)
072     points.ex_point.s.occupied:   array(101)
073     points.ex_point.s.buffer_around: array(101)
074     lines.ex_line.s.occupied:     array(101)
075     lines.ex_line.s.buffer_around: array(101)
076     polys.ex_poly.s.occupied:     array(101)
077     polys.ex_poly.s.buffer_around: array(101)
078     &gt;&gt;&gt; ega.return_mutables()
Expected:
    ((-0.1, 0, False, False, False), (False, 1.0), (False, 1.0), (False, 1.0))
Got:
    ((False, 1.0), (False, 1.0), (False, 1.0), (-0.1, 0, False, False, False))

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/geom.py:78: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture.all_at" time="0.011" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.is_bool" time="0.002" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.is_numeric" time="0.002" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.nan_to_x" time="0.002" /><testcase classname="fmdtools.define.block.action" name="fmdtools.define.block.action.Action" time="0.005" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_hist_ind" time="0.003" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_timerange" time="0.003" /><testcase classname="fmdtools.define.block.component" name="fmdtools.define.block.component.Component" time="0.008" /><testcase classname="fmdtools.define.block.function" name="fmdtools.define.block.function.Function" time="0.007" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.assign" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.copy" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.create_hist" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.get_field_dict" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.set_field" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.to_default" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.check_container_pick" time="0.002" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Fault.calc_rate" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.HumanErrorMode" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode.add_fault" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode.get_fault" time="0.003" /><testcase classname="fmdtools.define.container.parameter" name="fmdtools.define.container.parameter.Parameter" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand" time="0.006" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand.get_rand_states" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_density_for_random" time="0.002" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_choice" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_integers" time="0.002" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_permuted" time="0.005" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_shuffle_permutation" time="0.002" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_exp_ray_pdf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_hypergeometric_pmf" time="0.004" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_lognormal_pdf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_prob_for_rand" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_standard_t_pdf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_triangular_pdf" time="0.005" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.add" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.div" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.get" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.gett" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.inc" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.limit" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.mul" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.put" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.roundto" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.same" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.set_atts" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.sub" time="0.002" /><testcase classname="fmdtools.define.container.time" name="fmdtools.define.container.time.Time" time="0.004" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment" time="0.019" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment.copy" time="0.034" /><testcase classname="fmdtools.define.flow.base" name="fmdtools.define.flow.base.Flow" time="0.004" /><testcase classname="fmdtools.define.flow.commsflow" name="fmdtools.define.flow.commsflow.CommsFlow" time="0.005" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow" time="0.004" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.create_hist" time="0.004" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.get_view" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject" time="0.005" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.assign_roles" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_att_roletype" time="0.002" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_node_attrs" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_prop" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_props" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_neighbors" time="0.008" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_properties" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_pts" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_range" time="0.007" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_gridpoint" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_index" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords" time="0.007" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.copy" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_all" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_closest" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.in_area" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.set_rand_pts" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.MetricCoords" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.all_at" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_at_shape" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_to_shape" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomLine" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomLine.get_args" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoint" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoint.get_args" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoly" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoly.get_args" time="0.002" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.LineParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PointParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PolyParam" time="0.003" /><testcase classname="fmdtools.define.object.timer" name="fmdtools.define.object.timer.Timer" time="0.003" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.MultiEventSimulation" time="2.596" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.MultiSimulation" time="2.035" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.NestedSimulation" time="0.942" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.SimEvent" time="0.012"><failure message="342         Whether the event has simulated. Default is False.&#10;343 &#10;344     Examples&#10;345     --------&#10;346     &gt;&gt;&gt; from fmdtools.define.block.function import ExampleFunction&#10;347     &gt;&gt;&gt; se = SimEvent(time=5.0, copy=True, to_return=[&quot;classify&quot;])&#10;348     &gt;&gt;&gt; se&#10;349     SimEvent(time=5.0, copy=True, to_return=['classify'])&#10;350     &gt;&gt;&gt; se.run(ExampleFunction())&#10;351     &gt;&gt;&gt; se.mdl_copy # note that copied models are gotten just before the simulation&#10;Differences (unified diff with -expected +actual):&#10;    @@ -1,5 +1,5 @@&#10;     examplefunction ExampleFunction&#10;    +- t=Time(time=4.0, timers={})&#10;    +- s=ExampleState(x=4.0, y=0.0)&#10;     - m=ExampleMode(mode='standby', faults=set(), sub_faults=False)&#10;    -- s=ExampleState(x=4.0, y=0.0)&#10;    -- t=Time(time=4.0, timers={})&#10;     - exf=ExampleFlow(s=(x=1.0, y=1.0))&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/sim/propagate.py:351: DocTestFailure">342         Whether the event has simulated. Default is False.
343 
344     Examples
345     --------
346     &gt;&gt;&gt; from fmdtools.define.block.function import ExampleFunction
347     &gt;&gt;&gt; se = SimEvent(time=5.0, copy=True, to_return=["classify"])
348     &gt;&gt;&gt; se
349     SimEvent(time=5.0, copy=True, to_return=['classify'])
350     &gt;&gt;&gt; se.run(ExampleFunction())
351     &gt;&gt;&gt; se.mdl_copy # note that copied models are gotten just before the simulation
Differences (unified diff with -expected +actual):
    @@ -1,5 +1,5 @@
     examplefunction ExampleFunction
    +- t=Time(time=4.0, timers={})
    +- s=ExampleState(x=4.0, y=0.0)
     - m=ExampleMode(mode='standby', faults=set(), sub_faults=False)
    -- s=ExampleState(x=4.0, y=0.0)
    -- t=Time(time=4.0, timers={})
     - exf=ExampleFlow(s=(x=1.0, y=1.0))

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/sim/propagate.py:351: DocTestFailure</failure></testcase><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.Simulation" time="0.108"><failure message="539     &gt;&gt;&gt; sim = Simulation(mdl=esf, scen=s, ctimes = [2, 4], to_return={1.0: 's.x', &quot;end&quot;: [&quot;classify&quot;, &quot;graph&quot;]})&#10;540     &gt;&gt;&gt; sim&#10;541     Simulation with SimEvents:&#10;542     - 1.0=SimEvent(to_return={'s.x': None})&#10;543     - 2.0=SimEvent(copy=True)&#10;544     - 3.0=SimEvent(injection=Injection(faults={'examplefunction': ['low']}, disturbances={}))&#10;545     - 4.0=SimEvent(copy=True)&#10;546     - end=SimEvent(to_return={'classify': None, 'graph': None})&#10;547     &gt;&gt;&gt; res, hist = sim()&#10;548     &gt;&gt;&gt; sim.mdl&#10;Differences (unified diff with -expected +actual):&#10;    @@ -1,5 +1,5 @@&#10;     examplefunction ExampleFunction&#10;    +- t=Time(time=100.0, timers={})&#10;    +- s=ExampleState(x=20.0, y=294.0)&#10;     - m=ExampleMode(mode='low', faults={'low'}, sub_faults=False)&#10;    -- s=ExampleState(x=20.0, y=294.0)&#10;    -- t=Time(time=100.0, timers={})&#10;     - exf=ExampleFlow(s=(x=1964.0, y=1.0))&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/sim/propagate.py:548: DocTestFailure">539     &gt;&gt;&gt; sim = Simulation(mdl=esf, scen=s, ctimes = [2, 4], to_return={1.0: 's.x', "end": ["classify", "graph"]})
540     &gt;&gt;&gt; sim
541     Simulation with SimEvents:
542     - 1.0=SimEvent(to_return={'s.x': None})
543     - 2.0=SimEvent(copy=True)
544     - 3.0=SimEvent(injection=Injection(faults={'examplefunction': ['low']}, disturbances={}))
545     - 4.0=SimEvent(copy=True)
546     - end=SimEvent(to_return={'classify': None, 'graph': None})
547     &gt;&gt;&gt; res, hist = sim()
548     &gt;&gt;&gt; sim.mdl
Differences (unified diff with -expected +actual):
    @@ -1,5 +1,5 @@
     examplefunction ExampleFunction
    +- t=Time(time=100.0, timers={})
    +- s=ExampleState(x=20.0, y=294.0)
     - m=ExampleMode(mode='low', faults={'low'}, sub_faults=False)
    -- s=ExampleState(x=20.0, y=294.0)
    -- t=Time(time=100.0, timers={})
     - exf=ExampleFlow(s=(x=1964.0, y=1.0))

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/sim/propagate.py:548: DocTestFailure</failure></testcase><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.BaseSample.get_metric" time="0.009" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all" time="0.011" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxn_modes" time="0.010" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxnclass_modes" time="0.009" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_fault" time="0.009" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_fault_space" time="0.010" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_faults" time="0.008" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_singlecomp_modes" time="0.049" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_phases" time="0.047" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_times" time="0.052" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_joint_fault_scenario" time="0.048" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_single_fault_scenario" time="0.048" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain.get_var_iters" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterHistSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterResultSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_ranges" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_replicates" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_scenario" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_orthogonal" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_product" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_random" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultdomain" time="0.065" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultsample" time="0.113" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_orthogonal" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_random" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_even" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_quad" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence" time="0.002" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence.update_sequence" time="0.002" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.SingleFaultScenario.from_fault" time="0.002" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.BaseProblem.get_opt_hist" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.DisturbanceProblem" time="0.026" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.HistoryObjective" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ParameterSimProblem" time="0.132" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture" time="0.063" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_full_problem" time="0.042" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_problem" time="0.027" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultConstraint.con_from_value" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultObjective.get_result_value" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SimpleProblem" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SingleFaultScenarioProblem" time="0.028" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fault_plot" time="0.953" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_flowgraph_plot" time="0.840" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fxngraph_plot" time="0.439" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_modelgraph_plot" time="0.585" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_result_from_plot" time="0.829" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_typegraph_plot" time="0.207" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_arg_passdown" time="0.026" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_fault_injection" time="0.010" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_prop_method" time="0.669" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_propagation" time="0.017" /><testcase classname="tests.test_packages.define_Tests" name="test_pdf_translation_options" time="0.009" /></testsuite></testsuites>