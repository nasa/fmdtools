<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="9" skipped="3" tests="377" time="4362.393" timestamp="2025-09-03T20:47:08.001840-07:00" hostname="bamboo-r7.ndc.nasa.gov"><testcase classname="examples.asg_demo.Action_Sequence_Graph.ipynb" name="Action_Sequence_Graph.ipynb" time="20.596" /><testcase classname="examples.eps.EPS_Example_Notebook.ipynb" name="EPS_Example_Notebook.ipynb" time="13.494" /><testcase classname="examples.eps.test_eps.epsTests" name="test_all_faults" time="2.834" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_1" time="0.160" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_2" time="0.163" /><testcase classname="examples.eps.test_eps.epsTests" name="test_fault_app" time="4.271" /><testcase classname="examples.eps.test_eps.epsTests" name="test_multfault_saving" time="0.487" /><testcase classname="examples.eps.test_eps.epsTests" name="test_nominal_saving" time="0.144" /><testcase classname="examples.eps.test_eps.epsTests" name="test_pickleability" time="7.353" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_onefault" time="0.561" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_singlefaults" time="9.188" /><testcase classname="examples.multiflow_demo.Multiflow_and_Commsflow_Demonstration.ipynb" name="Multiflow_and_Commsflow_Demonstration.ipynb" time="8.577" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_combination" time="0.222" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_passing" time="0.227" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_mutliflow_copying" time="0.232" /><testcase classname="examples.multirotor.Demonstration.ipynb" name="Demonstration.ipynb" time="100.461" /><testcase classname="examples.multirotor.Multirotor_Optimization.ipynb" name="Multirotor_Optimization.ipynb" time="285.623" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.AffectDOF.inc_pos" time="0.009"><failure message="348 &#10;349 Increments the drone position based on trajectory and calculated velocities.&#10;350 &#10;351 e.g.,::&#10;352 &gt;&gt;&gt; a = AffectDOF()&#10;353 &gt;&gt;&gt; a.des_traj.s.put(dx=1.0, dy=0.0, dz=0.0, power=1.0)&#10;354 &gt;&gt;&gt; a.dofs.s.put(x=0.0, y=0.0, z=100.0, planvel=1.0, vertvel=0.0)&#10;355 &gt;&gt;&gt; a.inc_pos()&#10;356 &gt;&gt;&gt; a.dofs.s&#10;Expected:&#10;    DOFstate(vertvel=0.0, planvel=1.0, planpwr=1.0, uppwr=1.0, x=1.0, y=0.0, z=100.0)&#10;Got:&#10;    DOFstate(vertvel=0.0, planvel=1.0, planpwr=1.0, uppwr=1.0, x=np.float64(1.0), y=np.float64(0.0), z=np.float64(100.0))&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/multirotor/drone_mdl_dynamic.py:356: DocTestFailure">348 
349 Increments the drone position based on trajectory and calculated velocities.
350 
351 e.g.,::
352 &gt;&gt;&gt; a = AffectDOF()
353 &gt;&gt;&gt; a.des_traj.s.put(dx=1.0, dy=0.0, dz=0.0, power=1.0)
354 &gt;&gt;&gt; a.dofs.s.put(x=0.0, y=0.0, z=100.0, planvel=1.0, vertvel=0.0)
355 &gt;&gt;&gt; a.inc_pos()
356 &gt;&gt;&gt; a.dofs.s
Expected:
    DOFstate(vertvel=0.0, planvel=1.0, planpwr=1.0, uppwr=1.0, x=1.0, y=0.0, z=100.0)
Got:
    DOFstate(vertvel=0.0, planvel=1.0, planpwr=1.0, uppwr=1.0, x=np.float64(1.0), y=np.float64(0.0), z=np.float64(100.0))

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/multirotor/drone_mdl_dynamic.py:356: DocTestFailure</failure></testcase><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.assign_vectdist_to_goal" time="0.007" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.calc_dist_to_goal" time="0.007"><failure message="222 &#10;223 Calculate drone distance to goal.&#10;224 &#10;225 e.g.::&#10;226 &gt;&gt;&gt; p = PlanPath()&#10;227 &gt;&gt;&gt; p.s.dist&#10;228 0.0&#10;229 &gt;&gt;&gt; p.calc_dist_to_goal()&#10;230 &gt;&gt;&gt; p.s.dist&#10;Expected:&#10;    50.0&#10;Got:&#10;    np.float64(50.0)&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/multirotor/drone_mdl_dynamic.py:230: DocTestFailure">222 
223 Calculate drone distance to goal.
224 
225 e.g.::
226 &gt;&gt;&gt; p = PlanPath()
227 &gt;&gt;&gt; p.s.dist
228 0.0
229 &gt;&gt;&gt; p.calc_dist_to_goal()
230 &gt;&gt;&gt; p.s.dist
Expected:
    50.0
Got:
    np.float64(50.0)

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/multirotor/drone_mdl_dynamic.py:230: DocTestFailure</failure></testcase><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.SightGrid" time="0.590" /><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.AffectDOF.calc_pwr" time="0.028"><failure message="188 &#10;189 Calculates overall power and stability based on individual rotor output.&#10;190 &#10;191 e.g., ::&#10;192 &gt;&gt;&gt; a = AffectDOF()&#10;193 &gt;&gt;&gt; a.dofs.s.put(z=100.0)&#10;194 &gt;&gt;&gt; a.ctl_in.s.put(forward=0.0, upward=1.0)&#10;195 &gt;&gt;&gt; a.calc_pwr()&#10;196 &gt;&gt;&gt; a.dofs.s&#10;Expected:&#10;    DOFstate(vertvel=1.0, planvel=1.0, planpwr=-0.0, uppwr=1.0, x=0.0, y=0.0, z=100.0)&#10;Got:&#10;    DOFstate(vertvel=1.0, planvel=1.0, planpwr=np.float64(-0.0), uppwr=np.float64(1.0), x=0.0, y=0.0, z=100.0)&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/multirotor/drone_mdl_hierarchical.py:196: DocTestFailure">188 
189 Calculates overall power and stability based on individual rotor output.
190 
191 e.g., ::
192 &gt;&gt;&gt; a = AffectDOF()
193 &gt;&gt;&gt; a.dofs.s.put(z=100.0)
194 &gt;&gt;&gt; a.ctl_in.s.put(forward=0.0, upward=1.0)
195 &gt;&gt;&gt; a.calc_pwr()
196 &gt;&gt;&gt; a.dofs.s
Expected:
    DOFstate(vertvel=1.0, planvel=1.0, planpwr=-0.0, uppwr=1.0, x=0.0, y=0.0, z=100.0)
Got:
    DOFstate(vertvel=1.0, planvel=1.0, planpwr=np.float64(-0.0), uppwr=np.float64(1.0), x=0.0, y=0.0, z=100.0)

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/multirotor/drone_mdl_hierarchical.py:196: DocTestFailure</failure></testcase><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.LineArchParam" time="0.007" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.AffectDOF.static_behavior" time="0.010" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.CtlDOF.static_behavior" time="0.012" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.dist2d" time="0.005" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.unit_vect2d" time="0.005" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DistEE.static_behavior" time="0.017" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.HoldPayload.static_behavior" time="0.009" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.PlanPath.static_behavior" time="0.010" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_objectives" time="1.741" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_param_domain_1" time="0.003" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_param_domain_2" time="0.002" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_set_constraints_1" time="0.003" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_set_constraints_2" time="0.002" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_sim_mdl" time="0.805" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest" name="test_scenprob_results" time="2.038" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest2" name="test_scenprob_results" time="1.984" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest3" name="test_scenprob_results" time="1.914" /><testcase classname="examples.multirotor.test_multirotor.DroneDisturbanceTest" name="test_disturbance_set" time="0.701" /><testcase classname="examples.pump.Optimization.ipynb" name="Optimization.ipynb" time="176.583" /><testcase classname="examples.pump.Parallelism_Tutorial.ipynb" name="Parallelism_Tutorial.ipynb" time="220.085" /><testcase classname="examples.pump.Pump_Example_Notebook.ipynb" name="Pump_Example_Notebook.ipynb" time="48.060" /><testcase classname="examples.pump.Tutorial_complete.ipynb" name="Tutorial_complete.ipynb" time="19.855" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.accumulate" time="0.003" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.reseting_accumulate" time="0.002" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_app_prop_values" time="1.314" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_cost_calc" time="101.742" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_parallelism" time="64.619" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values" time="1.393" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values_2" time="2.008" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_isave" time="13.089" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_save" time="12.371" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fmea_options" time="1.901" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_hist_tracking_setup" time="0.063" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_different" time="8.403" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_same" time="18.576" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/pump/test_pump.py:138: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_isave" time="132.045" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_save" time="131.038" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nominal_save" time="0.773" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_csv" time="0.530" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_json" time="0.522" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_pickle" time="0.532" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_onefault_save" time="1.281" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample" time="0.035" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_isave" time="7.340" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_save" time="8.323" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_pickleability" time="7.731" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_multfault" time="1.726" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_isave" time="7.983" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_save" time="8.442" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting" time="0.043" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting_dict" time="0.035" /><testcase classname="examples.pump.test_pump.IndivPumpTests" name="test_mutable_setup" time="0.073" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_inf_v" time="0.006" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_no_v" time="0.005" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_nom" time="0.005" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_hi" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_initialization" time="0.003" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_condfaults_dynamic" time="0.006" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_initialization" time="0.005" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_nom" time="0.005" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_results" time="0.692" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_static" time="0.078" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_nominal_results" time="0.344" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_mdl_pickle" time="79.769" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_different" time="9.525" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_same" time="20.207" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/pump/test_pump_stochastic.py:112: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_set_vars" time="0.037" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_isave" time="68.733" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_save" time="70.956" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_isave" time="4.655" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_save" time="4.467" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nested_hists" time="9.265" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals" time="3.515" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals_xd" time="214.060" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_rand_paramsample_plot" time="9.882" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_approach" time="324.372" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_safety" time="23.887" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_set_seeds" time="0.105" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_stochastic_pdf" time="0.112" /><testcase classname="examples.rover.FaultSample_Use-Cases.ipynb" name="FaultSample_Use-Cases.ipynb" time="23.137" /><testcase classname="examples.rover.HFAC_Analyses.IDETC_Human_Paper_Analysis.ipynb" name="IDETC_Human_Paper_Analysis.ipynb" time="639.268" /><testcase classname="examples.rover.Model_Structure_Visualization_Tutorial.ipynb" name="Model_Structure_Visualization_Tutorial.ipynb" time="70.420" /><testcase classname="examples.rover.Rover_Setup_Notebook.ipynb" name="Rover_Setup_Notebook.ipynb" time="83.363" /><testcase classname="examples.rover.degradation_modelling.Degradation_Modelling_Notebook.ipynb" name="Degradation_Modelling_Notebook.ipynb" time="447.565" /><testcase classname="examples.rover.rover_model" name="examples.rover.rover_model.Drive.drive_nominal" time="0.063" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Comprehend" time="0.006" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Decide" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.HumanActions" time="0.026" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Look" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Percieve" time="0.006" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Press" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Project" time="0.005" /><testcase classname="examples.rover.test_rover.RoverTests" name="test_obj_values" time="8.508" /><testcase classname="examples.tank.Tank_Analysis.ipynb" name="Tank_Analysis.ipynb" time="71.707" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach" time="16.850" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_0" time="16.411" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_1" time="39.704" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_notrack" time="14.903" /><testcase classname="examples.tank.test_tank.TankTests" name="test_comp_mode_inj" time="0.238" /><testcase classname="examples.tank.test_tank.TankTests" name="test_different_components" time="0.136" /><testcase classname="examples.tank.test_tank.TankTests" name="test_epc_math" time="0.073" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_isave" time="18.889" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_save" time="16.252" /><testcase classname="examples.tank.test_tank.TankTests" name="test_local_tstep" time="1.208" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_different" time="3.707" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_same" time="8.364" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/tank/test_tank.py:69: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_isave" time="174.933" /><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_save" time="177.500" /><testcase classname="examples.tank.test_tank.TankTests" name="test_param_sample_isave" time="4.982" /><testcase classname="examples.tank.test_tank.TankTests" name="test_param_sample_save" time="4.900" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_multfault" time="1.116" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nominal" time="0.494" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_onefault" time="1.077" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_singlefaults" time="9.982" /><testcase classname="examples.tank.test_tank.TankTests" name="test_singlefaults_isave" time="10.177" /><testcase classname="examples.tank.test_tank.TankTests" name="test_tank_copy_args" time="0.105" /><testcase classname="examples.taxiway.Paper_Notebook.ipynb" name="Paper_Notebook.ipynb" time="46.543" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid" time="1.106" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid_plot" time="1.599" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle" time="0.572" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle_plot" time="0.915" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight" time="2.401" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight_plot" time="2.395" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle" time="0.531" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle_plot" time="0.669" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception" time="12.943" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception_plot" time="12.271" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command" time="13.195" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_lost_sight" time="13.315" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_sight_plot" time="15.830" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_default_plots" time="10.405" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_scen" time="6.595" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.auto_filetype" time="0.007" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_average" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_expected" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_metric" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_metric_ci" time="0.020" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_percent" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_rate" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_sum" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_total" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.create_indiv_filename" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.diff" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.join_key" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.to_include_keys" time="0.003" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph" time="0.576" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph._get_edge_style" time="0.005" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph._get_node_style" time="0.005" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.add_node_groups" time="0.139" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.draw_drawio" time="0.013" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.set_heatmap" time="0.125" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.ModelGraph" time="0.011" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.create_inheritance_subgraph" time="0.006" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.FlowEdgeStyle" time="0.002" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.edge_style_factory" time="0.801" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.node_style_factory" time="1.366" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.to_legend_label" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.cut" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_degraded_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_fault_time" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_faulty_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_bound_errhist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_ci_errhist" time="0.012" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_std_errhist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_percentile_errhist" time="0.008" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_slice" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_modephase_time" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_phase_time" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_samples_in_phases" time="0.004" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.find_modephase" time="0.002" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_phase_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_sample_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.find_interval_overlap" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.from_hist" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.join_phasemaps" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__eq__" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__sub__" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.align_external_dict" time="0.002" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.fromdict" time="0.002" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get" time="0.002" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_metric" time="0.004" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_metric_ci" time="0.009" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_vals" time="0.003" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.is_flat" time="0.002" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.Comparison" time="1.652" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.FMEA" time="0.063" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.result_summary" time="0.275" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.result_summary_fmea" time="1.158" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitecture" time="0.009"><failure message="206         - providing an integer places a limit on the number of actions that can be&#10;207         performed per timestep&#10;208 per_timestep : bool&#10;209     Defines whether the action sequence graph is reset to the initial state each&#10;210     time-step (True) or stays in the current action (False). Default is False.&#10;211 &#10;212 Examples&#10;213 --------&#10;214 &gt;&gt;&gt; exaa = ExampleActionArchitecture()&#10;215 &gt;&gt;&gt; exaa&#10;Differences (unified diff with -expected +actual):&#10;    @@ -3,5 +3,5 @@&#10;     - m=Mode(mode='nominal', faults=set(), sub_faults=False)&#10;     FLOWS:&#10;    -- exf=ExampleFlow(s=(x=1.0, y=1.0))&#10;    +- exf=ExampleFlow(s=(x=np.float64(1.0), y=np.float64(1.0)))&#10;     ACTS:&#10;     - act_1=ExampleAction()&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/action.py:215: DocTestFailure">206         - providing an integer places a limit on the number of actions that can be
207         performed per timestep
208 per_timestep : bool
209     Defines whether the action sequence graph is reset to the initial state each
210     time-step (True) or stays in the current action (False). Default is False.
211 
212 Examples
213 --------
214 &gt;&gt;&gt; exaa = ExampleActionArchitecture()
215 &gt;&gt;&gt; exaa
Differences (unified diff with -expected +actual):
    @@ -3,5 +3,5 @@
     - m=Mode(mode='nominal', faults=set(), sub_faults=False)
     FLOWS:
    -- exf=ExampleFlow(s=(x=1.0, y=1.0))
    +- exf=ExampleFlow(s=(x=np.float64(1.0), y=np.float64(1.0)))
     ACTS:
     - act_1=ExampleAction()

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/action.py:215: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureActGraph" time="0.007" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureFlowGraph" time="0.006" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureGraph" time="0.007" /><testcase classname="fmdtools.define.architecture.base" name="fmdtools.define.architecture.base.Architecture.as_drawio" time="0.037" /><testcase classname="fmdtools.define.architecture.component" name="fmdtools.define.architecture.component.ComponentArchitecture" time="0.006"><failure message="031 &#10;032 Component Architectures are meant to be able to be called externally by functions&#10;033 to determine how individual component behaviors aggregate as a given function.&#10;034 &#10;035 However, they can also simulate via their own static/dynamic behaviors.&#10;036 &#10;037 Examples&#10;038 --------&#10;039 &gt;&gt;&gt; exc = ExampleComponentArchitecture()&#10;040 &gt;&gt;&gt; exc&#10;Differences (unified diff with -expected +actual):&#10;    @@ -3,4 +3,4 @@&#10;     - m=Mode(mode='nominal', faults=set(), sub_faults=False)&#10;     COMPS:&#10;    -- c1=ExampleComponent(s=(x=5.0, y=5.0))&#10;    -- c2=ExampleComponent(s=(x=10.0, y=10.0))&#10;    +- c1=ExampleComponent(s=(x=np.float64(5.0), y=np.float64(5.0)))&#10;    +- c2=ExampleComponent(s=(x=np.float64(10.0), y=np.float64(10.0)))&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/component.py:40: DocTestFailure">031 
032 Component Architectures are meant to be able to be called externally by functions
033 to determine how individual component behaviors aggregate as a given function.
034 
035 However, they can also simulate via their own static/dynamic behaviors.
036 
037 Examples
038 --------
039 &gt;&gt;&gt; exc = ExampleComponentArchitecture()
040 &gt;&gt;&gt; exc
Differences (unified diff with -expected +actual):
    @@ -3,4 +3,4 @@
     - m=Mode(mode='nominal', faults=set(), sub_faults=False)
     COMPS:
    -- c1=ExampleComponent(s=(x=5.0, y=5.0))
    -- c2=ExampleComponent(s=(x=10.0, y=10.0))
    +- c1=ExampleComponent(s=(x=np.float64(5.0), y=np.float64(5.0)))
    +- c2=ExampleComponent(s=(x=np.float64(10.0), y=np.float64(10.0)))

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/component.py:40: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitecture" time="0.008"><failure message="425 --------&#10;426 &gt;&gt;&gt; class ExFxnArch(FunctionArchitecture):&#10;427 ...     container_p = ExampleParameter&#10;428 ...     def init_architecture(self, **kwargs):&#10;429 ...         self.add_flow(&quot;exf&quot;, ExampleFlow, s={'x': 0.0, 'y': 0.0})&#10;430 ...         self.add_fxn(&quot;ex_fxn&quot;, ExampleFunction, &quot;exf&quot;, p=self.p)&#10;431 ...         self.add_fxn(&quot;ex_fxn2&quot;, ExampleFunction, &quot;exf&quot;, p=self.p)&#10;432 &#10;433 &gt;&gt;&gt; exfa = ExFxnArch(name=&quot;exfa&quot;)&#10;434 &gt;&gt;&gt; exfa&#10;Differences (unified diff with -expected +actual):&#10;    @@ -3,6 +3,6 @@&#10;     - m=Mode(mode='nominal', faults=set(), sub_faults=False)&#10;     FLOWS:&#10;    -- exf=ExampleFlow(s=(x=0.0, y=0.0))&#10;    +- exf=ExampleFlow(s=(x=np.float64(0.0), y=np.float64(0.0)))&#10;     FXNS:&#10;    -- ex_fxn=ExampleFunction(s=(x=0.0, y=0.0), m=(mode='standby', faults=set(), sub_faults=False))&#10;    -- ex_fxn2=ExampleFunction(s=(x=0.0, y=0.0), m=(mode='standby', faults=set(), sub_faults=False))&#10;    +- ex_fxn=ExampleFunction(s=(x=np.float64(0.0), y=np.float64(0.0)), m=(mode='standby', faults=set(), sub_faults=False))&#10;    +- ex_fxn2=ExampleFunction(s=(x=np.float64(0.0), y=np.float64(0.0)), m=(mode='standby', faults=set(), sub_faults=False))&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/function.py:434: DocTestFailure">425 --------
426 &gt;&gt;&gt; class ExFxnArch(FunctionArchitecture):
427 ...     container_p = ExampleParameter
428 ...     def init_architecture(self, **kwargs):
429 ...         self.add_flow("exf", ExampleFlow, s={'x': 0.0, 'y': 0.0})
430 ...         self.add_fxn("ex_fxn", ExampleFunction, "exf", p=self.p)
431 ...         self.add_fxn("ex_fxn2", ExampleFunction, "exf", p=self.p)
432 
433 &gt;&gt;&gt; exfa = ExFxnArch(name="exfa")
434 &gt;&gt;&gt; exfa
Differences (unified diff with -expected +actual):
    @@ -3,6 +3,6 @@
     - m=Mode(mode='nominal', faults=set(), sub_faults=False)
     FLOWS:
    -- exf=ExampleFlow(s=(x=0.0, y=0.0))
    +- exf=ExampleFlow(s=(x=np.float64(0.0), y=np.float64(0.0)))
     FXNS:
    -- ex_fxn=ExampleFunction(s=(x=0.0, y=0.0), m=(mode='standby', faults=set(), sub_faults=False))
    -- ex_fxn2=ExampleFunction(s=(x=0.0, y=0.0), m=(mode='standby', faults=set(), sub_faults=False))
    +- ex_fxn=ExampleFunction(s=(x=np.float64(0.0), y=np.float64(0.0)), m=(mode='standby', faults=set(), sub_faults=False))
    +- ex_fxn2=ExampleFunction(s=(x=np.float64(0.0), y=np.float64(0.0)), m=(mode='standby', faults=set(), sub_faults=False))

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/function.py:434: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFlowGraph" time="0.011"><failure message="205 Create a Graph of FunctionArchitecture flows.&#10;206 &#10;207 In this Graph, flows are set as nodes and connecting functions are edges.&#10;208 &#10;209 Examples&#10;210 --------&#10;211 &gt;&gt;&gt; efa = FunctionArchitectureFlowGraph(ExFxnArch())&#10;212 &gt;&gt;&gt; efa.g.nodes()&#10;213 NodeView(('exfxnarch.flows.exf',))&#10;214 &gt;&gt;&gt; efa.g.nodes['exfxnarch.flows.exf']&#10;Expected:&#10;    {'nodetype': 'Flow', 'classname': 'ExampleFlow', 'bipartite': 1, 's': ExampleState(x=0.0, y=0.0), 'indicators': []}&#10;Got:&#10;    {'nodetype': 'Flow', 'classname': 'ExampleFlow', 'bipartite': 1, 's': ExampleState(x=np.float64(0.0), y=np.float64(0.0)), 'indicators': []}&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/function.py:214: DocTestFailure">205 Create a Graph of FunctionArchitecture flows.
206 
207 In this Graph, flows are set as nodes and connecting functions are edges.
208 
209 Examples
210 --------
211 &gt;&gt;&gt; efa = FunctionArchitectureFlowGraph(ExFxnArch())
212 &gt;&gt;&gt; efa.g.nodes()
213 NodeView(('exfxnarch.flows.exf',))
214 &gt;&gt;&gt; efa.g.nodes['exfxnarch.flows.exf']
Expected:
    {'nodetype': 'Flow', 'classname': 'ExampleFlow', 'bipartite': 1, 's': ExampleState(x=0.0, y=0.0), 'indicators': []}
Got:
    {'nodetype': 'Flow', 'classname': 'ExampleFlow', 'bipartite': 1, 's': ExampleState(x=np.float64(0.0), y=np.float64(0.0)), 'indicators': []}

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/function.py:214: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFxnGraph" time="0.011"><failure message="243 In this graph, functions are nodes and flows are edges.&#10;244 &#10;245 Examples&#10;246 --------&#10;247 &gt;&gt;&gt; efa = FunctionArchitectureFxnGraph(ExFxnArch())&#10;248 &gt;&gt;&gt; efa.g.nodes()&#10;249 NodeView(('exfxnarch.fxns.ex_fxn', 'exfxnarch.fxns.ex_fxn2'))&#10;250 &gt;&gt;&gt; efa.g.edges()&#10;251 EdgeView([('exfxnarch.fxns.ex_fxn', 'exfxnarch.fxns.ex_fxn2')])&#10;252 &gt;&gt;&gt; efa.g.edges[('exfxnarch.fxns.ex_fxn', 'exfxnarch.fxns.ex_fxn2')]&#10;Expected:&#10;    {'flows': &quot;['exfxnarch.flows.exf']&quot;, 'edgetype': 'flows', 'exfxnarch.flows.exf': {'s': ExampleState(x=0.0, y=0.0), 'indicators': []}}&#10;Got:&#10;    {'flows': &quot;['exfxnarch.flows.exf']&quot;, 'edgetype': 'flows', 'exfxnarch.flows.exf': {'s': ExampleState(x=np.float64(0.0), y=np.float64(0.0)), 'indicators': []}}&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/function.py:252: DocTestFailure">243 In this graph, functions are nodes and flows are edges.
244 
245 Examples
246 --------
247 &gt;&gt;&gt; efa = FunctionArchitectureFxnGraph(ExFxnArch())
248 &gt;&gt;&gt; efa.g.nodes()
249 NodeView(('exfxnarch.fxns.ex_fxn', 'exfxnarch.fxns.ex_fxn2'))
250 &gt;&gt;&gt; efa.g.edges()
251 EdgeView([('exfxnarch.fxns.ex_fxn', 'exfxnarch.fxns.ex_fxn2')])
252 &gt;&gt;&gt; efa.g.edges[('exfxnarch.fxns.ex_fxn', 'exfxnarch.fxns.ex_fxn2')]
Expected:
    {'flows': "['exfxnarch.flows.exf']", 'edgetype': 'flows', 'exfxnarch.flows.exf': {'s': ExampleState(x=0.0, y=0.0), 'indicators': []}}
Got:
    {'flows': "['exfxnarch.flows.exf']", 'edgetype': 'flows', 'exfxnarch.flows.exf': {'s': ExampleState(x=np.float64(0.0), y=np.float64(0.0)), 'indicators': []}}

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/architecture/function.py:252: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureGraph" time="0.016" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureTypeGraph" time="0.008" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture" time="0.009" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture.all_at" time="0.012" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.is_bool" time="0.002" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.is_numeric" time="0.003" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.nan_to_x" time="0.002" /><testcase classname="fmdtools.define.block.action" name="fmdtools.define.block.action.Action" time="0.005" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_hist_ind" time="0.003" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_timerange" time="0.003" /><testcase classname="fmdtools.define.block.component" name="fmdtools.define.block.component.Component" time="0.008" /><testcase classname="fmdtools.define.block.function" name="fmdtools.define.block.function.Function" time="0.007" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.assign" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.copy" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.create_hist" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.get_field_dict" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.set_field" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.to_default" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.check_container_pick" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Fault.calc_rate" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.HumanErrorMode" time="0.004" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode.add_fault" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode.get_fault" time="0.003" /><testcase classname="fmdtools.define.container.parameter" name="fmdtools.define.container.parameter.Parameter" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand" time="0.005" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand.get_rand_states" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_density_for_random" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_choice" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_integers" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_permuted" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_shuffle_permutation" time="0.002" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_exp_ray_pdf" time="0.004" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_hypergeometric_pmf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_lognormal_pdf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_prob_for_rand" time="0.004" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_standard_t_pdf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_triangular_pdf" time="0.005" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.add" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.div" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.get" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.gett" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.inc" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.limit" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.mul" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.put" time="0.003"><failure message="093 as_copy: bool&#10;094     set to True for dicts/sets to be copied rather than referenced&#10;095 **kwargs : values&#10;096     fields and values to set.&#10;097 &#10;098 Examples&#10;099 --------&#10;100 &gt;&gt;&gt; p = ExampleState()&#10;101 &gt;&gt;&gt; p.put(x=2.0, y=2.0)&#10;102 &gt;&gt;&gt; p.x&#10;Expected:&#10;    2.0&#10;Got:&#10;    np.float64(2.0)&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/container/state.py:102: DocTestFailure">093 as_copy: bool
094     set to True for dicts/sets to be copied rather than referenced
095 **kwargs : values
096     fields and values to set.
097 
098 Examples
099 --------
100 &gt;&gt;&gt; p = ExampleState()
101 &gt;&gt;&gt; p.put(x=2.0, y=2.0)
102 &gt;&gt;&gt; p.x
Expected:
    2.0
Got:
    np.float64(2.0)

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/define/container/state.py:102: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.roundto" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.same" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.set_atts" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.sub" time="0.002" /><testcase classname="fmdtools.define.container.time" name="fmdtools.define.container.time.Time" time="0.004" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment" time="0.018" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment.copy" time="0.033" /><testcase classname="fmdtools.define.flow.base" name="fmdtools.define.flow.base.Flow" time="0.004" /><testcase classname="fmdtools.define.flow.commsflow" name="fmdtools.define.flow.commsflow.CommsFlow" time="0.005" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow" time="0.004" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.create_hist" time="0.004" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.get_view" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject" time="0.005" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.assign_roles" time="0.004" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_att_roletype" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_node_attrs" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_prop" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_props" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_neighbors" time="0.008" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_properties" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_pts" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_range" time="0.008" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_gridpoint" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_index" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords" time="0.008" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.copy" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_all" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_closest" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.in_area" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.set_rand_pts" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.MetricCoords" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.all_at" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_at_shape" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_to_shape" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomLine" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomLine.get_args" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoint" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoint.get_args" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoly" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoly.get_args" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.LineParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PointParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PolyParam" time="0.003" /><testcase classname="fmdtools.define.object.timer" name="fmdtools.define.object.timer.Timer" time="0.003" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.MultiEventSimulation" time="2.159" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.MultiSimulation" time="1.547" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.NestedSimulation" time="0.802" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.SimEvent" time="0.011" /><testcase classname="fmdtools.sim.propagate" name="fmdtools.sim.propagate.Simulation" time="0.098" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.BaseSample.get_metric" time="0.008" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all" time="0.009" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxn_modes" time="0.008" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxnclass_modes" time="0.008" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_fault" time="0.009" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_fault_space" time="0.010" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_faults" time="0.008" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_singlecomp_modes" time="0.046" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_phases" time="0.045" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_times" time="0.055" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_joint_fault_scenario" time="0.045" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_single_fault_scenario" time="0.044" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain.get_var_iters" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterHistSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterResultSample" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_ranges" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_replicates" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_scenario" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_orthogonal" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_product" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_random" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultdomain" time="0.058" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultsample" time="0.099" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_orthogonal" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_random" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_even" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_quad" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence.update_sequence" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.SingleFaultScenario.from_fault" time="0.002" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.BaseProblem.get_opt_hist" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.DisturbanceProblem" time="0.025" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.HistoryObjective" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ParameterSimProblem" time="0.115" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture" time="0.060" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_full_problem" time="0.039" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_problem" time="0.024" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultConstraint.con_from_value" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultObjective.get_result_value" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SimpleProblem" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SingleFaultScenarioProblem" time="0.027" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fault_plot" time="0.816" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_flowgraph_plot" time="0.746" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fxngraph_plot" time="0.445" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_modelgraph_plot" time="0.612" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_result_from_plot" time="0.704" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_typegraph_plot" time="0.182" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_arg_passdown" time="0.022" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_fault_injection" time="0.009" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_prop_method" time="0.460" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_propagation" time="0.014" /><testcase classname="tests.test_packages.define_Tests" name="test_pdf_translation_options" time="0.009" /></testsuite></testsuites>