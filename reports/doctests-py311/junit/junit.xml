<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="4" skipped="3" tests="364" time="4084.076" timestamp="2025-04-15T16:43:05.710161-07:00" hostname="bamboo-r4.ndc.nasa.gov"><testcase classname="examples.asg_demo.Action_Sequence_Graph.ipynb" name="Action_Sequence_Graph.ipynb" time="20.033" /><testcase classname="examples.eps.EPS_Example_Notebook.ipynb" name="EPS_Example_Notebook.ipynb" time="11.704" /><testcase classname="examples.eps.test_eps.epsTests" name="test_all_faults" time="1.451" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_1" time="0.106" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_2" time="0.104" /><testcase classname="examples.eps.test_eps.epsTests" name="test_fault_app" time="277.049" /><testcase classname="examples.eps.test_eps.epsTests" name="test_multfault_saving" time="0.320" /><testcase classname="examples.eps.test_eps.epsTests" name="test_nominal_saving" time="0.222" /><testcase classname="examples.eps.test_eps.epsTests" name="test_pickleability" time="0.033" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_onefault" time="0.275" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_singlefaults" time="4.290" /><testcase classname="examples.multiflow_demo.Multiflow_and_Commsflow_Demonstration.ipynb" name="Multiflow_and_Commsflow_Demonstration.ipynb" time="7.712" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_combination" time="0.586" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflow_passing" time="0.535" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_mutliflow_copying" time="0.564" /><testcase classname="examples.multirotor.Demonstration.ipynb" name="Demonstration.ipynb" time="64.955" /><testcase classname="examples.multirotor.Multirotor_Optimization.ipynb" name="Multirotor_Optimization.ipynb" time="114.300" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.AffectDOF.inc_pos" time="0.009" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.assign_vectdist_to_goal" time="0.007" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.PlanPath.calc_dist_to_goal" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_dynamic" name="examples.multirotor.drone_mdl_dynamic.SightGrid" time="0.481" /><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.AffectDOF.calc_pwr" time="0.013" /><testcase classname="examples.multirotor.drone_mdl_hierarchical" name="examples.multirotor.drone_mdl_hierarchical.LineArchParam" time="0.003" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.AffectDOF.static_behavior" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.CtlDOF.static_behavior" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.dist2d" time="0.002" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DesTrajState.unit_vect2d" time="0.003" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.DistEE.static_behavior" time="0.009" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.HoldPayload.static_behavior" time="0.006" /><testcase classname="examples.multirotor.drone_mdl_static" name="examples.multirotor.drone_mdl_static.PlanPath.static_behavior" time="0.006" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_objectives" time="1.010" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_param_domain_1" time="0.002" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_param_domain_2" time="0.002" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_set_constraints_1" time="0.001" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_set_constraints_2" time="0.001" /><testcase classname="examples.multirotor.test_multirotor.DroneParameterTests" name="test_sim_mdl" time="0.552" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest" name="test_scenprob_results" time="1.578" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest2" name="test_scenprob_results" time="1.570" /><testcase classname="examples.multirotor.test_multirotor.DroneScenarioTest3" name="test_scenprob_results" time="1.595" /><testcase classname="examples.multirotor.test_multirotor.DroneDisturbanceTest" name="test_disturbance_set" time="0.937" /><testcase classname="examples.pump.Optimization.ipynb" name="Optimization.ipynb" time="144.234" /><testcase classname="examples.pump.Parallelism_Tutorial.ipynb" name="Parallelism_Tutorial.ipynb" time="139.237" /><testcase classname="examples.pump.Pump_Example_Notebook.ipynb" name="Pump_Example_Notebook.ipynb" time="43.847" /><testcase classname="examples.pump.Tutorial_complete.ipynb" name="Tutorial_complete.ipynb" time="19.433" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.accumulate" time="0.003" /><testcase classname="examples.pump.ex_pump" name="examples.pump.ex_pump.reseting_accumulate" time="0.003" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_app_prop_values" time="1.477" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_cost_calc" time="110.960" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_parallelism" time="55.407" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values" time="1.197" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values_2" time="1.935" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_isave" time="14.633" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fault_sample_save" time="13.257" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fmea_options" time="1.864" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_hist_tracking_setup" time="0.071" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_different" time="6.507" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_same" time="12.850" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/pump/test_pump.py:137: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_isave" time="148.594" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nested_sample_save" time="144.652" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_nominal_save" time="0.590" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_csv" time="0.388" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_json" time="0.388" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_pickle" time="0.397" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_onefault_save" time="1.115" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample" time="0.052" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_isave" time="5.555" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_param_sample_save" time="5.972" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_pickleability" time="0.055" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_multfault" time="1.134" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_isave" time="5.293" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_single_faults_save" time="4.863" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting" time="0.040" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting_dict" time="0.038" /><testcase classname="examples.pump.test_pump.IndivPumpTests" name="test_mutable_setup" time="0.073" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_inf_v" time="0.004" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_no_v" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_hi" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_nom" time="0.003" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_initialization" time="0.004" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_condfaults_dynamic" time="0.005" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_initialization" time="0.004" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_nom" time="0.005" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_results" time="0.495" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_static" time="0.046" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_nominal_results" time="0.247" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_mdl_pickle" time="0.655" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_different" time="6.845" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_same" time="11.116" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_reset" time="0.001"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/pump/test_pump_stochastic.py:117: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_set_vars" time="0.033" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_isave" time="269.016" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_nested_sample_save" time="273.889" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_isave" time="4.557" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_param_sample_save" time="4.601" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nested_hists" time="35.095" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals" time="3.586" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals_xd" time="180.708" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_rand_paramsample_plot" time="9.778" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_approach" time="296.141" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_safety" time="18.965" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_set_seeds" time="0.111" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_stochastic_pdf" time="0.081" /><testcase classname="examples.rover.FaultSample_Use-Cases.ipynb" name="FaultSample_Use-Cases.ipynb" time="12.524"><failure message="#x1B[31mAttributeError#x1B[39m: 'DriveMode' object has no attribute 'fault_hmode_1'">---------------------------------------------------------------------------
sa = SampleApproach(Rover(), phasemaps=phases)
# adding fault domains
sa.add_faultdomain("drive", "fault", "drive", "hmode_1")
sa.add_faultdomain("plan_path", "all_fxn_modes", "plan_path")
sa.add_faultdomain("power", "all_fxn_modes", "power")
sa.add_faultsample("drive", "fault_phases", "drive", phasemap="plan_path")
sa.add_faultsample("plan_path", "fault_phases", "plan_path", phasemap="plan_path")
sa.add_faultsample("power", "fault_phases", "power", phasemap="power")
sa.prune_scenarios()
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mAttributeError#x1B[39m                            Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[22]#x1B[39m#x1B[32m, line 3#x1B[39m
#x1B[32m      1#x1B[39m sa = SampleApproach(Rover(), phasemaps=phases)
#x1B[32m      2#x1B[39m #x1B[38;5;66;03m# adding fault domains#x1B[39;00m
#x1B[32m----&gt; #x1B[39m#x1B[32m3#x1B[39m #x1B[43msa#x1B[49m#x1B[43m.#x1B[49m#x1B[43madd_faultdomain#x1B[49m#x1B[43m(#x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43mdrive#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43mfault#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43mdrive#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[33;43m"#x1B[39;49m#x1B[33;43mhmode_1#x1B[39;49m#x1B[33;43m"#x1B[39;49m#x1B[43m)#x1B[49m
#x1B[32m      4#x1B[39m sa.add_faultdomain(#x1B[33m"#x1B[39m#x1B[33mplan_path#x1B[39m#x1B[33m"#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mall_fxn_modes#x1B[39m#x1B[33m"#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mplan_path#x1B[39m#x1B[33m"#x1B[39m)
#x1B[32m      5#x1B[39m sa.add_faultdomain(#x1B[33m"#x1B[39m#x1B[33mpower#x1B[39m#x1B[33m"#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mall_fxn_modes#x1B[39m#x1B[33m"#x1B[39m, #x1B[33m"#x1B[39m#x1B[33mpower#x1B[39m#x1B[33m"#x1B[39m)

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/sample.py:1214#x1B[39m, in #x1B[36mSampleApproach.add_faultdomain#x1B[39m#x1B[34m(self, name, add_method, *args, **kwargs)#x1B[39m
#x1B[32m   1212#x1B[39m faultdomain = FaultDomain(#x1B[38;5;28mself#x1B[39m.mdl)
#x1B[32m   1213#x1B[39m meth = #x1B[38;5;28mgetattr#x1B[39m(faultdomain, #x1B[33m'#x1B[39m#x1B[33madd_#x1B[39m#x1B[33m'#x1B[39m+add_method)
#x1B[32m-&gt; #x1B[39m#x1B[32m1214#x1B[39m #x1B[43mmeth#x1B[49m#x1B[43m(#x1B[49m#x1B[43m*#x1B[49m#x1B[43margs#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m   1215#x1B[39m #x1B[38;5;28mself#x1B[39m.faultdomains[name] = faultdomain

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/sim/sample.py:458#x1B[39m, in #x1B[36mFaultDomain.add_fault#x1B[39m#x1B[34m(self, fxnname, faultmode, ind, **kwargs)#x1B[39m
#x1B[32m    430#x1B[39m #x1B[38;5;28;01mdef#x1B[39;00m#x1B[38;5;250m #x1B[39m#x1B[34madd_fault#x1B[39m(#x1B[38;5;28mself#x1B[39m, fxnname, faultmode, ind=#x1B[33m'#x1B[39m#x1B[33m'#x1B[39m, **kwargs):
#x1B[32m    431#x1B[39m #x1B[38;5;250m    #x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    432#x1B[39m #x1B[33;03m    Add a fault to the FaultDomain.#x1B[39;00m
#x1B[32m    433#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    456#x1B[39m #x1B[33;03m    [Fault(prob=1.0, cost=0.0, phases=(), disturbances={'s.charge': 10.0}, units='sim'), Fault(prob=1.0, cost=0.0, phases=(), disturbances={'s.charge': 15.0}, units='sim'), Fault(prob=1.0, cost=0.0, phases=(), disturbances={'s.charge': 20.0}, units='sim')]#x1B[39;00m
#x1B[32m    457#x1B[39m #x1B[33;03m    """#x1B[39;00m
#x1B[32m--&gt; #x1B[39m#x1B[32m458#x1B[39m     fault = #x1B[38;5;28;43mself#x1B[39;49m#x1B[43m.#x1B[49m#x1B[43mmdl#x1B[49m#x1B[43m.#x1B[49m#x1B[43mget_fault#x1B[49m#x1B[43m(#x1B[49m#x1B[43mfxnname#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43mfaultmode#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    459#x1B[39m     #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m ind:
#x1B[32m    460#x1B[39m         #x1B[38;5;28mself#x1B[39m.faults[(fxnname, faultmode)] = fault

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/block/base.py:331#x1B[39m, in #x1B[36mSimulable.get_fault#x1B[39m#x1B[34m(self, scope, faultmode, **kwargs)#x1B[39m
#x1B[32m    329#x1B[39m         scope = scope[#x1B[38;5;28mlen#x1B[39m(name)+#x1B[32m1#x1B[39m:]
#x1B[32m    330#x1B[39m     obj = #x1B[38;5;28mself#x1B[39m.get_vars(scope)
#x1B[32m--&gt; #x1B[39m#x1B[32m331#x1B[39m fm = #x1B[43mobj#x1B[49m#x1B[43m.#x1B[49m#x1B[43mm#x1B[49m#x1B[43m.#x1B[49m#x1B[43mget_fault#x1B[49m#x1B[43m(#x1B[49m#x1B[43mfaultmode#x1B[49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[43m*#x1B[49m#x1B[43m*#x1B[49m#x1B[43mkwargs#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    332#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;129;01mnot#x1B[39;00m fm:
#x1B[32m    333#x1B[39m     #x1B[38;5;28;01mraise#x1B[39;00m #x1B[38;5;167;01mException#x1B[39;00m(#x1B[33m"#x1B[39m#x1B[33mfaultmode #x1B[39m#x1B[33m"#x1B[39m+faultmode+#x1B[33m"#x1B[39m#x1B[33m not in #x1B[39m#x1B[33m"#x1B[39m+#x1B[38;5;28mstr#x1B[39m(obj.m.#x1B[34m__class__#x1B[39m))

#x1B[36mFile #x1B[39m#x1B[32m~/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools-full/lib/python3.11/site-packages/fmdtools/define/container/mode.py:258#x1B[39m, in #x1B[36mMode.get_fault#x1B[39m#x1B[34m(self, faultname, **kwargs)#x1B[39m
#x1B[32m    235#x1B[39m #x1B[38;5;250m#x1B[39m#x1B[33;03m"""#x1B[39;00m
#x1B[32m    236#x1B[39m #x1B[33;03mGet the Fault object associated with the given faultname.#x1B[39;00m
#x1B[32m    237#x1B[39m 
#x1B[32m   (...)#x1B[39m#x1B[32m    255#x1B[39m #x1B[33;03mFault(prob=0.1, cost=100, phases=(('supply', 1.0),), disturbances=(), units='sim')#x1B[39;00m
#x1B[32m    256#x1B[39m #x1B[33;03m"""#x1B[39;00m
#x1B[32m    257#x1B[39m #x1B[38;5;28;01mif#x1B[39;00m #x1B[38;5;28misinstance#x1B[39m(faultname, #x1B[38;5;28mstr#x1B[39m):
#x1B[32m--&gt; #x1B[39m#x1B[32m258#x1B[39m     fault = #x1B[38;5;28;43mgetattr#x1B[39;49m#x1B[43m(#x1B[49m#x1B[38;5;28;43mself#x1B[39;49m#x1B[43m,#x1B[49m#x1B[43m #x1B[49m#x1B[33;43m'#x1B[39;49m#x1B[33;43mfault_#x1B[39;49m#x1B[33;43m'#x1B[39;49m#x1B[43m+#x1B[49m#x1B[43mfaultname#x1B[49m#x1B[43m)#x1B[49m
#x1B[32m    259#x1B[39m #x1B[38;5;28;01melse#x1B[39;00m:
#x1B[32m    260#x1B[39m     fault = faultname

#x1B[31mAttributeError#x1B[39m: 'DriveMode' object has no attribute 'fault_hmode_1'</failure></testcase><testcase classname="examples.rover.HFAC_Analyses.IDETC_Human_Paper_Analysis.ipynb" name="IDETC_Human_Paper_Analysis.ipynb" time="381.892" /><testcase classname="examples.rover.Model_Structure_Visualization_Tutorial.ipynb" name="Model_Structure_Visualization_Tutorial.ipynb" time="68.848" /><testcase classname="examples.rover.ParameterSample_Use-Cases.ipynb" name="ParameterSample_Use-Cases.ipynb" time="379.433" /><testcase classname="examples.rover.Rover_Setup_Notebook.ipynb" name="Rover_Setup_Notebook.ipynb" time="66.934" /><testcase classname="examples.rover.degradation_modelling.Degradation_Modelling_Notebook.ipynb" name="Degradation_Modelling_Notebook.ipynb" time="136.216"><failure message="#x1B[31mAttributeError#x1B[39m: 'DriveMode' object has no attribute 'faultmodes'">---------------------------------------------------------------------------
mdl.fxns['drive'].m.faultmodes
#x1B[31m---------------------------------------------------------------------------#x1B[39m
#x1B[31mAttributeError#x1B[39m                            Traceback (most recent call last)
#x1B[36mCell#x1B[39m#x1B[36m #x1B[39m#x1B[32mIn[21]#x1B[39m#x1B[32m, line 1#x1B[39m
#x1B[32m----&gt; #x1B[39m#x1B[32m1#x1B[39m #x1B[43mmdl#x1B[49m#x1B[43m.#x1B[49m#x1B[43mfxns#x1B[49m#x1B[43m[#x1B[49m#x1B[33;43m'#x1B[39;49m#x1B[33;43mdrive#x1B[39;49m#x1B[33;43m'#x1B[39;49m#x1B[43m]#x1B[49m#x1B[43m.#x1B[49m#x1B[43mm#x1B[49m#x1B[43m.#x1B[49m#x1B[43mfaultmodes#x1B[49m

#x1B[31mAttributeError#x1B[39m: 'DriveMode' object has no attribute 'faultmodes'</failure></testcase><testcase classname="examples.rover.rover_model" name="examples.rover.rover_model.Drive.drive_nominal" time="0.165" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Comprehend" time="0.007" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Decide" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.HumanActions" time="0.023" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Look" time="0.005" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Percieve" time="0.006" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Press" time="0.004" /><testcase classname="examples.rover.rover_model_human" name="examples.rover.rover_model_human.Project" time="0.005" /><testcase classname="examples.rover.test_rover.RoverTests" name="test_obj_values" time="10.246" /><testcase classname="examples.tank.Tank_Analysis.ipynb" name="Tank_Analysis.ipynb" time="45.247" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach" time="11.605" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_0" time="10.890" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_1" time="25.023" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_notrack" time="9.474" /><testcase classname="examples.tank.test_tank.TankTests" name="test_comp_mode_inj" time="0.225" /><testcase classname="examples.tank.test_tank.TankTests" name="test_different_components" time="0.111" /><testcase classname="examples.tank.test_tank.TankTests" name="test_epc_math" time="0.074" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_isave" time="10.870" /><testcase classname="examples.tank.test_tank.TankTests" name="test_fault_sample_save" time="10.492" /><testcase classname="examples.tank.test_tank.TankTests" name="test_local_tstep" time="0.738" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_different" time="3.988" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_same" time="5.205" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_reset" time="0.002"><skipped type="pytest.skip" message="Reset not fully implemented yet and unused throughout.">/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/examples/tank/test_tank.py:69: Reset not fully implemented yet and unused throughout.</skipped></testcase><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_isave" time="104.772" /><testcase classname="examples.tank.test_tank.TankTests" name="test_nested_sample_save" time="109.978" /><testcase classname="examples.tank.test_tank.TankTests" name="test_param_sample_save" time="3.810" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_multfault" time="0.708" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nominal" time="0.444" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_onefault" time="0.704" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_singlefaults" time="2.741" /><testcase classname="examples.tank.test_tank.TankTests" name="test_singlefaults_isave" time="2.899" /><testcase classname="examples.tank.test_tank.TankTests" name="test_tank_copy_args" time="0.138" /><testcase classname="examples.taxiway.Paper_Notebook.ipynb" name="Paper_Notebook.ipynb" time="45.332" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid" time="0.451" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_avoid_plot" time="1.308" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle" time="0.130" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_heli_cycle_plot" time="0.816" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight" time="1.851" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_lost_sight_plot" time="1.863" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle" time="0.232" /><testcase classname="examples.taxiway.test_asset.AssetTests" name="test_one_cycle_plot" time="0.643" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception" time="7.828" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_lost_ground_perception_plot" time="9.476" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command" time="9.725" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_lost_sight" time="8.874" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_atc_wrong_land_command_sight_plot" time="13.443" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_default_plots" time="9.337" /><testcase classname="examples.taxiway.test_model.ModelTests" name="test_scen" time="3.084" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.auto_filetype" time="0.009" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_average" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_expected" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_metric" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_metric_ci" time="0.022" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_percent" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_rate" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_sum" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.calc_total" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.create_indiv_filename" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.diff" time="0.003" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.join_key" time="0.002" /><testcase classname="fmdtools.analyze.common" name="fmdtools.analyze.common.to_include_keys" time="0.003" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph" time="1.092" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.add_node_groups" time="0.143" /><testcase classname="fmdtools.analyze.graph.base" name="fmdtools.analyze.graph.base.Graph.set_heatmap" time="0.135" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.ModelGraph" time="0.011" /><testcase classname="fmdtools.analyze.graph.model" name="fmdtools.analyze.graph.model.create_inheritance_subgraph" time="0.005" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.FlowEdgeStyle" time="0.003" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.edge_style_factory" time="0.657" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.node_style_factory" time="1.414" /><testcase classname="fmdtools.analyze.graph.style" name="fmdtools.analyze.graph.style.to_legend_label" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History" time="0.005" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.cut" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_degraded_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_fault_time" time="0.003" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_faulty_hist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_bound_errhist" time="0.005" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_ci_errhist" time="0.014" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_mean_std_errhist" time="0.004" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_percentile_errhist" time="0.009" /><testcase classname="fmdtools.analyze.history" name="fmdtools.analyze.history.History.get_slice" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_modephase_time" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_phase_time" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.calc_samples_in_phases" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.find_modephase" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_phase_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.PhaseMap.get_sample_times" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.find_interval_overlap" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.from_hist" time="0.003" /><testcase classname="fmdtools.analyze.phases" name="fmdtools.analyze.phases.join_phasemaps" time="0.004" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result" time="0.005" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__eq__" time="0.005" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.__sub__" time="0.005" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.align_external_dict" time="0.004" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.fromdict" time="0.004" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get" time="0.004" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_metric" time="0.008" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_metric_ci" time="0.015" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.get_vals" time="0.005" /><testcase classname="fmdtools.analyze.result" name="fmdtools.analyze.result.Result.is_flat" time="0.004" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.Comparison" time="2.077" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.FMEA" time="0.033"><failure message="441         Note that rate and rate metrics become inputs to average and expected.&#10;442         rates='scenario_'&#10;443         All other kwargs will be kwargs to Result.get_metric&#10;444         (e.g., rates or weights for get_expected and get_average)&#10;445 &#10;446     Examples&#10;447     --------&#10;448     &gt;&gt;&gt; from fmdtools.sim.sample import exfs&#10;449     &gt;&gt;&gt; res = Result({scen.name+'.endclass': {'rate': scen.time, 'cost': i} for i, scen in enumerate(exfs.scenarios())}).flatten()&#10;450     &gt;&gt;&gt; FMEA(res, exfs).as_table(sort_by=&quot;sum_cost&quot;)&#10;Differences (unified diff with -expected +actual):&#10;    @@ -1,7 +1,7 @@&#10;                                       average_scenario_rate  ...  expected_cost&#10;     exfxnarch.fxns.ex_fxn2 short                        0.0  ...            0.0&#10;    -                       no_charge                    0.0  ...            0.0&#10;     exfxnarch.fxns.ex_fxn  short                        0.0  ...            0.0&#10;    -                       no_charge                    0.0  ...            0.0&#10;    +exfxnarch.fxns.ex_fxn2 no_charge                    0.0  ...            0.0&#10;    +exfxnarch.fxns.ex_fxn  no_charge                    0.0  ...            0.0&#10;     &lt;BLANKLINE&gt;&#10;     [4 rows x 3 columns]&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/analyze/tabulate.py:450: DocTestFailure">441         Note that rate and rate metrics become inputs to average and expected.
442         rates='scenario_'
443         All other kwargs will be kwargs to Result.get_metric
444         (e.g., rates or weights for get_expected and get_average)
445 
446     Examples
447     --------
448     &gt;&gt;&gt; from fmdtools.sim.sample import exfs
449     &gt;&gt;&gt; res = Result({scen.name+'.endclass': {'rate': scen.time, 'cost': i} for i, scen in enumerate(exfs.scenarios())}).flatten()
450     &gt;&gt;&gt; FMEA(res, exfs).as_table(sort_by="sum_cost")
Differences (unified diff with -expected +actual):
    @@ -1,7 +1,7 @@
                                       average_scenario_rate  ...  expected_cost
     exfxnarch.fxns.ex_fxn2 short                        0.0  ...            0.0
    -                       no_charge                    0.0  ...            0.0
     exfxnarch.fxns.ex_fxn  short                        0.0  ...            0.0
    -                       no_charge                    0.0  ...            0.0
    +exfxnarch.fxns.ex_fxn2 no_charge                    0.0  ...            0.0
    +exfxnarch.fxns.ex_fxn  no_charge                    0.0  ...            0.0
     &lt;BLANKLINE&gt;
     [4 rows x 3 columns]

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/analyze/tabulate.py:450: DocTestFailure</failure></testcase><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.result_summary" time="0.156" /><testcase classname="fmdtools.analyze.tabulate" name="fmdtools.analyze.tabulate.result_summary_fmea" time="0.614"><failure message="061         Table of metrics and degraded functions/flows over scenarios&#10;062 &#10;063     Examples&#10;064     --------&#10;065     &gt;&gt;&gt; from fmdtools.define.architecture.function import ExFxnArch&#10;066     &gt;&gt;&gt; from fmdtools.sim.propagate import fault_sample&#10;067     &gt;&gt;&gt; from fmdtools.sim.sample import exfs&#10;068     &gt;&gt;&gt; mdl = ExFxnArch()&#10;069     &gt;&gt;&gt; res, hist = fault_sample(mdl, exfs)&#10;070     &gt;&gt;&gt; result_summary_fmea(res, hist, *mdl.fxns, *mdl.flows)&#10;Differences (unified diff with -expected +actual):&#10;    @@ -2,8 +2,8 @@&#10;     exfxnarch_fxns_ex_fxn_no_charge_t1              ['ex_fxn', 'exf']  ...           0.0&#10;     exfxnarch_fxns_ex_fxn_no_charge_t2              ['ex_fxn', 'exf']  ...           0.0&#10;    +exfxnarch_fxns_ex_fxn2_no_charge_t1  ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0&#10;    +exfxnarch_fxns_ex_fxn2_no_charge_t2  ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0&#10;     exfxnarch_fxns_ex_fxn_short_t1                  ['ex_fxn', 'exf']  ...           0.0&#10;     exfxnarch_fxns_ex_fxn_short_t2                  ['ex_fxn', 'exf']  ...           0.0&#10;    -exfxnarch_fxns_ex_fxn2_no_charge_t1  ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0&#10;    -exfxnarch_fxns_ex_fxn2_no_charge_t2  ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0&#10;     exfxnarch_fxns_ex_fxn2_short_t1      ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0&#10;     exfxnarch_fxns_ex_fxn2_short_t2      ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0&#10;&#10;/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/analyze/tabulate.py:70: DocTestFailure">061         Table of metrics and degraded functions/flows over scenarios
062 
063     Examples
064     --------
065     &gt;&gt;&gt; from fmdtools.define.architecture.function import ExFxnArch
066     &gt;&gt;&gt; from fmdtools.sim.propagate import fault_sample
067     &gt;&gt;&gt; from fmdtools.sim.sample import exfs
068     &gt;&gt;&gt; mdl = ExFxnArch()
069     &gt;&gt;&gt; res, hist = fault_sample(mdl, exfs)
070     &gt;&gt;&gt; result_summary_fmea(res, hist, *mdl.fxns, *mdl.flows)
Differences (unified diff with -expected +actual):
    @@ -2,8 +2,8 @@
     exfxnarch_fxns_ex_fxn_no_charge_t1              ['ex_fxn', 'exf']  ...           0.0
     exfxnarch_fxns_ex_fxn_no_charge_t2              ['ex_fxn', 'exf']  ...           0.0
    +exfxnarch_fxns_ex_fxn2_no_charge_t1  ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0
    +exfxnarch_fxns_ex_fxn2_no_charge_t2  ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0
     exfxnarch_fxns_ex_fxn_short_t1                  ['ex_fxn', 'exf']  ...           0.0
     exfxnarch_fxns_ex_fxn_short_t2                  ['ex_fxn', 'exf']  ...           0.0
    -exfxnarch_fxns_ex_fxn2_no_charge_t1  ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0
    -exfxnarch_fxns_ex_fxn2_no_charge_t2  ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0
     exfxnarch_fxns_ex_fxn2_short_t1      ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0
     exfxnarch_fxns_ex_fxn2_short_t2      ['ex_fxn', 'ex_fxn2', 'exf']  ...           0.0

/home/bamboo/bamboo-agent-home/xml-data/build-dir/RAD-TEST-UVF/fmdtools/fmdtools/analyze/tabulate.py:70: DocTestFailure</failure></testcase><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureActGraph" time="0.009" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureFlowGraph" time="0.007" /><testcase classname="fmdtools.define.architecture.action" name="fmdtools.define.architecture.action.ActionArchitectureGraph" time="0.015" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitecture" time="0.018" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFlowGraph" time="0.012" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureFxnGraph" time="0.013" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureGraph" time="0.016" /><testcase classname="fmdtools.define.architecture.function" name="fmdtools.define.architecture.function.FunctionArchitectureTypeGraph" time="0.009" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture" time="0.013" /><testcase classname="fmdtools.define.architecture.geom" name="fmdtools.define.architecture.geom.GeomArchitecture.all_at" time="0.011" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.is_bool" time="0.003" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.is_numeric" time="0.003" /><testcase classname="fmdtools.define.base" name="fmdtools.define.base.nan_to_x" time="0.002" /><testcase classname="fmdtools.define.block.action" name="fmdtools.define.block.action.Action" time="0.005" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_hist_ind" time="0.003" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_shift" time="0.004" /><testcase classname="fmdtools.define.block.base" name="fmdtools.define.block.base.SimParam.get_timerange" time="0.003" /><testcase classname="fmdtools.define.block.function" name="fmdtools.define.block.function.Function" time="0.005" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.assign" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.copy" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.create_hist" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.get_field_dict" time="0.003" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.set_field" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.BaseContainer.to_default" time="0.002" /><testcase classname="fmdtools.define.container.base" name="fmdtools.define.container.base.check_container_pick" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Fault.calc_rate" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.HumanErrorMode" time="0.004" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode.add_fault" time="0.003" /><testcase classname="fmdtools.define.container.mode" name="fmdtools.define.container.mode.Mode.get_fault" time="0.003" /><testcase classname="fmdtools.define.container.parameter" name="fmdtools.define.container.parameter.Parameter" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand" time="0.005" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.Rand.get_rand_states" time="0.004" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_density_for_random" time="0.002" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_choice" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_integers" time="0.002" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_permuted" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.calc_prob_for_shuffle_permutation" time="0.002" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_exp_ray_pdf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_hypergeometric_pmf" time="0.005" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_lognormal_pdf" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_prob_for_rand" time="0.003" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_standard_t_pdf" time="0.005" /><testcase classname="fmdtools.define.container.rand" name="fmdtools.define.container.rand.get_triangular_pdf" time="0.004" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.add" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.div" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.get" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.gett" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.inc" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.limit" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.mul" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.put" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.roundto" time="0.002" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.same" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.set_atts" time="0.003" /><testcase classname="fmdtools.define.container.state" name="fmdtools.define.container.state.State.sub" time="0.002" /><testcase classname="fmdtools.define.container.time" name="fmdtools.define.container.time.Time" time="0.004" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment" time="0.024" /><testcase classname="fmdtools.define.environment" name="fmdtools.define.environment.Environment.copy" time="0.049" /><testcase classname="fmdtools.define.flow.base" name="fmdtools.define.flow.base.Flow" time="0.004" /><testcase classname="fmdtools.define.flow.commsflow" name="fmdtools.define.flow.commsflow.CommsFlow" time="0.005" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow" time="0.004" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.create_hist" time="0.004" /><testcase classname="fmdtools.define.flow.multiflow" name="fmdtools.define.flow.multiflow.MultiFlow.get_view" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject" time="0.005" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.assign_roles" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_att_roletype" time="0.003" /><testcase classname="fmdtools.define.object.base" name="fmdtools.define.object.base.BaseObject.get_node_attrs" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_prop" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.find_all_props" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_neighbors" time="0.007" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.get_properties" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_pts" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.set_range" time="0.008" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_gridpoint" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.BaseCoords.to_index" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords" time="0.007" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.copy" time="0.006" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_all" time="0.006" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.find_closest" time="0.005" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.in_area" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.Coords.set_rand_pts" time="0.004" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.CoordsParam" time="0.003" /><testcase classname="fmdtools.define.object.coords" name="fmdtools.define.object.coords.MetricCoords" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.all_at" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_at_shape" time="0.007" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.Geom.vect_to_shape" time="0.006" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomLine" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoint" time="0.005" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.GeomPoly" time="0.004" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.LineParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PointParam" time="0.003" /><testcase classname="fmdtools.define.object.geom" name="fmdtools.define.object.geom.PolyParam" time="0.003" /><testcase classname="fmdtools.define.object.timer" name="fmdtools.define.object.timer.Timer" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.BaseSample.get_metric" time="0.008" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all" time="0.011" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxn_modes" time="0.010" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_all_fxnclass_modes" time="0.010" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_fault" time="0.010" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_fault_space" time="0.011" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_faults" time="0.009" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultDomain.add_singlecomp_modes" time="0.049" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_phases" time="0.046" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_fault_times" time="0.049" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_joint_fault_scenario" time="0.048" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.FaultSample.add_single_fault_scenario" time="0.047" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterDomain.get_var_iters" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterHistSample" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterResultSample" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_ranges" time="0.005" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_replicates" time="0.004" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.add_variable_scenario" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_orthogonal" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_product" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.ParameterSample.combine_random" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultdomain" time="0.054" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.SampleApproach.add_faultsample" time="0.091" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_orthogonal" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.combine_random" time="0.002" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_even" time="0.003" /><testcase classname="fmdtools.sim.sample" name="fmdtools.sim.sample.sample_times_quad" time="0.003" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence" time="0.002" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.Sequence.update_sequence" time="0.002" /><testcase classname="fmdtools.sim.scenario" name="fmdtools.sim.scenario.SingleFaultScenario.from_fault" time="0.002" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.BaseProblem.get_opt_hist" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.DisturbanceProblem" time="0.027" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.HistoryObjective" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ParameterSimProblem" time="0.147" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture" time="0.064" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_full_problem" time="0.049" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ProblemArchitecture.update_problem" time="0.031" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResponseCoords" time="0.005" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultConstraint.con_from_value" time="0.002" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.ResultObjective.get_result_value" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SimpleProblem" time="0.003" /><testcase classname="fmdtools.sim.search" name="fmdtools.sim.search.SingleFaultScenarioProblem" time="0.028" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fault_plot" time="0.639" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_flowgraph_plot" time="0.630" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fxngraph_plot" time="0.407" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_modelgraph_plot" time="0.536" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_result_from_plot" time="0.586" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_typegraph_plot" time="0.194" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_fault_injection" time="0.011" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_prop_method" time="0.297" /><testcase classname="tests.test_hierarchical.define_Tests" name="test_propagation" time="0.012" /><testcase classname="tests.test_packages.define_Tests" name="test_pdf_translation_options" time="0.009" /></testsuite></testsuites>