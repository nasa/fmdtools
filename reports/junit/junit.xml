<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="7" failures="17" skipped="0" tests="142" time="1360.736" timestamp="2023-08-04T09:20:15.879540" hostname="siskiyou"><testcase classname="" name="examples.pump.jointfaults_ex" time="0.000"><error message="collection failure">examples\pump\jointfaults_ex.py:12: in &lt;module&gt;
    from ex_pump import Pump  # required to import entire module
E   ModuleNotFoundError: No module named 'ex_pump'</error></testcase><testcase classname="" name="examples.pump.parallelism_methods" time="0.000"><error message="collection failure">examples\pump\parallelism_methods.py:8: in &lt;module&gt;
    from ex_pump import *
E   ModuleNotFoundError: No module named 'ex_pump'</error></testcase><testcase classname="" name="examples.rover.rover_degradation" time="0.000"><error message="collection failure">examples\rover\rover_degradation.py:17: in &lt;module&gt;
    from rover_model import Rover, plot_trajectories, DegParam
E   ModuleNotFoundError: No module named 'rover_model'</error></testcase><testcase classname="" name="examples.rover.rover_model_human" time="0.000"><error message="collection failure">examples\rover\rover_model_human.py:23: in &lt;module&gt;
    from fmdtools.define.model import Model, ModelParam
E   ImportError: cannot import name 'ModelParam' from 'fmdtools.define.model' (C:\Users\dhulse\Documents\GitHub\fmdtools\fmdtools\define\model.py)</error></testcase><testcase classname="" name="examples.rover.optimization.animation" time="0.000"><error message="collection failure">examples\rover\optimization\animation.py:24: in &lt;module&gt;
    dfccea = pd.read_csv('ccea_species.csv')
..\..\..\Anaconda3\lib\site-packages\pandas\util\_decorators.py:311: in wrapper
    return func(*args, **kwargs)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\readers.py:586: in read_csv
    return _read(filepath_or_buffer, kwds)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\readers.py:482: in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\readers.py:811: in __init__
    self._engine = self._make_engine(self.engine)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\readers.py:1040: in _make_engine
    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\c_parser_wrapper.py:51: in __init__
    self._open_handles(src, kwds)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\base_parser.py:222: in _open_handles
    self.handles = get_handle(
..\..\..\Anaconda3\lib\site-packages\pandas\io\common.py:702: in get_handle
    handle = open(
E   FileNotFoundError: [Errno 2] No such file or directory: 'ccea_species.csv'</error></testcase><testcase classname="" name="examples.rover.optimization.ea_analysis" time="0.000"><error message="collection failure">examples\rover\optimization\ea_analysis.py:11: in &lt;module&gt;
    dfea = pd.read_csv('rslt_ea.csv')
..\..\..\Anaconda3\lib\site-packages\pandas\util\_decorators.py:311: in wrapper
    return func(*args, **kwargs)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\readers.py:586: in read_csv
    return _read(filepath_or_buffer, kwds)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\readers.py:482: in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\readers.py:811: in __init__
    self._engine = self._make_engine(self.engine)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\readers.py:1040: in _make_engine
    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\c_parser_wrapper.py:51: in __init__
    self._open_handles(src, kwds)
..\..\..\Anaconda3\lib\site-packages\pandas\io\parsers\base_parser.py:222: in _open_handles
    self.handles = get_handle(
..\..\..\Anaconda3\lib\site-packages\pandas\io\common.py:702: in get_handle
    handle = open(
E   FileNotFoundError: [Errno 2] No such file or directory: 'rslt_ea.csv'</error></testcase><testcase classname="" name="examples.tank.tank_script" time="0.000"><error message="collection failure">examples\tank\tank_script.py:13: in &lt;module&gt;
    from tank_model import Tank
E   ModuleNotFoundError: No module named 'tank_model'</error></testcase><testcase classname="examples.asg_demo.Action_Sequence_Graph.ipynb" name="" time="7.782" /><testcase classname="examples.eps.EPS_Example_Notebook.ipynb" name="" time="5.685" /><testcase classname="examples.eps.test_eps.epsTests" name="test_all_faults" time="0.425" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_1" time="0.017" /><testcase classname="examples.eps.test_eps.epsTests" name="test_backward_fault_prop_2" time="0.020" /><testcase classname="examples.eps.test_eps.epsTests" name="test_fault_app" time="47.782" /><testcase classname="examples.eps.test_eps.epsTests" name="test_pickleability" time="0.007" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_multfault" time="0.069" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_nominal" time="0.060" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_onefault" time="0.066" /><testcase classname="examples.eps.test_eps.epsTests" name="test_save_load_singlefaults" time="1.612" /><testcase classname="examples.multiflow_demo.Multiflow_and_Commsflow_Demonstration.ipynb" name="" time="5.089" /><testcase classname="examples.multiflow_demo.test_multiflow.define_Tests" name="test_multiflows" time="0.038" /><testcase classname="examples.multirotor.Demonstration.ipynb" name="" time="351.359" /><testcase classname="examples.multirotor.Multirotor_Optimization.ipynb" name="" time="23.270" /><testcase classname="examples.multirotor.test_multirotor.DroneTests" name="test_interface_values" time="2.965"><failure message="AssertionError: 1.0460427910138081 != 0.7096666666666668 within 1 places (0.33637612434714137 difference)">self = &lt;examples.multirotor.test_multirotor.DroneTests testMethod=test_interface_values&gt;

    def test_interface_values(self):
    
        testvalues = [[0,0, 50, 0,0], [0,2, 100, 1,1],[2,2, 150, 1,1]]
        # NOTE: because there is a fault in the nominal sim that triggers the resilience policy
        # the value [2,2, 50, 0,0] will give inconsistent results, since the operational model
        # doesn't have a consistent resilience policy in that case
        for testvalue in testvalues:
    
            rcost_manual = x_to_rcost(testvalue[:2], [testvalue[2]], testvalue[3:], faultmodes='store_ee')
            rcost_int = opt_prob.cr(testvalue)
&gt;           self.assertAlmostEqual(rcost_manual/10000, rcost_int/10000, 1)
E           AssertionError: 1.0460427910138081 != 0.7096666666666668 within 1 places (0.33637612434714137 difference)

examples\multirotor\test_multirotor.py:22: AssertionError</failure></testcase><testcase classname="examples.multirotor.test_multirotor.DroneTests" name="test_sim_types" time="8.972" /><testcase classname="examples.pump.AST_Sampling.ipynb" name="" time="0.060"><failure message="Error - No such kernel: 'julia-1.8'">Error - No such kernel: 'julia-1.8'</failure></testcase><testcase classname="examples.pump.Optimization.ipynb" name="" time="5.727"><failure message="#x1B[1;31mException#x1B[0m: delay in &lt;class 'examples.pump.ex_pump.PumpParam'&gt; assigned incorrect type: &lt;class 'numpy.float64'&gt; (should be &lt;class 'int'&gt;)">---------------------------------------------------------------------------
res = minimize(multi_problem.cost, [5], method="SLSQP", bounds=[[0,40]])
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mException#x1B[0m                                 Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_11700/2162782049.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[0mres#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mminimize#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmulti_problem#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcost#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m[#x1B[0m#x1B[1;36m5#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmethod#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m"SLSQP"#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mbounds#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m0#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;36m40#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m
#x1B[1;32m~\Anaconda3\lib\site-packages\scipy\optimize\_minimize.py#x1B[0m in #x1B[0;36mminimize#x1B[1;34m(fun, x0, args, method, jac, hess, hessp, bounds, constraints, tol, callback, options)#x1B[0m
#x1B[0;32m    629#x1B[0m         #x1B[1;32mreturn#x1B[0m #x1B[0m_minimize_cobyla#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mfun#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mx0#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0margs#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mconstraints#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m**#x1B[0m#x1B[0moptions#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    630#x1B[0m     #x1B[1;32melif#x1B[0m #x1B[0mmeth#x1B[0m #x1B[1;33m==#x1B[0m #x1B[1;34m'slsqp'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 631#x1B[1;33m         return _minimize_slsqp(fun, x0, args, jac, bounds,
#x1B[0m#x1B[0;32m    632#x1B[0m                                constraints, callback=callback, **options)
#x1B[0;32m    633#x1B[0m     #x1B[1;32melif#x1B[0m #x1B[0mmeth#x1B[0m #x1B[1;33m==#x1B[0m #x1B[1;34m'trust-constr'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py#x1B[0m in #x1B[0;36m_minimize_slsqp#x1B[1;34m(func, x0, args, jac, bounds, constraints, maxiter, ftol, iprint, disp, eps, callback, finite_diff_rel_step, **unknown_options)#x1B[0m
#x1B[0;32m    373#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    374#x1B[0m     #x1B[1;31m# ScalarFunction provides function and gradient evaluation#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 375#x1B[1;33m     sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,
#x1B[0m#x1B[0;32m    376#x1B[0m                                   #x1B[0mfinite_diff_rel_step#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mfinite_diff_rel_step#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    377#x1B[0m                                   bounds=new_bounds)

#x1B[1;32m~\Anaconda3\lib\site-packages\scipy\optimize\optimize.py#x1B[0m in #x1B[0;36m_prepare_scalar_function#x1B[1;34m(fun, x0, jac, args, bounds, epsilon, finite_diff_rel_step, hess)#x1B[0m
#x1B[0;32m    259#x1B[0m     #x1B[1;31m# ScalarFunction caches. Reuse of fun(x) during grad#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    260#x1B[0m     #x1B[1;31m# calculation reduces overall function evaluations.#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 261#x1B[1;33m     sf = ScalarFunction(fun, x0, args, grad, hess,
#x1B[0m#x1B[0;32m    262#x1B[0m                         finite_diff_rel_step, bounds, epsilon=epsilon)
#x1B[0;32m    263#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions.py#x1B[0m in #x1B[0;36m__init__#x1B[1;34m(self, fun, x0, args, grad, hess, finite_diff_rel_step, finite_diff_bounds, epsilon)#x1B[0m
#x1B[0;32m    138#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    139#x1B[0m         #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_update_fun_impl#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mupdate_fun#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 140#x1B[1;33m         #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_update_fun#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    141#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    142#x1B[0m         #x1B[1;31m# Gradient evaluation#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions.py#x1B[0m in #x1B[0;36m_update_fun#x1B[1;34m(self)#x1B[0m
#x1B[0;32m    231#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0m_update_fun#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    232#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[1;32mnot#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mf_updated#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 233#x1B[1;33m             #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_update_fun_impl#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    234#x1B[0m             #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mf_updated#x1B[0m #x1B[1;33m=#x1B[0m #x1B[1;32mTrue#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    235#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions.py#x1B[0m in #x1B[0;36mupdate_fun#x1B[1;34m()#x1B[0m
#x1B[0;32m    135#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    136#x1B[0m         #x1B[1;32mdef#x1B[0m #x1B[0mupdate_fun#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 137#x1B[1;33m             #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mf#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mfun_wrapped#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    138#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    139#x1B[0m         #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_update_fun_impl#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mupdate_fun#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions.py#x1B[0m in #x1B[0;36mfun_wrapped#x1B[1;34m(x)#x1B[0m
#x1B[0;32m    132#x1B[0m             #x1B[1;31m# Overwriting results in undefined behaviour because#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    133#x1B[0m             #x1B[1;31m# fun(self.x) will change self.x, with the two no longer linked.#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 134#x1B[1;33m             #x1B[1;32mreturn#x1B[0m #x1B[0mfun#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mnp#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcopy#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m*#x1B[0m#x1B[0margs#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    135#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    136#x1B[0m         #x1B[1;32mdef#x1B[0m #x1B[0mupdate_fun#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\sim\search.py#x1B[0m in #x1B[0;36mnewobj#x1B[1;34m(x)#x1B[0m
#x1B[0;32m    252#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0m_assoc_obj_con#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msimname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mobjname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mobj_const#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0marg#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    253#x1B[0m         #x1B[1;32mdef#x1B[0m #x1B[0mnewobj#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 254#x1B[1;33m             #x1B[1;32mreturn#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mx_to_obj_const#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mx#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msimname#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m0#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m[#x1B[0m#x1B[0mobjname#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    255#x1B[0m         #x1B[1;32mdef#x1B[0m #x1B[0mnewconst#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    256#x1B[0m             #x1B[1;32mreturn#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mx_to_obj_const#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mx#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msimname#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m1#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m[#x1B[0m#x1B[0mobjname#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\sim\search.py#x1B[0m in #x1B[0;36mx_to_obj_const#x1B[1;34m(self, x, simnames)#x1B[0m
#x1B[0;32m    628#x1B[0m             #x1B[1;31m# prep sims#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    629#x1B[0m             #x1B[1;32mif#x1B[0m #x1B[0msimname#x1B[0m #x1B[1;32mnot#x1B[0m #x1B[1;32min#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcurrent_iter#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mget#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;34m'sims'#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m{#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 630#x1B[1;33m                 #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_prep_sim_type#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0msimulations#x1B[0m#x1B[1;33m[#x1B[0m#x1B[0msimname#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m0#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msimname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    631#x1B[0m                 #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcurrent_iter#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;34m'sims'#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0madd#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0msimname#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    632#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\sim\search.py#x1B[0m in #x1B[0;36m_prep_sim_type#x1B[1;34m(self, simtype, simname, x)#x1B[0m
#x1B[0;32m    493#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0m_prep_sim_type#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msimtype#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msimname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    494#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[0msimtype#x1B[0m#x1B[1;33m==#x1B[0m#x1B[1;34m'single'#x1B[0m#x1B[1;33m:#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_prep_single_sim#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0msimname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 495#x1B[1;33m         #x1B[1;32mif#x1B[0m #x1B[0msimtype#x1B[0m#x1B[1;33m==#x1B[0m#x1B[1;34m'multi'#x1B[0m#x1B[1;33m:#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_prep_multi_sim#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0msimname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    496#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0m_run_sim_type#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msimtype#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msimname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    497#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[0msimtype#x1B[0m#x1B[1;33m==#x1B[0m#x1B[1;34m'set_const'#x1B[0m#x1B[1;33m:#x1B[0m    #x1B[1;32mreturn#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_get_set_const#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mx#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\sim\search.py#x1B[0m in #x1B[0;36m_prep_multi_sim#x1B[1;34m(self, simname, x)#x1B[0m
#x1B[0;32m    338#x1B[0m         #x1B[0mvar_time#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mobj_time#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_get_var_obj_time#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0msimname#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    339#x1B[0m         #x1B[0mkwar#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0msimulations#x1B[0m#x1B[1;33m[#x1B[0m#x1B[0msimname#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m2#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 340#x1B[1;33m         #x1B[0mmdl#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_check_new_mdl#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0msimname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;36m0#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mmdl#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mx#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mobj_time#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mdefault_p#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mkwar#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mget#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;34m'p'#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m{#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    341#x1B[0m         #x1B[0mresult#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mnomhist#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mnomscen#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mc_mdls_nom#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mt_end#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mprop#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mnom_helper#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmdl#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m[#x1B[0m#x1B[0mvar_time#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m**#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;33m**#x1B[0m#x1B[0mkwar#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'scen'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'use_end_condition'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;32mFalse#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    342#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\sim\search.py#x1B[0m in #x1B[0;36m_check_new_mdl#x1B[1;34m(self, simname, var_time, mdl, x, obj_time, staged, default_p)#x1B[0m
#x1B[0;32m    372#x1B[0m             #x1B[1;32mfor#x1B[0m #x1B[0mfunc#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mfvars#x1B[0m #x1B[1;32min#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mvar_mapping#x1B[0m#x1B[1;33m[#x1B[0m#x1B[0msimname#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mget#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;34m'paramfunc'#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mitems#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    373#x1B[0m                 #x1B[0mp#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mupdate#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mfunc#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m*#x1B[0m#x1B[1;33m[#x1B[0m#x1B[0mx#x1B[0m#x1B[1;33m[#x1B[0m#x1B[0mind#x1B[0m#x1B[1;33m]#x1B[0m #x1B[1;32mfor#x1B[0m #x1B[0mind#x1B[0m #x1B[1;32min#x1B[0m #x1B[0mfvars#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mvalues#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 374#x1B[1;33m             #x1B[0mmdl#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mmdl#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mnew_with_params#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;34m'times'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;36m0#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mobj_time#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    375#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    376#x1B[0m         #x1B[0mprop#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0minit_histrange#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmdl#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mvar_time#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mstaged#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m"all"#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m"all"#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\model.py#x1B[0m in #x1B[0;36mnew_with_params#x1B[1;34m(self, **kwargs)#x1B[0m
#x1B[0;32m    276#x1B[0m         #x1B[1;32mwith#x1B[0m #x1B[0mchanges#x1B[0m #x1B[0mto#x1B[0m #x1B[0mparams#x1B[0m #x1B[1;33m(#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mtrack#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mrand#x1B[0m #x1B[0metc#x1B[0m#x1B[1;33m.#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    277#x1B[0m         """
#x1B[1;32m--&gt; 278#x1B[1;33m         #x1B[0mp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mr#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mtrack#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0msuper#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mnew_params#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m**#x1B[0m#x1B[0mkwargs#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    279#x1B[0m         #x1B[1;32mreturn#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m__class__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0msp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mr#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mr#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mtrack#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mtrack#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    280#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0mcopy#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\block.py#x1B[0m in #x1B[0;36mnew_params#x1B[1;34m(self, p, sp, r, track)#x1B[0m
#x1B[0;32m    210#x1B[0m             #x1B[0mtrack#x1B[0m #x1B[0margs#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    211#x1B[0m         """
#x1B[1;32m--&gt; 212#x1B[1;33m         #x1B[0mp#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcopy_with_vals#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m**#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    213#x1B[0m         #x1B[0msp#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0msp#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcopy_with_vals#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m**#x1B[0m#x1B[0msp#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    214#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[1;32mnot#x1B[0m #x1B[0mr#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\parameter.py#x1B[0m in #x1B[0;36mcopy_with_vals#x1B[1;34m(self, **kwargs)#x1B[0m
#x1B[0;32m    140#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0mcopy_with_vals#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m**#x1B[0m#x1B[0mkwargs#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    141#x1B[0m         #x1B[1;34m"""Creates a copy of itself with modified values given by kwargs"""#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 142#x1B[1;33m         #x1B[1;32mreturn#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m__class__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m**#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;33m**#x1B[0m#x1B[0masdict#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m**#x1B[0m#x1B[0mkwargs#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    143#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    144#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0mcheck_pickle#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\parameter.py#x1B[0m in #x1B[0;36m__init__#x1B[1;34m(self, strict_immutability, check_type, check_pickle, *args, **kwargs)#x1B[0m
#x1B[0;32m     68#x1B[0m             #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcheck_immutable#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m     69#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[0mcheck_type#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m---&gt; 70#x1B[1;33m             #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcheck_type#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m     71#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[0mcheck_pickle#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m     72#x1B[0m             #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mcheck_pickle#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\parameter.py#x1B[0m in #x1B[0;36mcheck_type#x1B[1;34m(self)#x1B[0m
#x1B[0;32m    134#x1B[0m                     str(true_type).split("'")[1] not in str(attr_type)):
#x1B[0;32m    135#x1B[0m                 #x1B[1;31m# weaker, but enables use of np.str, np.float, etc#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 136#x1B[1;33m                 raise Exception(typed_field+" in "+str(self.__class__) +
#x1B[0m#x1B[0;32m    137#x1B[0m                                 #x1B[1;34m" assigned incorrect type: "#x1B[0m #x1B[1;33m+#x1B[0m #x1B[0mstr#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mattr_type#x1B[0m#x1B[1;33m)#x1B[0m #x1B[1;33m+#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    138#x1B[0m                                 " (should be "+str(true_type)+")")

#x1B[1;31mException#x1B[0m: delay in &lt;class 'examples.pump.ex_pump.PumpParam'&gt; assigned incorrect type: &lt;class 'numpy.float64'&gt; (should be &lt;class 'int'&gt;)</failure></testcase><testcase classname="examples.pump.Parallelism_Tutorial.ipynb" name="" time="11.556"><failure message="#x1B[1;31mValueError#x1B[0m: Pool not running">---------------------------------------------------------------------------
endclasses_par, mdlhists = propagate.single_faults(mdl, pool=pool)
#tab_par = an.tabulate.simplefmea(endclasses_par)
endclasses, mdlhists = propagate.single_faults(mdl)
#tab = an.tabulate.simplefmea(endclasses)
#tab - tab_par
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mValueError#x1B[0m                                Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_8432/1153561868.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[0mendclasses_par#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmdlhists#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mpropagate#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0msingle_faults#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmdl#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mpool#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mpool#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m      2#x1B[0m #x1B[1;31m#tab_par = an.tabulate.simplefmea(endclasses_par)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m      3#x1B[0m #x1B[0mendclasses#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmdlhists#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mpropagate#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0msingle_faults#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmdl#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m      4#x1B[0m #x1B[1;31m#tab = an.tabulate.simplefmea(endclasses)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m      5#x1B[0m #x1B[1;31m#tab - tab_par#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\sim\propagate.py#x1B[0m in #x1B[0;36msingle_faults#x1B[1;34m(mdl, **kwargs)#x1B[0m
#x1B[0;32m    664#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    665#x1B[0m     #x1B[0mscenlist#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mlist_init_faults#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmdl#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 666#x1B[1;33m     results, mdlhists = scenlist_helper(mdl,
#x1B[0m#x1B[0;32m    667#x1B[0m                                         #x1B[0mscenlist#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    668#x1B[0m                                         #x1B[0mc_mdl#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\sim\propagate.py#x1B[0m in #x1B[0;36mscenlist_helper#x1B[1;34m(mdl, scenlist, c_mdl, **kwargs)#x1B[0m
#x1B[0;32m    700#x1B[0m             inputs = [(c_mdl[0], scen,  kwargs, str(i))
#x1B[0;32m    701#x1B[0m                       for i, scen in enumerate(scenlist)]
#x1B[1;32m--&gt; 702#x1B[1;33m         res_list = list(tqdm.tqdm(pool.map(exec_scen_par, inputs),
#x1B[0m#x1B[0;32m    703#x1B[0m                                   #x1B[0mtotal#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mlen#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0minputs#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    704#x1B[0m                                   #x1B[0mdisable#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;32mnot#x1B[0m #x1B[1;33m(#x1B[0m#x1B[0mshowprogress#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Anaconda3\lib\multiprocessing\pool.py#x1B[0m in #x1B[0;36mmap#x1B[1;34m(self, func, iterable, chunksize)#x1B[0m
#x1B[0;32m    362#x1B[0m         #x1B[1;32min#x1B[0m #x1B[0ma#x1B[0m #x1B[0mlist#x1B[0m #x1B[0mthat#x1B[0m #x1B[1;32mis#x1B[0m #x1B[0mreturned#x1B[0m#x1B[1;33m.#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    363#x1B[0m         '''
#x1B[1;32m--&gt; 364#x1B[1;33m         #x1B[1;32mreturn#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_map_async#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mfunc#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0miterable#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmapstar#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mchunksize#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mget#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    365#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    366#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0mstarmap#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mfunc#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0miterable#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mchunksize#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;32mNone#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Anaconda3\lib\multiprocessing\pool.py#x1B[0m in #x1B[0;36m_map_async#x1B[1;34m(self, func, iterable, mapper, chunksize, callback, error_callback)#x1B[0m
#x1B[0;32m    471#x1B[0m         #x1B[0mHelper#x1B[0m #x1B[0mfunction#x1B[0m #x1B[0mto#x1B[0m #x1B[0mimplement#x1B[0m #x1B[0mmap#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mstarmap#x1B[0m #x1B[1;32mand#x1B[0m #x1B[0mtheir#x1B[0m #x1B[1;32masync#x1B[0m #x1B[0mcounterparts#x1B[0m#x1B[1;33m.#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    472#x1B[0m         '''
#x1B[1;32m--&gt; 473#x1B[1;33m         #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_check_running#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    474#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[1;32mnot#x1B[0m #x1B[0mhasattr#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0miterable#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'__len__'#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    475#x1B[0m             #x1B[0miterable#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mlist#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0miterable#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Anaconda3\lib\multiprocessing\pool.py#x1B[0m in #x1B[0;36m_check_running#x1B[1;34m(self)#x1B[0m
#x1B[0;32m    348#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0m_check_running#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    349#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m_state#x1B[0m #x1B[1;33m!=#x1B[0m #x1B[0mRUN#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 350#x1B[1;33m             #x1B[1;32mraise#x1B[0m #x1B[0mValueError#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;34m"Pool not running"#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    351#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    352#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0mapply#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mfunc#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0margs#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mkwds#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;31mValueError#x1B[0m: Pool not running</failure></testcase><testcase classname="examples.pump.Pump_Example_Notebook.ipynb" name="" time="16.931" /><testcase classname="examples.pump.Stochastic_Modelling.ipynb" name="" time="48.974" /><testcase classname="examples.pump.Tutorial_complete.ipynb" name="" time="7.172" /><testcase classname="examples.pump.Tutorial_unfilled.ipynb" name="" time="5.097"><failure message="">---------------------------------------------------------------------------
                                                 desired_result=['endclass', 'graph'], track="all")
#x1B[1;36m  File #x1B[1;32m"C:\Users\dhulse\AppData\Local\Temp\1/ipykernel_10076/2080439979.py"#x1B[1;36m, line #x1B[1;32m1#x1B[0m
#x1B[1;33m    desired_result=['endclass', 'graph'], track="all")#x1B[0m
#x1B[1;37m                    ^#x1B[0m
#x1B[1;31mSyntaxError#x1B[0m#x1B[1;31m:#x1B[0m cannot assign to literal</failure></testcase><testcase classname="examples.pump.test_pump.PumpTests" name="test_app_prop_values" time="0.077" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_cost_calc" time="5.082"><failure message="AssertionError: 1799299.0952380954 != 1799153.8095238095 within 7 places (145.28571428591385 difference)">self = &lt;examples.pump.test_pump.PumpTests testMethod=test_approach_cost_calc&gt;

    def test_approach_cost_calc(self):
        """Test that the (linear) resilience loss function is perfectly approximated
        using the given sampling methods"""
        mdl = Pump(p={'cost':('ee', 'repair', 'water'), 'delay':0})
        app_full = SampleApproach(mdl, defaultsamp={'samp':'fullint'})
        full_util=exp_cost_quant(app_full,mdl)
    
        app_multipt = SampleApproach(mdl, defaultsamp={'samp':'evenspacing', 'numpts':3})
        multipt_util=exp_cost_quant(app_multipt,mdl)
&gt;       self.assertAlmostEqual(full_util, multipt_util)
E       AssertionError: 1799299.0952380954 != 1799153.8095238095 within 7 places (145.28571428591385 difference)

examples\pump\test_pump.py:79: AssertionError</failure></testcase><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_parallelism" time="14.138" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_approach_pruning" time="2.699"><failure message="AssertionError: Lists differ: [5.0, 6.0, 27.0] != [27.0]&#10;&#10;First differing element 0:&#10;5.0&#10;27.0&#10;&#10;First list contains 2 additional elements.&#10;First extra element 1:&#10;6.0&#10;&#10;- [5.0, 6.0, 27.0]&#10;+ [27.0]">self = &lt;examples.pump.test_pump.PumpTests testMethod=test_approach_pruning&gt;

    def test_approach_pruning(self):
        """Tests that sample approach pruning places points in the center of their
        respective intervals for linear resilience loss functions."""
        mdl = Pump(p={'cost':('ee', 'repair', 'water'), 'delay':0})
        app_full = SampleApproach(mdl, phases= ["on"], defaultsamp={'samp':'fullint'})
        app_center = SampleApproach(mdl, phases=["on"], defaultsamp={'samp':'evenspacing', 'numpts':1})
        endclasses, mdlhists = propagate.approach(mdl, app_full, showprogress=False)
        self.assertNotEqual(app_full.times, app_center.times)
        app_full.prune_scenarios(endclasses)
&gt;       self.assertEqual(app_full.times, app_center.times)
E       AssertionError: Lists differ: [5.0, 6.0, 27.0] != [27.0]
E       
E       First differing element 0:
E       5.0
E       27.0
E       
E       First list contains 2 additional elements.
E       First extra element 1:
E       6.0
E       
E       - [5.0, 6.0, 27.0]
E       + [27.0]

examples\pump\test_pump.py:103: AssertionError</failure></testcase><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values" time="0.075" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_dynamic_prop_values_2" time="0.161" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_fmea_options" time="0.576" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_different" time="0.347" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_copy_same" time="0.557" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_model_reset" time="0.622" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_csv" time="0.033" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_json" time="0.032" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_one_run_pickle" time="0.033" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_pickleability" time="0.009" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_approach" time="0.741" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_approach_indiv" time="0.964" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_multfault" time="0.091" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_nestedapproach" time="7.466" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_nestedapproach_indiv" time="7.802" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_nominal" time="0.060" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_nominalapproach" time="0.427" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_nominalapproach_indiv" time="0.539" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_onefault" time="0.090" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_singlefaults" time="0.897" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_save_load_singlefaults_indiv" time="1.210" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting" time="0.007" /><testcase classname="examples.pump.test_pump.PumpTests" name="test_value_setting_dict" time="0.007" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_inf_v" time="0.001" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_no_v" time="0.001" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_behave_nom" time="0.001" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_hi" time="0.001" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_condfaults_nom" time="0.001" /><testcase classname="examples.pump.test_pump_example.ImportEE_Tests" name="test_initialization" time="0.001" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_condfaults_dynamic" time="0.002" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_initialization" time="0.001" /><testcase classname="examples.pump.test_pump_example.MoveWat_Tests" name="test_nom" time="0.001" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_results" time="0.057" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_blockage_static" time="0.004" /><testcase classname="examples.pump.test_pump_example.Integration_Tests" name="test_nominal_results" time="0.029" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_different" time="0.397" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_copy_same" time="0.528" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_model_reset" time="0.674" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals" time="0.390" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_plot_nominal_vals_xd" time="1.097" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_approach" time="18.103" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_run_safety" time="3.493" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_save_load_nestedapproach" time="16.498" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_save_load_nestedapproach_indiv" time="17.210" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_save_load_nominalapproach" time="7.326" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_save_load_nominalapproach_indiv" time="7.352" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_set_seeds" time="0.029" /><testcase classname="examples.pump.test_pump_stochastic.StochasticPumpTests" name="test_stochastic_pdf" time="0.019" /><testcase classname="examples.rover.Approach_Use-Cases.ipynb" name="" time="3.777"><failure message="#x1B[1;31mAttributeError#x1B[0m: type object 'FxnBlock' has no attribute 'assoc_modes'">---------------------------------------------------------------------------
help(FxnBlock.assoc_modes)
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mAttributeError#x1B[0m                            Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_3224/414845463.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[0mhelp#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mFxnBlock#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0massoc_modes#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m
#x1B[1;31mAttributeError#x1B[0m: type object 'FxnBlock' has no attribute 'assoc_modes'</failure></testcase><testcase classname="examples.rover.Model_Structure_Visualization_Tutorial.ipynb" name="" time="23.378" /><testcase classname="examples.rover.Nominal_Approach_Use-Cases.ipynb" name="" time="3.981"><failure message="#x1B[1;31mException#x1B[0m: Invalid args/kwargs: () , {'times': [0, 60], 'tstep': 1, 'phases': {'start': [1, 30], 'end': [31, 60]}} in &lt;class 'fmdtools.define.parameter.Parameter'&gt;">---------------------------------------------------------------------------
mdl = Rover(params=gen_params('turn'))
results, mdlhist = prop.nominal(mdl)
plot_map(mdl, mdlhist)
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mTypeError#x1B[0m                                 Traceback (most recent call last)
#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\parameter.py#x1B[0m in #x1B[0;36m__init__#x1B[1;34m(self, strict_immutability, check_type, check_pickle, *args, **kwargs)#x1B[0m
#x1B[0;32m     62#x1B[0m         #x1B[1;32mtry#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m---&gt; 63#x1B[1;33m             #x1B[0msuper#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m__init__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m*#x1B[0m#x1B[0margs#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m**#x1B[0m#x1B[0mkwargs#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m     64#x1B[0m         #x1B[1;32mexcept#x1B[0m #x1B[0mTypeError#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;31mTypeError#x1B[0m: Invalid kwarg

During handling of the above exception, another exception occurred:

#x1B[1;31mException#x1B[0m                                 Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_7672/3250322124.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[0mmdl#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mRover#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mparams#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mgen_params#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;34m'turn'#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m      2#x1B[0m #x1B[0mresults#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmdlhist#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mprop#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mnominal#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmdl#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m      3#x1B[0m #x1B[0mplot_map#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmdl#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmdlhist#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_7672/2935710477.py#x1B[0m in #x1B[0;36m__init__#x1B[1;34m(self, params, modelparams, valparams)#x1B[0m
#x1B[0;32m    152#x1B[0m                  #x1B[0mmodelparams#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;34m'times'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m0#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;36m60#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'tstep'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;36m1#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'phases'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;34m'start'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m1#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;36m30#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'end'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m31#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;36m60#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m,#x1B[0m#x1B[0;31m\#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    153#x1B[0m                      valparams={}):
#x1B[1;32m--&gt; 154#x1B[1;33m         #x1B[0msuper#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m__init__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mparams#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmodelparams#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mvalparams#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    155#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    156#x1B[0m         #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0madd_flow#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;34m'Ground'#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m{#x1B[0m#x1B[1;34m'x'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;36m0.0#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;34m'y'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;36m0.0#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;34m'liney'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;36m0.0#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;34m'linex'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;36m0.0#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'vel'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;36m0.0#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'line'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;36m0.0#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'angle'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[0mparams#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;34m'initangle'#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'ang'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;36m0.0#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\model.py#x1B[0m in #x1B[0;36m__init__#x1B[1;34m(self, name, p, sp, r, track)#x1B[0m
#x1B[0;32m     51#x1B[0m     """
#x1B[0;32m     52#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0m__init__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mname#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m''#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mr#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mtrack#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m''#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m---&gt; 53#x1B[1;33m         #x1B[0msuper#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m__init__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mname#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mname#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0msp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mr#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mr#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mtrack#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mtrack#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m     54#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m     55#x1B[0m         #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mfxns#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mdict#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\block.py#x1B[0m in #x1B[0;36m__init__#x1B[1;34m(self, name, p, sp, r, track)#x1B[0m
#x1B[0;32m    131#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[1;32mnot#x1B[0m #x1B[0msp#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    132#x1B[0m             #x1B[0msp#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mdefault_sp#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 133#x1B[1;33m         #x1B[0minit_obj_attr#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msp#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0msp#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mr#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mr#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    134#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    135#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0madd_flow_hist#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mhist#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mtimerange#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mtrack#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\common.py#x1B[0m in #x1B[0;36minit_obj_attr#x1B[1;34m(obj, **attrs)#x1B[0m
#x1B[0;32m    189#x1B[0m         #x1B[0msetattr#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mobj#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'_args_'#x1B[0m#x1B[1;33m+#x1B[0m#x1B[0mat#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mat_arg#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    190#x1B[0m         #x1B[0minit_at#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mgetattr#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mobj#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;34m'_init_'#x1B[0m#x1B[1;33m+#x1B[0m#x1B[0mat#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 191#x1B[1;33m         #x1B[0msetattr#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mobj#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mat#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0minit_at#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m**#x1B[0m#x1B[0mat_arg#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    192#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    193#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\fmdtools\define\parameter.py#x1B[0m in #x1B[0;36m__init__#x1B[1;34m(self, strict_immutability, check_type, check_pickle, *args, **kwargs)#x1B[0m
#x1B[0;32m     63#x1B[0m             #x1B[0msuper#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m__init__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m*#x1B[0m#x1B[0margs#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m**#x1B[0m#x1B[0mkwargs#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m     64#x1B[0m         #x1B[1;32mexcept#x1B[0m #x1B[0mTypeError#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m---&gt; 65#x1B[1;33m             raise Exception("Invalid args/kwargs: "+str(args)+" , " +
#x1B[0m#x1B[0;32m     66#x1B[0m                             str(kwargs)+" in "+str(self.__class__))
#x1B[0;32m     67#x1B[0m         #x1B[1;32mif#x1B[0m #x1B[0mstrict_immutability#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;31mException#x1B[0m: Invalid args/kwargs: () , {'times': [0, 60], 'tstep': 1, 'phases': {'start': [1, 30], 'end': [31, 60]}} in &lt;class 'fmdtools.define.parameter.Parameter'&gt;</failure></testcase><testcase classname="examples.rover.Rover_Setup_Notebook.ipynb" name="" time="3.905"><failure message="#x1B[1;31mImportError#x1B[0m: cannot import name 'gen_params' from 'rover_model' (C:\Users\dhulse\Documents\GitHub\fmdtools\examples\rover\rover_model.py)">---------------------------------------------------------------------------
from rover_model import Rover, gen_params, plot_map, plot_trajectories
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mImportError#x1B[0m                               Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_12352/947193376.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mRover#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mgen_params#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_map#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_trajectories#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m
#x1B[1;31mImportError#x1B[0m: cannot import name 'gen_params' from 'rover_model' (C:\Users\dhulse\Documents\GitHub\fmdtools\examples\rover\rover_model.py)</failure></testcase><testcase classname="examples.rover.test_rover.RoverTests" name="test_obj_values" time="0.138"><failure message="AssertionError: 0.11329848698471573 != 0.5763384838180136">self = &lt;examples.rover.test_rover.RoverTests testMethod=test_obj_values&gt;

    def test_obj_values(self):
    
        testvalues = [[1.0,0.5,0.0],[0.0,0.0,0.0], [1.0,1.0,1.0], [0.5,0.5,0.5]]
        for testvalue in testvalues:
            dist_int,enddist_int, endpt_int = line_dist_faster(testvalue)
            dist,enddist, endpt = line_dist(testvalue)
    
&gt;           self.assertEqual(dist, dist_int)
E           AssertionError: 0.11329848698471573 != 0.5763384838180136

examples\rover\test_rover.py:20: AssertionError</failure></testcase><testcase classname="examples.rover.HFAC_Analyses.HFAC_Analyses.ipynb" name="" time="4.038"><failure message="#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model_human'">---------------------------------------------------------------------------
from rover_model_human import *
from rover_model import plot_trajectories, plot_map
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mModuleNotFoundError#x1B[0m                       Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_10568/4227275924.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model_human#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[1;33m*#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m      2#x1B[0m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mplot_trajectories#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_map#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model_human'</failure></testcase><testcase classname="examples.rover.HFAC_Analyses.IDETC_Human_Paper_Analysis.ipynb" name="" time="4.104"><failure message="#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model_human'">---------------------------------------------------------------------------
from rover_model_human import Rover, gen_params
from rover_model import plot_map, plot_trajectories
import fmdtools.analyze as an
import fmdtools.sim.propagate as prop
from fmdtools.sim.approach import SampleApproach, NominalApproach

import numpy as np
import matplotlib.pyplot as plt
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mModuleNotFoundError#x1B[0m                       Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_12284/1671020471.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model_human#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mRover#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mgen_params#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m      2#x1B[0m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mplot_map#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_trajectories#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m      3#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mfmdtools#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0manalyze#x1B[0m #x1B[1;32mas#x1B[0m #x1B[0man#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m      4#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mfmdtools#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0msim#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mpropagate#x1B[0m #x1B[1;32mas#x1B[0m #x1B[0mprop#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m      5#x1B[0m #x1B[1;32mfrom#x1B[0m #x1B[0mfmdtools#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0msim#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mapproach#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mSampleApproach#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mNominalApproach#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model_human'</failure></testcase><testcase classname="examples.rover.degradation_modelling.Degradation_Modelling_Notebook.ipynb" name="" time="3.770"><failure message="#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model_human'">---------------------------------------------------------------------------
from rover_model_human import *
from rover_model import plot_trajectories, plot_map
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mModuleNotFoundError#x1B[0m                       Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_9936/4227275924.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model_human#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[1;33m*#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m      2#x1B[0m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mplot_trajectories#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_map#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model_human'</failure></testcase><testcase classname="examples.rover.fault_sampling.Rover_Mode_Notebook.ipynb" name="" time="3.802"><failure message="#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model'">---------------------------------------------------------------------------
from rover_model import Rover, gen_params, plot_map, plot_trajectories, compare_trajectories, plot_course
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mModuleNotFoundError#x1B[0m                       Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_14188/2381073313.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mRover#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mgen_params#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_map#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_trajectories#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mcompare_trajectories#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_course#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m
#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model'</failure></testcase><testcase classname="examples.rover.optimization.Rover_Response_Optimization.ipynb" name="" time="3.773"><failure message="#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model'">---------------------------------------------------------------------------
from rover_model import Rover, gen_params, plot_map, plot_trajectories
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mModuleNotFoundError#x1B[0m                       Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_16688/947193376.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[1;32mfrom#x1B[0m #x1B[0mrover_model#x1B[0m #x1B[1;32mimport#x1B[0m #x1B[0mRover#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mgen_params#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_map#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mplot_trajectories#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m
#x1B[1;31mModuleNotFoundError#x1B[0m: No module named 'rover_model'</failure></testcase><testcase classname="examples.rover.optimization.Search_Comparison.ipynb" name="" time="208.236"><failure message="#x1B[1;31mTypeError#x1B[0m: __init__() got an unexpected keyword argument 'params'">---------------------------------------------------------------------------
result_mc, sol_mc= montecarlo(ngen=50, weight=0.5, filename='results/rslt_random.csv')
result_ea, sol_ea= ea(ngen=50, weight=0.5, filename='results/rslt_ea.csv')
result_ccea, sol_ccea, pop= ccea(ngen=50, weight=0.5, filename="results/rslt_ccea.csv")
#x1B[1;31m---------------------------------------------------------------------------#x1B[0m
#x1B[1;31mTypeError#x1B[0m                                 Traceback (most recent call last)
#x1B[1;32m~\AppData\Local\Temp\1/ipykernel_5312/2259828233.py#x1B[0m in #x1B[0;36m&lt;module&gt;#x1B[1;34m#x1B[0m
#x1B[1;32m----&gt; 1#x1B[1;33m #x1B[0mresult_mc#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msol_mc#x1B[0m#x1B[1;33m=#x1B[0m #x1B[0mmontecarlo#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mngen#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;36m50#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mweight#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;36m0.5#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mfilename#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m'results/rslt_random.csv'#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m      2#x1B[0m #x1B[0mresult_ea#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msol_ea#x1B[0m#x1B[1;33m=#x1B[0m #x1B[0mea#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mngen#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;36m50#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mweight#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;36m0.5#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mfilename#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m'results/rslt_ea.csv'#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m      3#x1B[0m #x1B[0mresult_ccea#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msol_ccea#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mpop#x1B[0m#x1B[1;33m=#x1B[0m #x1B[0mccea#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mngen#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;36m50#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mweight#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;36m0.5#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mfilename#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m"results/rslt_ccea.csv"#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Documents\GitHub\fmdtools\examples\rover\optimization\search_rover.py#x1B[0m in #x1B[0;36mmontecarlo#x1B[1;34m(verbose, ngen, show_sol, weight, filename, formulation)#x1B[0m
#x1B[0;32m    313#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    314#x1B[0m     #x1B[0msoln#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0msol_hist#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;33m-#x1B[0m#x1B[1;36m1#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 315#x1B[1;33m     #x1B[1;32mif#x1B[0m #x1B[0mshow_sol#x1B[0m#x1B[1;33m:#x1B[0m #x1B[0mvisualizations#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mlist#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0msoln#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmethod#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m"MC"#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    316#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    317#x1B[0m     #x1B[1;32mreturn#x1B[0m #x1B[0mrslt#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0msoln#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32m~\Documents\GitHub\fmdtools\examples\rover\optimization\search_rover.py#x1B[0m in #x1B[0;36mvisualizations#x1B[1;34m(soln, method, figsize, ax, legend, xlim, ylim)#x1B[0m
#x1B[0;32m    547#x1B[0m #x1B[1;32mdef#x1B[0m #x1B[0mvisualizations#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0msoln#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmethod#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m"EA"#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mfigsize#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;36m4#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;36m4#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0max#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;32mFalse#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mlegend#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;32mTrue#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mxlim#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m15#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;36m25#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mylim#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m[#x1B[0m#x1B[1;36m0#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;36m10#x1B[0m#x1B[1;33m]#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    548#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 549#x1B[1;33m     #x1B[0mmdl_range#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mrvr#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mRover#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mparams#x1B[0m#x1B[1;33m=#x1B[0m#x1B[0mrvr#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mRoverParam#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mlinetype#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m'turn'#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mstart#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;36m5.0#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mvalparams#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;34m'drive_modes'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[0mlist#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0msoln#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    550#x1B[0m     #x1B[0m_#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmdlhists#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mprop#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mnominal#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mmdl_range#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    551#x1B[0m     #x1B[0mphases#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mmodephases#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mmdlhists#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mget_modephases#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;32mc:\users\dhulse\documents\github\fmdtools\examples\rover\rover_model.py#x1B[0m in #x1B[0;36m__init__#x1B[1;34m(self, **kwargs)#x1B[0m
#x1B[0;32m    454#x1B[0m     #x1B[0mdefault_sp#x1B[0m #x1B[1;33m=#x1B[0m #x1B[0mdict#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mtimes#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;36m0#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;36m100#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mphases#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;34m'start'#x1B[0m#x1B[1;33m,#x1B[0m#x1B[1;36m0#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;36m30#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m(#x1B[0m#x1B[1;34m'end'#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;36m31#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;36m60#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0mend_condition#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;34m'indicate_finished'#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    455#x1B[0m     #x1B[1;32mdef#x1B[0m #x1B[0m__init__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m,#x1B[0m #x1B[1;33m**#x1B[0m#x1B[0mkwargs#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m:#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[1;32m--&gt; 456#x1B[1;33m         #x1B[0msuper#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0m__init__#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;33m**#x1B[0m#x1B[0mkwargs#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m
#x1B[0m#x1B[0;32m    457#x1B[0m #x1B[1;33m#x1B[0m#x1B[0m
#x1B[0;32m    458#x1B[0m         #x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0madd_flow#x1B[0m#x1B[1;33m(#x1B[0m#x1B[1;34m'ground'#x1B[0m#x1B[1;33m,#x1B[0m             #x1B[0mGround#x1B[0m#x1B[1;33m,#x1B[0m #x1B[0ms#x1B[0m#x1B[1;33m=#x1B[0m#x1B[1;33m{#x1B[0m#x1B[1;34m'angle'#x1B[0m#x1B[1;33m:#x1B[0m#x1B[0mself#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0mp#x1B[0m#x1B[1;33m.#x1B[0m#x1B[0minitangle#x1B[0m#x1B[1;33m}#x1B[0m#x1B[1;33m)#x1B[0m#x1B[1;33m#x1B[0m#x1B[1;33m#x1B[0m#x1B[0m

#x1B[1;31mTypeError#x1B[0m: __init__() got an unexpected keyword argument 'params'</failure></testcase><testcase classname="examples.tank.Tank_Analysis.ipynb" name="" time="10.219" /><testcase classname="examples.tank.Tank_Optimization.ipynb" name="" time="368.940" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach" time="0.577" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_0" time="6.198" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_1" time="6.473" /><testcase classname="examples.tank.test_tank.TankTests" name="test_approach_parallelism_notrack" time="5.846" /><testcase classname="examples.tank.test_tank.TankTests" name="test_comp_mode_inj" time="0.040" /><testcase classname="examples.tank.test_tank.TankTests" name="test_different_components" time="0.020" /><testcase classname="examples.tank.test_tank.TankTests" name="test_epc_math" time="0.009" /><testcase classname="examples.tank.test_tank.TankTests" name="test_local_tstep" time="0.071" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_different" time="0.296" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_copy_same" time="0.429" /><testcase classname="examples.tank.test_tank.TankTests" name="test_model_reset" time="0.424" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_approach" time="0.529" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_approach_indiv" time="0.794" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_multfault" time="0.070" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nestedapproach" time="5.362" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nestedapproach_indiv" time="5.512" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nominal" time="0.052" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nominalapproach" time="0.268" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_nominalapproach_indiv" time="0.430" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_onefault" time="0.068" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_singlefaults" time="2.091" /><testcase classname="examples.tank.test_tank.TankTests" name="test_save_load_singlefaults_indiv" time="3.209" /><testcase classname="examples.tank.test_tank.TankTests" name="test_tank_copy_args" time="0.028" /><testcase classname="examples.tank.test_tank_opt.TankOptTests" name="test_same_rcost" time="6.648" /><testcase classname="fmdtools.define.parameter" name="fmdtools.define.parameter.Parameter" time="0.007" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.add" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.assign" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.div" time="0.006" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.get" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.inc" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.limit" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.mul" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.put" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.roundto" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.same" time="0.006" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.set_atts" time="0.005" /><testcase classname="fmdtools.define.state" name="fmdtools.define.state.State.sub" time="0.005" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fault_plot" time="0.252" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_flowgraph_plot" time="0.143" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_fxngraph_plot" time="0.122" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_modelgraph_plot" time="0.196" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_result_from_plot" time="0.099" /><testcase classname="tests.test_graph.ModelGraphTests" name="test_typegraph_plot" time="0.057" /><testcase classname="tests.test_mode.ModeTests" name="test_mode_generation" time="0.001" /><testcase classname="tests.test_packages.define_Tests" name="test_pdf_translation_options" time="0.044" /></testsuite></testsuites>